{"batch":{"batch":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"1Om7mSBeJmF560s8","createdAt":{"$$date":1512840589205},"updatedAt":{"$$date":1512840589205}}
{"batch":{"batch":[]},"_id":"1c5zVSLGzc7m707z","createdAt":{"$$date":1513709231435},"updatedAt":{"$$date":1513709231435}}
{"batch":{"batch":[],"result":{"recordsets":[[{"uid":0,"status":0,"name":"public","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":131,"13":116,"14":27,"15":0,"16":103,"17":73,"18":192,"19":75,"20":169,"21":67,"22":192,"23":39,"24":2,"25":242,"26":167,"27":98},"roles":null,"createdate":{"$$date":1049793042317},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":0,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":1,"status":0,"name":"dbo","sid":{"0":1},"roles":null,"createdate":{"$$date":1049793042287},"updatedate":{"$$date":1049793042287},"altuid":null,"password":null,"gid":0,"environ":null,"hasdbaccess":1,"islogin":1,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":1,"isaliased":0,"issqlrole":0,"isapprole":0},{"uid":2,"status":0,"name":"guest","sid":{"0":0},"roles":null,"createdate":{"$$date":1049793042317},"updatedate":{"$$date":1049793042317},"altuid":null,"password":null,"gid":0,"environ":null,"hasdbaccess":1,"islogin":1,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":1,"isaliased":0,"issqlrole":0,"isapprole":0},{"uid":3,"status":0,"name":"INFORMATION_SCHEMA","sid":null,"roles":null,"createdate":{"$$date":1239627551717},"updatedate":{"$$date":1239627551717},"altuid":null,"password":null,"gid":0,"environ":null,"hasdbaccess":0,"islogin":1,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":1,"isaliased":0,"issqlrole":0,"isapprole":0},{"uid":4,"status":0,"name":"sys","sid":null,"roles":null,"createdate":{"$$date":1239627551717},"updatedate":{"$$date":1239627551717},"altuid":null,"password":null,"gid":0,"environ":null,"hasdbaccess":0,"islogin":1,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":1,"isaliased":0,"issqlrole":0,"isapprole":0},{"uid":16384,"status":0,"name":"db_owner","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042333},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16384,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16385,"status":0,"name":"db_accessadmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042333},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16385,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16386,"status":0,"name":"db_securityadmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":2,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042350},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16386,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16387,"status":0,"name":"db_ddladmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":3,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042350},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16387,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16389,"status":0,"name":"db_backupoperator","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":5,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042350},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16389,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16390,"status":0,"name":"db_datareader","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":6,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042363},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16390,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16391,"status":0,"name":"db_datawriter","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":7,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042363},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16391,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16392,"status":0,"name":"db_denydatareader","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":8,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042380},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16392,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16393,"status":0,"name":"db_denydatawriter","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":9,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042380},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16393,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0}]],"recordset":[{"uid":0,"status":0,"name":"public","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":131,"13":116,"14":27,"15":0,"16":103,"17":73,"18":192,"19":75,"20":169,"21":67,"22":192,"23":39,"24":2,"25":242,"26":167,"27":98},"roles":null,"createdate":{"$$date":1049793042317},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":0,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":1,"status":0,"name":"dbo","sid":{"0":1},"roles":null,"createdate":{"$$date":1049793042287},"updatedate":{"$$date":1049793042287},"altuid":null,"password":null,"gid":0,"environ":null,"hasdbaccess":1,"islogin":1,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":1,"isaliased":0,"issqlrole":0,"isapprole":0},{"uid":2,"status":0,"name":"guest","sid":{"0":0},"roles":null,"createdate":{"$$date":1049793042317},"updatedate":{"$$date":1049793042317},"altuid":null,"password":null,"gid":0,"environ":null,"hasdbaccess":1,"islogin":1,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":1,"isaliased":0,"issqlrole":0,"isapprole":0},{"uid":3,"status":0,"name":"INFORMATION_SCHEMA","sid":null,"roles":null,"createdate":{"$$date":1239627551717},"updatedate":{"$$date":1239627551717},"altuid":null,"password":null,"gid":0,"environ":null,"hasdbaccess":0,"islogin":1,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":1,"isaliased":0,"issqlrole":0,"isapprole":0},{"uid":4,"status":0,"name":"sys","sid":null,"roles":null,"createdate":{"$$date":1239627551717},"updatedate":{"$$date":1239627551717},"altuid":null,"password":null,"gid":0,"environ":null,"hasdbaccess":0,"islogin":1,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":1,"isaliased":0,"issqlrole":0,"isapprole":0},{"uid":16384,"status":0,"name":"db_owner","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042333},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16384,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16385,"status":0,"name":"db_accessadmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042333},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16385,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16386,"status":0,"name":"db_securityadmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":2,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042350},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16386,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16387,"status":0,"name":"db_ddladmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":3,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042350},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16387,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16389,"status":0,"name":"db_backupoperator","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":5,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042350},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16389,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16390,"status":0,"name":"db_datareader","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":6,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042363},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16390,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16391,"status":0,"name":"db_datawriter","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":7,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042363},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16391,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16392,"status":0,"name":"db_denydatareader","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":8,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042380},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16392,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0},{"uid":16393,"status":0,"name":"db_denydatawriter","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":9,"25":64,"26":0,"27":0},"roles":null,"createdate":{"$$date":1049793042380},"updatedate":{"$$date":1239627554467},"altuid":1,"password":null,"gid":16393,"environ":null,"hasdbaccess":0,"islogin":0,"isntname":0,"isntgroup":0,"isntuser":0,"issqluser":0,"isaliased":0,"issqlrole":1,"isapprole":0}],"output":{},"rowsAffected":[14]}},"_id":"21YZxKjtWEzXLPJU","createdAt":{"$$date":1513418317468},"updatedAt":{"$$date":1513418317468}}
{"batch":{"batch":[]},"_id":"2l48Y7WtHYa6Ka29","createdAt":{"$$date":1512358546277},"updatedAt":{"$$date":1512358546277}}
{"batch":{"batch":[]},"_id":"32IXZrgmlSw0kqkw","createdAt":{"$$date":1513812398750},"updatedAt":{"$$date":1513812398750}}
{"batch":{"query":[],"result":{"recordsets":[[{"":2}]],"recordset":[{"":2}],"output":{},"rowsAffected":[1]}},"_id":"3AZXOKxjlPn9sQHM","createdAt":{"$$date":1514997152140},"updatedAt":{"$$date":1514997152140}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"3HQCEpAD0KjXJOLE","createdAt":{"$$date":1513709008017},"updatedAt":{"$$date":1513709008017}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"3zY3S5rwOCB9upcO","createdAt":{"$$date":1512507712185},"updatedAt":{"$$date":1512507712185}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":3}]],"recordset":[{"":3}],"output":{},"rowsAffected":[1]}},"_id":"4F8E7uLEmSrye25F","createdAt":{"$$date":1512507347540},"updatedAt":{"$$date":1512507347540}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"4gEQm9wzuaJdcyxU","createdAt":{"$$date":1513768225801},"updatedAt":{"$$date":1513768225801}}
{"batch":{"batch":[]},"_id":"5CuzhXZddb1Lx2Pu","createdAt":{"$$date":1512500926582},"updatedAt":{"$$date":1512500926582}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"5Lswu8dGZA5MBmjz","createdAt":{"$$date":1512917808933},"updatedAt":{"$$date":1512917808933}}
{"batch":{"query":[]},"_id":"5NxICfqj0qBB49EK","createdAt":{"$$date":1514852267013},"updatedAt":{"$$date":1514852267013}}
{"batch":{"batch":[]},"_id":"5kswVmYQu19xbVUY","createdAt":{"$$date":1512484112795},"updatedAt":{"$$date":1512484112795}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"6FLY9uwCkrPKINk5","createdAt":{"$$date":1513794604172},"updatedAt":{"$$date":1513794604172}}
{"batch":{"batch":[]},"_id":"6YY6hZ7PQizZt994","createdAt":{"$$date":1513709316051},"updatedAt":{"$$date":1513709316051}}
{"batch":{"batch":[]},"_id":"6hxjA485YylXM3BP","createdAt":{"$$date":1512493932645},"updatedAt":{"$$date":1512493932645}}
{"batch":{"batch":[]},"_id":"6sImGGVmcBUBJ7K4","createdAt":{"$$date":1513279753404},"updatedAt":{"$$date":1513279753404}}
{"batch":{"batch":[]},"_id":"7CWr7DWcItnHb5Eu","createdAt":{"$$date":1514301737342},"updatedAt":{"$$date":1514301737342}}
{"batch":{"batch":[]},"_id":"9DxHc40ymxOqCEqU","createdAt":{"$$date":1514641621244},"updatedAt":{"$$date":1514641621244}}
{"batch":{"query":[],"result":{"recordsets":[[{"avg_logical_reads":"592635","avg_logical_writes":"4787","avg_physical_reads":"8","Execution_count":"1","statement_start_offset":0,"text":"WITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"486799","avg_logical_writes":"3825","avg_physical_reads":"0","Execution_count":"2","statement_start_offset":108,"text":"-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"14152","avg_logical_writes":"142","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":102,"text":"-- /home/bwunder/sqlpal/scripts/ringExceptions.sql\nWITH ExceptionCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]\n         , Data.ring_buffer_type AS [Type]\n         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]\n         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]\n         , Buffer.Record.value('@id', 'int') AS [Id]\n         , Data.EventXML\n    FROM (SELECT CAST(Record AS XML) AS EventXML\n               , ring_buffer_type\n          FROM sys.dm_os_ring_buffers\n          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n   )\nSELECT first.[Type]\n     , summary.[Error]\n     , CASE WHEN msg.message_id IS NOT NULL\n            THEN msg.text\n            ELSE 'no sys.messages row for Error'\n            END AS [External Message Info]\n     , summary.[count]\n     , DATEADD( second\n               , first.[Time] - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [FirstTime]\n     , DATEADD( second\n               , last.[Time]  - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Error]\n            , COUNT(*) AS [count]\n            , MIN(RowNumber) AS [FirstRow]\n            , MAX(RowNumber) AS [LastRow]\n       FROM ExceptionCte\n       GROUP BY [Error] ) AS [summary]\nJOIN ExceptionCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN ExceptionCTE AS last\nON last.RowNumber = summary.[LastRow]\nLEFT JOIN sys.messages msg\nON summary.Error = msg.message_id\nAND msg.language_id = 1033\nCROSS JOIN sys.dm_os_sys_info AS info\nORDER BY [Error];\n"},{"avg_logical_reads":"709","avg_logical_writes":"103","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"text":"-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset, CAST(p.query_plan AS XML) as query_plan, q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"},{"avg_logical_reads":"47","avg_logical_writes":"0","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":36,"text":"(@1 varchar(8000))SELECT [name],[value] FROM [sys].[extended_properties] WHERE [name]=@1"}]],"recordset":[{"avg_logical_reads":"592635","avg_logical_writes":"4787","avg_physical_reads":"8","Execution_count":"1","statement_start_offset":0,"text":"WITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"486799","avg_logical_writes":"3825","avg_physical_reads":"0","Execution_count":"2","statement_start_offset":108,"text":"-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"14152","avg_logical_writes":"142","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":102,"text":"-- /home/bwunder/sqlpal/scripts/ringExceptions.sql\nWITH ExceptionCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]\n         , Data.ring_buffer_type AS [Type]\n         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]\n         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]\n         , Buffer.Record.value('@id', 'int') AS [Id]\n         , Data.EventXML\n    FROM (SELECT CAST(Record AS XML) AS EventXML\n               , ring_buffer_type\n          FROM sys.dm_os_ring_buffers\n          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n   )\nSELECT first.[Type]\n     , summary.[Error]\n     , CASE WHEN msg.message_id IS NOT NULL\n            THEN msg.text\n            ELSE 'no sys.messages row for Error'\n            END AS [External Message Info]\n     , summary.[count]\n     , DATEADD( second\n               , first.[Time] - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [FirstTime]\n     , DATEADD( second\n               , last.[Time]  - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Error]\n            , COUNT(*) AS [count]\n            , MIN(RowNumber) AS [FirstRow]\n            , MAX(RowNumber) AS [LastRow]\n       FROM ExceptionCte\n       GROUP BY [Error] ) AS [summary]\nJOIN ExceptionCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN ExceptionCTE AS last\nON last.RowNumber = summary.[LastRow]\nLEFT JOIN sys.messages msg\nON summary.Error = msg.message_id\nAND msg.language_id = 1033\nCROSS JOIN sys.dm_os_sys_info AS info\nORDER BY [Error];\n"},{"avg_logical_reads":"709","avg_logical_writes":"103","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"text":"-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset, CAST(p.query_plan AS XML) as query_plan, q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"},{"avg_logical_reads":"47","avg_logical_writes":"0","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":36,"text":"(@1 varchar(8000))SELECT [name],[value] FROM [sys].[extended_properties] WHERE [name]=@1"}],"output":{},"rowsAffected":[5]}},"_id":"9mfbPi4KNbXXMCmU","createdAt":{"$$date":1515102417798},"updatedAt":{"$$date":1515102417798}}
{"batch":{"batch":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"AC4U4JxeijvoxZYw","createdAt":{"$$date":1512859681550},"updatedAt":{"$$date":1512859681550}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"user options","minimum":0,"maximum":32767,"config_value":0,"run_value":0}]],"recordset":[{"name":"user options","minimum":0,"maximum":32767,"config_value":0,"run_value":0}],"output":{},"rowsAffected":[]}},"_id":"CoqcnLZYEJXgnTDm","createdAt":{"$$date":1512911660303},"updatedAt":{"$$date":1512911660303}}
{"batch":{"query":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"Ct82GaUTvELYgOQw","createdAt":{"$$date":1514997130494},"updatedAt":{"$$date":1514997130494}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"D5YAEjqhqPjgqdTt","createdAt":{"$$date":1513388843799},"updatedAt":{"$$date":1513388843799}}
{"batch":{"batch":[]},"_id":"DafMPsLog1Z85krY","createdAt":{"$$date":1512497475868},"updatedAt":{"$$date":1512497475868}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}]],"recordset":[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}],"output":{},"rowsAffected":[5]}},"_id":"DjCqb0bFP9S4xAQk","createdAt":{"$$date":1512966863438},"updatedAt":{"$$date":1512966863438}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}]],"recordset":[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}],"output":{},"rowsAffected":[5]}},"_id":"EP7A3qNgyQHpj8Gt","createdAt":{"$$date":1512914222317},"updatedAt":{"$$date":1512914222317}}
{"batch":{"batch":[]},"_id":"FGvadDBVMI8p8ZyN","createdAt":{"$$date":1514059966870},"updatedAt":{"$$date":1514059966870}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"FimLXuEwcLvwU0aw","createdAt":{"$$date":1512589669583},"updatedAt":{"$$date":1512589669583}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"FzvLM29KSKJyANFL","createdAt":{"$$date":1512507052342},"updatedAt":{"$$date":1512507052342}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"G9MpEiCNcQBnta14","createdAt":{"$$date":1512929413215},"updatedAt":{"$$date":1512929413215}}
{"batch":{"query":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"GCOl0tAtv0XihgHM","createdAt":{"$$date":1515041209167},"updatedAt":{"$$date":1515041209167}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"GkHFxNfk94FStRlr","createdAt":{"$$date":1512961553491},"updatedAt":{"$$date":1512961553491}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"H5WsP8Rbt5SWqq1w","createdAt":{"$$date":1512588980544},"updatedAt":{"$$date":1512588980544}}
{"batch":{"batch":[]},"_id":"IQTERnKpkhMDKJhS","createdAt":{"$$date":1512358248004},"updatedAt":{"$$date":1512358248004}}
{"batch":{"batch":[]},"_id":"IrD8aHu0JzAEI0XH","createdAt":{"$$date":1512493490456},"updatedAt":{"$$date":1512493490456}}
{"batch":{"query":[],"result":{"recordsets":[[{"Database Name":"master","Recovery Model":"SIMPLE","Total Log Space (MB)":19.62,"Used Log Space (MB)":7.58,"Used Log Space %":38.65,"Used Log Space Since Last Backup (MB)":6.77,"log_reuse_wait_desc":"CHECKPOINT"}]],"recordset":[{"Database Name":"master","Recovery Model":"SIMPLE","Total Log Space (MB)":19.62,"Used Log Space (MB)":7.58,"Used Log Space %":38.65,"Used Log Space Since Last Backup (MB)":6.77,"log_reuse_wait_desc":"CHECKPOINT"}],"output":{},"rowsAffected":[1]}},"_id":"JdcgD7kVE68BpUtO","createdAt":{"$$date":1515093247176},"updatedAt":{"$$date":1515093247176}}
{"batch":{"query":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"JnNWyYcYMZHWRKDQ","createdAt":{"$$date":1515041124693},"updatedAt":{"$$date":1515041124693}}
{"batch":{"query":[],"result":{"recordsets":[[{"Type":"RING_BUFFER_CONNECTIVITY","count":213,"FirstTime":{"$$date":1514259691150},"LastTime":{"$$date":1515089171150}},{"Type":"RING_BUFFER_EXCEPTION","count":128,"FirstTime":{"$$date":1515090531150},"LastTime":{"$$date":1515091017150}},{"Type":"RING_BUFFER_EXCEPTION","count":256,"FirstTime":{"$$date":1515090230150},"LastTime":{"$$date":1515090889150}},{"Type":"RING_BUFFER_MEMORY_BROKER","count":12,"FirstTime":{"$$date":1514235610150},"LastTime":{"$$date":1514235609150}},{"Type":"RING_BUFFER_QE_MEM_BUFF_POOL_RESERVE","count":67,"FirstTime":{"$$date":1514261795150},"LastTime":{"$$date":1515091017150}},{"Type":"RING_BUFFER_RESOURCE_MONITOR","count":1,"FirstTime":{"$$date":1514235610150},"LastTime":{"$$date":1514235610150}},{"Type":"RING_BUFFER_SCHEDULER_MONITOR","count":256,"FirstTime":{"$$date":1515075689150},"LastTime":{"$$date":1515091014150}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":2850,"FirstTime":{"$$date":1514235912150},"LastTime":{"$$date":1515090815150}},{"Type":"RING_BUFFER_XE_BUFFER_STATE","count":152,"FirstTime":{"$$date":1514235610150},"LastTime":{"$$date":1515091014150}},{"Type":"RING_BUFFER_XE_LOG","count":512,"FirstTime":{"$$date":1514235610150},"LastTime":{"$$date":1514235609150}}]],"recordset":[{"Type":"RING_BUFFER_CONNECTIVITY","count":213,"FirstTime":{"$$date":1514259691150},"LastTime":{"$$date":1515089171150}},{"Type":"RING_BUFFER_EXCEPTION","count":128,"FirstTime":{"$$date":1515090531150},"LastTime":{"$$date":1515091017150}},{"Type":"RING_BUFFER_EXCEPTION","count":256,"FirstTime":{"$$date":1515090230150},"LastTime":{"$$date":1515090889150}},{"Type":"RING_BUFFER_MEMORY_BROKER","count":12,"FirstTime":{"$$date":1514235610150},"LastTime":{"$$date":1514235609150}},{"Type":"RING_BUFFER_QE_MEM_BUFF_POOL_RESERVE","count":67,"FirstTime":{"$$date":1514261795150},"LastTime":{"$$date":1515091017150}},{"Type":"RING_BUFFER_RESOURCE_MONITOR","count":1,"FirstTime":{"$$date":1514235610150},"LastTime":{"$$date":1514235610150}},{"Type":"RING_BUFFER_SCHEDULER_MONITOR","count":256,"FirstTime":{"$$date":1515075689150},"LastTime":{"$$date":1515091014150}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":2850,"FirstTime":{"$$date":1514235912150},"LastTime":{"$$date":1515090815150}},{"Type":"RING_BUFFER_XE_BUFFER_STATE","count":152,"FirstTime":{"$$date":1514235610150},"LastTime":{"$$date":1515091014150}},{"Type":"RING_BUFFER_XE_LOG","count":512,"FirstTime":{"$$date":1514235610150},"LastTime":{"$$date":1514235609150}}],"output":{},"rowsAffected":[10]}},"_id":"K0IH0YQ0WwAgHdkv","createdAt":{"$$date":1515091022045},"updatedAt":{"$$date":1515091022045}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}]],"recordset":[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}],"output":{},"rowsAffected":[]}},"_id":"KESU74W6SUFfJMO9","createdAt":{"$$date":1513709018126},"updatedAt":{"$$date":1513709018126}}
{"batch":{"batch":[]},"_id":"KQUx0YoyZuWCLcix","createdAt":{"$$date":1512349722716},"updatedAt":{"$$date":1512349722716}}
{"batch":{"batch":[]},"_id":"KXohr1gwEZ4hsHdF","createdAt":{"$$date":1514057325048},"updatedAt":{"$$date":1514057325048}}
{"batch":{"batch":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"MMxBzHfxNwrLmTrg","createdAt":{"$$date":1515102029726},"updatedAt":{"$$date":1515102029726}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"N9vKmrguEM5bPL0I","createdAt":{"$$date":1513038142630},"updatedAt":{"$$date":1513038142630}}
{"batch":{"batch":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"NN4XyuAN083TPuzH","createdAt":{"$$date":1512859574223},"updatedAt":{"$$date":1512859574223}}
{"batch":{"batch":[]},"_id":"Ne16lKQUR2GYltAA","createdAt":{"$$date":1513418601714},"updatedAt":{"$$date":1513418601714}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}]],"recordset":[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}],"output":{},"rowsAffected":[]}},"_id":"OXtmFYuqs3Vg2kWW","createdAt":{"$$date":1513709490324},"updatedAt":{"$$date":1513709490324}}
{"batch":{"batch":[]},"_id":"OfmMS4PJW6sK8ro0","createdAt":{"$$date":1512659580410},"updatedAt":{"$$date":1512659580410}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"QAe6kmnyStIhC3YZ","createdAt":{"$$date":1512911210275},"updatedAt":{"$$date":1512911210275}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"QYI3bCpcJEiC4zBM","createdAt":{"$$date":1512507208938},"updatedAt":{"$$date":1512507208938}}
{"batch":{"batch":[]},"_id":"QtKlCPYdeGNXx9bB","createdAt":{"$$date":1512410033277},"updatedAt":{"$$date":1512410033277}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"ROKdf4vjaxjTpyPN","createdAt":{"$$date":1512661042520},"updatedAt":{"$$date":1512661042520}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1513082222740},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}]],"recordset":[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1513082222740},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}],"output":{},"rowsAffected":[5]}},"_id":"S8rNSPAtLR3Vlbgu","createdAt":{"$$date":1513104251459},"updatedAt":{"$$date":1513104251459}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"SjwiuC3yQOPajf5t","createdAt":{"$$date":1513103901472},"updatedAt":{"$$date":1513103901472}}
{"batch":{"query":[]},"_id":"SmLPme6oOIq3vHp5","createdAt":{"$$date":1515101990878},"updatedAt":{"$$date":1515101990878}}
{"batch":{"batch":[]},"_id":"TOmVIklQSpyB59wo","createdAt":{"$$date":1513867495843},"updatedAt":{"$$date":1513867495843}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"two digit year cutoff","minimum":1753,"maximum":9999,"config_value":2049,"run_value":2049}]],"recordset":[{"name":"two digit year cutoff","minimum":1753,"maximum":9999,"config_value":2049,"run_value":2049}],"output":{},"rowsAffected":[]}},"_id":"TsMEQCZxiUchT2VS","createdAt":{"$$date":1513038166622},"updatedAt":{"$$date":1513038166622}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"public","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":131,"13":116,"14":27,"15":0,"16":103,"17":73,"18":192,"19":75,"20":169,"21":67,"22":192,"23":39,"24":2,"25":242,"26":167,"27":98}},{"name":"dbo","sid":{"0":1}},{"name":"guest","sid":{"0":0}},{"name":"INFORMATION_SCHEMA","sid":null},{"name":"sys","sid":null},{"name":"db_owner","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":64,"26":0,"27":0}},{"name":"db_accessadmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":64,"26":0,"27":0}},{"name":"db_securityadmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":2,"25":64,"26":0,"27":0}},{"name":"db_ddladmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":3,"25":64,"26":0,"27":0}},{"name":"db_backupoperator","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":5,"25":64,"26":0,"27":0}},{"name":"db_datareader","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":6,"25":64,"26":0,"27":0}},{"name":"db_datawriter","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":7,"25":64,"26":0,"27":0}},{"name":"db_denydatareader","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":8,"25":64,"26":0,"27":0}},{"name":"db_denydatawriter","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":9,"25":64,"26":0,"27":0}}]],"recordset":[{"name":"public","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":131,"13":116,"14":27,"15":0,"16":103,"17":73,"18":192,"19":75,"20":169,"21":67,"22":192,"23":39,"24":2,"25":242,"26":167,"27":98}},{"name":"dbo","sid":{"0":1}},{"name":"guest","sid":{"0":0}},{"name":"INFORMATION_SCHEMA","sid":null},{"name":"sys","sid":null},{"name":"db_owner","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":64,"26":0,"27":0}},{"name":"db_accessadmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":64,"26":0,"27":0}},{"name":"db_securityadmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":2,"25":64,"26":0,"27":0}},{"name":"db_ddladmin","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":3,"25":64,"26":0,"27":0}},{"name":"db_backupoperator","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":5,"25":64,"26":0,"27":0}},{"name":"db_datareader","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":6,"25":64,"26":0,"27":0}},{"name":"db_datawriter","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":7,"25":64,"26":0,"27":0}},{"name":"db_denydatareader","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":8,"25":64,"26":0,"27":0}},{"name":"db_denydatawriter","sid":{"0":1,"1":5,"2":0,"3":0,"4":0,"5":0,"6":0,"7":9,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":9,"25":64,"26":0,"27":0}}],"output":{},"rowsAffected":[14]}},"_id":"VwVwNuJFXAg2EyR9","createdAt":{"$$date":1513418399571},"updatedAt":{"$$date":1513418399571}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":7}]],"recordset":[{"":7}],"output":{},"rowsAffected":[1]}},"_id":"WDZGkl8B3Thu1SPC","createdAt":{"$$date":1512507553657},"updatedAt":{"$$date":1512507553657}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"xp_cmdshell","minimum":0,"maximum":1,"config_value":0,"run_value":0}]],"recordset":[{"name":"xp_cmdshell","minimum":0,"maximum":1,"config_value":0,"run_value":0}],"output":{},"rowsAffected":[]}},"_id":"WH5aLetpnZI4bktT","createdAt":{"$$date":1513778391188},"updatedAt":{"$$date":1513778391188}}
{"batch":{"batch":[]},"_id":"XD0kG0TLXdFVGSub","createdAt":{"$$date":1513693660508},"updatedAt":{"$$date":1513693660508}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"XDQxcvgnSMaSwZ2J","createdAt":{"$$date":1513700818601},"updatedAt":{"$$date":1513700818601}}
{"batch":{"batch":[]},"_id":"XPfXGEuWueAWHG6L","createdAt":{"$$date":1513264396673},"updatedAt":{"$$date":1513264396673}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":39}]],"recordset":[{"":39}],"output":{},"rowsAffected":[1]}},"_id":"XisN8sjeqQdD8Ogb","createdAt":{"$$date":1512507304720},"updatedAt":{"$$date":1512507304720}}
{"batch":{"batch":[]},"_id":"Xoj0KL0ah7VaA0rZ","createdAt":{"$$date":1512493784902},"updatedAt":{"$$date":1512493784902}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"XrZFvTOZYZhVzQ3o","createdAt":{"$$date":1512967431710},"updatedAt":{"$$date":1512967431710}}
{"batch":{"batch":[],"result":{"recordsets":[[{"gp":1}]],"recordset":[{"gp":1}],"output":{},"rowsAffected":[1]}},"_id":"YO73QOIlfmMun0IX","createdAt":{"$$date":1512507194097},"updatedAt":{"$$date":1512507194097}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"YeF1iD8HA8WAK2Lv","createdAt":{"$$date":1513103851967},"updatedAt":{"$$date":1513103851967}}
{"batch":{"query":[],"result":{"recordsets":[[{"Type":"RING_BUFFER_EXCEPTION","Error":2601,"External Message Info":"Cannot insert duplicate key row in object '%.*ls' with unique index '%.*ls'. The duplicate key value is %ls.","count":253,"FirstTime":{"$$date":2384473112383},"LastTime":{"$$date":2385376369383}},{"Type":"RING_BUFFER_EXCEPTION","Error":25623,"External Message Info":"The %S_MSG name, \"%.*ls\", is invalid, or the object could not be found","count":3,"FirstTime":{"$$date":2384774868383},"LastTime":{"$$date":2385376272383}}]],"recordset":[{"Type":"RING_BUFFER_EXCEPTION","Error":2601,"External Message Info":"Cannot insert duplicate key row in object '%.*ls' with unique index '%.*ls'. The duplicate key value is %ls.","count":253,"FirstTime":{"$$date":2384473112383},"LastTime":{"$$date":2385376369383}},{"Type":"RING_BUFFER_EXCEPTION","Error":25623,"External Message Info":"The %S_MSG name, \"%.*ls\", is invalid, or the object could not be found","count":3,"FirstTime":{"$$date":2384774868383},"LastTime":{"$$date":2385376272383}}],"output":{},"rowsAffected":[2]}},"_id":"YtToq4N0CgXtmT75","createdAt":{"$$date":1515100887783},"updatedAt":{"$$date":1515100887783}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":"63fe05e40911"}]],"recordset":[{"":"63fe05e40911"}],"output":{},"rowsAffected":[1]}},"_id":"Z9qk4Hi7l6hYyPDU","createdAt":{"$$date":1512507753374},"updatedAt":{"$$date":1512507753374}}
{"batch":{"batch":[]},"_id":"ZGI6vt8SjQdgzpjT","createdAt":{"$$date":1514641226721},"updatedAt":{"$$date":1514641226721}}
{"batch":{"batch":[],"result":{"recordsets":[[]],"recordset":[],"output":{},"rowsAffected":[0]}},"_id":"ZKPryvolQ1ktGc9j","createdAt":{"$$date":1512913571806},"updatedAt":{"$$date":1512913571806}}
{"batch":{"batch":[]},"_id":"Zj1WRrnK4gBTuVKl","createdAt":{"$$date":1513709243132},"updatedAt":{"$$date":1513709243132}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}]],"recordset":[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}],"output":{},"rowsAffected":[]}},"_id":"ZyBT8j716OfUzJTw","createdAt":{"$$date":1513701019174},"updatedAt":{"$$date":1513701019174}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"user options","minimum":0,"maximum":32767,"config_value":0,"run_value":0}]],"recordset":[{"name":"user options","minimum":0,"maximum":32767,"config_value":0,"run_value":0}],"output":{},"rowsAffected":[]}},"_id":"a7OHnjKnxuKjnIh2","createdAt":{"$$date":1512911692739},"updatedAt":{"$$date":1512911692739}}
{"batch":{"batch":[]},"_id":"aGKbbFaUNIUQEpSX","createdAt":{"$$date":1512497446489},"updatedAt":{"$$date":1512497446489}}
{"batch":{"batch":[],"result":{"recordsets":[[{"Type":"RING_BUFFER_EXCEPTION","count":128,"FirstTime":{"$$date":1515085013383},"LastTime":{"$$date":1515085502383}},{"Type":"RING_BUFFER_MEMORY_BROKER","count":12,"FirstTime":{"$$date":1514235608383},"LastTime":{"$$date":1514235608383}},{"Type":"RING_BUFFER_RESOURCE_MONITOR","count":1,"FirstTime":{"$$date":1514235609383},"LastTime":{"$$date":1514235608383}},{"Type":"RING_BUFFER_SCHEDULER_MONITOR","count":256,"FirstTime":{"$$date":1515072148383},"LastTime":{"$$date":1515085499383}},{"Type":"RING_BUFFER_SCHEDULER_MONITOR","count":256,"FirstTime":{"$$date":1515084688383},"LastTime":{"$$date":1515085369383}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":212,"FirstTime":{"$$date":1514272216383},"LastTime":{"$$date":1515083549383}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":63,"FirstTime":{"$$date":1514274616383},"LastTime":{"$$date":1515085502383}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":2832,"FirstTime":{"$$date":1514248512383},"LastTime":{"$$date":1515085409383}},{"Type":"RING_BUFFER_XE_BUFFER_STATE","count":136,"FirstTime":{"$$date":1514235609383},"LastTime":{"$$date":1515085499383}},{"Type":"RING_BUFFER_XE_LOG","count":512,"FirstTime":{"$$date":1514235608383},"LastTime":{"$$date":1514235608383}}]],"recordset":[{"Type":"RING_BUFFER_EXCEPTION","count":128,"FirstTime":{"$$date":1515085013383},"LastTime":{"$$date":1515085502383}},{"Type":"RING_BUFFER_MEMORY_BROKER","count":12,"FirstTime":{"$$date":1514235608383},"LastTime":{"$$date":1514235608383}},{"Type":"RING_BUFFER_RESOURCE_MONITOR","count":1,"FirstTime":{"$$date":1514235609383},"LastTime":{"$$date":1514235608383}},{"Type":"RING_BUFFER_SCHEDULER_MONITOR","count":256,"FirstTime":{"$$date":1515072148383},"LastTime":{"$$date":1515085499383}},{"Type":"RING_BUFFER_SCHEDULER_MONITOR","count":256,"FirstTime":{"$$date":1515084688383},"LastTime":{"$$date":1515085369383}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":212,"FirstTime":{"$$date":1514272216383},"LastTime":{"$$date":1515083549383}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":63,"FirstTime":{"$$date":1514274616383},"LastTime":{"$$date":1515085502383}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":2832,"FirstTime":{"$$date":1514248512383},"LastTime":{"$$date":1515085409383}},{"Type":"RING_BUFFER_XE_BUFFER_STATE","count":136,"FirstTime":{"$$date":1514235609383},"LastTime":{"$$date":1515085499383}},{"Type":"RING_BUFFER_XE_LOG","count":512,"FirstTime":{"$$date":1514235608383},"LastTime":{"$$date":1514235608383}}],"output":{},"rowsAffected":[10]}},"_id":"aK72ty80PajHjNpa","createdAt":{"$$date":1515085508956},"updatedAt":{"$$date":1515085508956}}
{"batch":{"batch":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"aLMUMZlctc7KzEBr","createdAt":{"$$date":1512840452611},"updatedAt":{"$$date":1512840452611}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}]],"recordset":[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}],"output":{},"rowsAffected":[5]}},"_id":"ac8bkQdDitUQKBce","createdAt":{"$$date":1512913593261},"updatedAt":{"$$date":1512913593261}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"c7L42ia4GjKyW2Bw","createdAt":{"$$date":1513693745816},"updatedAt":{"$$date":1513693745816}}
{"batch":{"batch":[]},"_id":"cETDNnfXoTqcU0lq","createdAt":{"$$date":1512493970148},"updatedAt":{"$$date":1512493970148}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":"63fe05e40911"}]],"recordset":[{"":"63fe05e40911"}],"output":{},"rowsAffected":[1]}},"_id":"cFcszN0dBraR1Haj","createdAt":{"$$date":1512673599221},"updatedAt":{"$$date":1512673599221}}
{"batch":{"query":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"ccQ3GhFpy0MLmSrL","createdAt":{"$$date":1515102019845},"updatedAt":{"$$date":1515102019845}}
{"batch":{"batch":[],"result":{"recordsets":[[{"Server Name":"63fe05e40911"}]],"recordset":[{"Server Name":"63fe05e40911"}],"output":{},"rowsAffected":[1]}},"_id":"dDfWv8cwzeb9zqYX","createdAt":{"$$date":1512507778469},"updatedAt":{"$$date":1512507778469}}
{"batch":{"batch":[]},"_id":"dHHKxhglgy3trfMb","createdAt":{"$$date":1513418505610},"updatedAt":{"$$date":1513418505610}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":2}]],"recordset":[{"":2}],"output":{},"rowsAffected":[1]}},"_id":"dJlLrPdgw83JJJga","createdAt":{"$$date":1512507418016},"updatedAt":{"$$date":1512507418016}}
{"batch":{"batch":[]},"_id":"dTVwSozjhHH5DKkn","createdAt":{"$$date":1513269527876},"updatedAt":{"$$date":1513269527876}}
{"batch":{"batch":[]},"_id":"dyfPMUX3BgvJ2K4a","createdAt":{"$$date":1513867595859},"updatedAt":{"$$date":1513867595859}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}]],"recordset":[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}],"output":{},"rowsAffected":[]}},"_id":"eKijv2bBzVqlcUfL","createdAt":{"$$date":1513700858929},"updatedAt":{"$$date":1513700858929}}
{"batch":{"batch":[]},"_id":"fI8wTWVqdgBV2ZTQ","createdAt":{"$$date":1512494259460},"updatedAt":{"$$date":1512494259460}}
{"batch":{"query":[],"result":{"recordsets":[[{"name":"xp_cmdshell","minimum":0,"maximum":1,"config_value":0,"run_value":0}]],"recordset":[{"name":"xp_cmdshell","minimum":0,"maximum":1,"config_value":0,"run_value":0}],"output":{},"rowsAffected":[]}},"_id":"gEXTC4GNCFwIS1Lv","createdAt":{"$$date":1515078673337},"updatedAt":{"$$date":1515078673337}}
{"batch":{"query":[],"result":{"recordsets":[[{"avg_logical_reads":"592635","avg_logical_writes":"4787","avg_physical_reads":"8","Execution_count":"1","statement_start_offset":0,"":"\n\rWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"486799","avg_logical_writes":"3825","avg_physical_reads":"0","Execution_count":"2","statement_start_offset":108,"":"\n\r-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"14152","avg_logical_writes":"142","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":102,"":"\n\r-- /home/bwunder/sqlpal/scripts/ringExceptions.sql\nWITH ExceptionCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]\n         , Data.ring_buffer_type AS [Type]\n         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]\n         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]\n         , Buffer.Record.value('@id', 'int') AS [Id]\n         , Data.EventXML\n    FROM (SELECT CAST(Record AS XML) AS EventXML\n               , ring_buffer_type\n          FROM sys.dm_os_ring_buffers\n          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n   )\nSELECT first.[Type]\n     , summary.[Error]\n     , CASE WHEN msg.message_id IS NOT NULL\n            THEN msg.text\n            ELSE 'no sys.messages row for Error'\n            END AS [External Message Info]\n     , summary.[count]\n     , DATEADD( second\n               , first.[Time] - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [FirstTime]\n     , DATEADD( second\n               , last.[Time]  - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Error]\n            , COUNT(*) AS [count]\n            , MIN(RowNumber) AS [FirstRow]\n            , MAX(RowNumber) AS [LastRow]\n       FROM ExceptionCte\n       GROUP BY [Error] ) AS [summary]\nJOIN ExceptionCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN ExceptionCTE AS last\nON last.RowNumber = summary.[LastRow]\nLEFT JOIN sys.messages msg\nON summary.Error = msg.message_id\nAND msg.language_id = 1033\nCROSS JOIN sys.dm_os_sys_info AS info\nORDER BY [Error];\n"},{"avg_logical_reads":"709","avg_logical_writes":"103","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"":"\n\r-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset, CAST(p.query_plan AS XML) as query_plan, q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"},{"avg_logical_reads":"249","avg_logical_writes":"9","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"":"\n\r-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset, q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"}]],"recordset":[{"avg_logical_reads":"592635","avg_logical_writes":"4787","avg_physical_reads":"8","Execution_count":"1","statement_start_offset":0,"":"\n\rWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"486799","avg_logical_writes":"3825","avg_physical_reads":"0","Execution_count":"2","statement_start_offset":108,"":"\n\r-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"14152","avg_logical_writes":"142","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":102,"":"\n\r-- /home/bwunder/sqlpal/scripts/ringExceptions.sql\nWITH ExceptionCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]\n         , Data.ring_buffer_type AS [Type]\n         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]\n         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]\n         , Buffer.Record.value('@id', 'int') AS [Id]\n         , Data.EventXML\n    FROM (SELECT CAST(Record AS XML) AS EventXML\n               , ring_buffer_type\n          FROM sys.dm_os_ring_buffers\n          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n   )\nSELECT first.[Type]\n     , summary.[Error]\n     , CASE WHEN msg.message_id IS NOT NULL\n            THEN msg.text\n            ELSE 'no sys.messages row for Error'\n            END AS [External Message Info]\n     , summary.[count]\n     , DATEADD( second\n               , first.[Time] - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [FirstTime]\n     , DATEADD( second\n               , last.[Time]  - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Error]\n            , COUNT(*) AS [count]\n            , MIN(RowNumber) AS [FirstRow]\n            , MAX(RowNumber) AS [LastRow]\n       FROM ExceptionCte\n       GROUP BY [Error] ) AS [summary]\nJOIN ExceptionCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN ExceptionCTE AS last\nON last.RowNumber = summary.[LastRow]\nLEFT JOIN sys.messages msg\nON summary.Error = msg.message_id\nAND msg.language_id = 1033\nCROSS JOIN sys.dm_os_sys_info AS info\nORDER BY [Error];\n"},{"avg_logical_reads":"709","avg_logical_writes":"103","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"":"\n\r-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset, CAST(p.query_plan AS XML) as query_plan, q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"},{"avg_logical_reads":"249","avg_logical_writes":"9","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"":"\n\r-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset, q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"}],"output":{},"rowsAffected":[5]}},"_id":"gsBzFUML0jejAq2o","createdAt":{"$$date":1515102791543},"updatedAt":{"$$date":1515102791543}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"h7vHmMD9XhPU6tnO","createdAt":{"$$date":1512910982263},"updatedAt":{"$$date":1512910982263}}
{"batch":{"query":[],"result":{"recordsets":[[{"Type":"RING_BUFFER_CONNECTIVITY","count":212,"FirstTime":{"$$date":1514259691617},"LastTime":{"$$date":1515083188617}},{"Type":"RING_BUFFER_EXCEPTION","count":256,"FirstTime":{"$$date":1515084713617},"LastTime":{"$$date":1515085770617}},{"Type":"RING_BUFFER_MEMORY_BROKER","count":12,"FirstTime":{"$$date":1514235609617},"LastTime":{"$$date":1514235608617}},{"Type":"RING_BUFFER_MEMORY_BROKER_CLERKS","count":128,"FirstTime":{"$$date":1515085193617},"LastTime":{"$$date":1515085775617}},{"Type":"RING_BUFFER_QE_MEM_BUFF_POOL_RESERVE","count":65,"FirstTime":{"$$date":1514261795617},"LastTime":{"$$date":1515085775617}},{"Type":"RING_BUFFER_RESOURCE_MONITOR","count":1,"FirstTime":{"$$date":1514235610617},"LastTime":{"$$date":1514235609617}},{"Type":"RING_BUFFER_SCHEDULER_MONITOR","count":256,"FirstTime":{"$$date":1515070888617},"LastTime":{"$$date":1515085775617}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":2833,"FirstTime":{"$$date":1514235911617},"LastTime":{"$$date":1515085708617}},{"Type":"RING_BUFFER_XE_BUFFER_STATE","count":144,"FirstTime":{"$$date":1514235610617},"LastTime":{"$$date":1515085775617}},{"Type":"RING_BUFFER_XE_LOG","count":512,"FirstTime":{"$$date":1514235609617},"LastTime":{"$$date":1514235609617}}]],"recordset":[{"Type":"RING_BUFFER_CONNECTIVITY","count":212,"FirstTime":{"$$date":1514259691617},"LastTime":{"$$date":1515083188617}},{"Type":"RING_BUFFER_EXCEPTION","count":256,"FirstTime":{"$$date":1515084713617},"LastTime":{"$$date":1515085770617}},{"Type":"RING_BUFFER_MEMORY_BROKER","count":12,"FirstTime":{"$$date":1514235609617},"LastTime":{"$$date":1514235608617}},{"Type":"RING_BUFFER_MEMORY_BROKER_CLERKS","count":128,"FirstTime":{"$$date":1515085193617},"LastTime":{"$$date":1515085775617}},{"Type":"RING_BUFFER_QE_MEM_BUFF_POOL_RESERVE","count":65,"FirstTime":{"$$date":1514261795617},"LastTime":{"$$date":1515085775617}},{"Type":"RING_BUFFER_RESOURCE_MONITOR","count":1,"FirstTime":{"$$date":1514235610617},"LastTime":{"$$date":1514235609617}},{"Type":"RING_BUFFER_SCHEDULER_MONITOR","count":256,"FirstTime":{"$$date":1515070888617},"LastTime":{"$$date":1515085775617}},{"Type":"RING_BUFFER_SECURITY_CACHE","count":2833,"FirstTime":{"$$date":1514235911617},"LastTime":{"$$date":1515085708617}},{"Type":"RING_BUFFER_XE_BUFFER_STATE","count":144,"FirstTime":{"$$date":1514235610617},"LastTime":{"$$date":1515085775617}},{"Type":"RING_BUFFER_XE_LOG","count":512,"FirstTime":{"$$date":1514235609617},"LastTime":{"$$date":1514235609617}}],"output":{},"rowsAffected":[10]}},"_id":"hSAGPTsOORHMtMeT","createdAt":{"$$date":1515085780505},"updatedAt":{"$$date":1515085780505}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"set working set size","minimum":0,"maximum":1,"config_value":0,"run_value":0}]],"recordset":[{"name":"set working set size","minimum":0,"maximum":1,"config_value":0,"run_value":0}],"output":{},"rowsAffected":[]}},"_id":"ht0Yaba87MN8WM2K","createdAt":{"$$date":1513193980837},"updatedAt":{"$$date":1513193980837}}
{"batch":{"batch":[]},"_id":"iXPnU4W7ipUzQW3x","createdAt":{"$$date":1512493074283},"updatedAt":{"$$date":1512493074283}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512150568603},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}]],"recordset":[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512150568603},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}],"output":{},"rowsAffected":[5]}},"_id":"k7OT3Zy89il5zkQk","createdAt":{"$$date":1512507876973},"updatedAt":{"$$date":1512507876973}}
{"batch":{"batch":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"kLxiCBxD60chplva","createdAt":{"$$date":1512840879438},"updatedAt":{"$$date":1512840879438}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}]],"recordset":[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}],"output":{},"rowsAffected":[]}},"_id":"kM6J0UenqgOlHgIK","createdAt":{"$$date":1513709354154},"updatedAt":{"$$date":1513709354154}}
{"batch":{"batch":[]},"_id":"kfGKz8bIG1OEnj7J","createdAt":{"$$date":1512410395867},"updatedAt":{"$$date":1512410395867}}
{"batch":{"batch":[]},"_id":"lMael6rslq5wkFMB","createdAt":{"$$date":1512765946167},"updatedAt":{"$$date":1512765946167}}
{"batch":{"batch":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"lP1maTtVyxKWFqyY","createdAt":{"$$date":1512840983679},"updatedAt":{"$$date":1512840983679}}
{"batch":{"batch":[]},"_id":"lQ6wF9yO7FDTdgeS","createdAt":{"$$date":1513709255542},"updatedAt":{"$$date":1513709255542}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"mrFWx5mh8K9X0jPy","createdAt":{"$$date":1513193922326},"updatedAt":{"$$date":1513193922326}}
{"batch":{"query":[]},"_id":"nAiuNmOKfR9gv2Al","createdAt":{"$$date":1515101914550},"updatedAt":{"$$date":1515101914550}}
{"batch":{"query":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"oThjSbiFoVLeSab8","createdAt":{"$$date":1515075127367},"updatedAt":{"$$date":1515075127367}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}]],"recordset":[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}],"output":{},"rowsAffected":[5]}},"_id":"p7VIK8r2JM10g8ly","createdAt":{"$$date":1512914673842},"updatedAt":{"$$date":1512914673842}}
{"batch":{"query":[],"result":{"recordsets":[[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}]],"recordset":[{"name":"access check cache bucket count","value":0,"value_in_use":0,"minimum":0,"maximum":65536,"description":"Default hash bucket count for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"access check cache quota","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Default quota for the access check result security cache","is_dynamic":true,"is_advanced":true},{"name":"Ad Hoc Distributed Queries","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ad Hoc Distributed Queries","is_dynamic":true,"is_advanced":true},{"name":"affinity I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity mask","is_dynamic":true,"is_advanced":true},{"name":"affinity64 I/O mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 I/O mask","is_dynamic":false,"is_advanced":true},{"name":"affinity64 mask","value":0,"value_in_use":0,"minimum":-2147483648,"maximum":2147483647,"description":"affinity64 mask","is_dynamic":true,"is_advanced":true},{"name":"Agent XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Agent XPs","is_dynamic":true,"is_advanced":true},{"name":"allow polybase export","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow INSERT into a Hadoop external table","is_dynamic":true,"is_advanced":false},{"name":"allow updates","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow updates to system tables","is_dynamic":true,"is_advanced":false},{"name":"automatic soft-NUMA disabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Automatic soft-NUMA is enabled by default","is_dynamic":false,"is_advanced":true},{"name":"backup checksum default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable checksum of backups by default","is_dynamic":true,"is_advanced":false},{"name":"backup compression default","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable compression of backups by default","is_dynamic":true,"is_advanced":false},{"name":"blocked process threshold (s)","value":0,"value_in_use":0,"minimum":0,"maximum":86400,"description":"Blocked process reporting threshold","is_dynamic":true,"is_advanced":true},{"name":"c2 audit mode","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"c2 audit mode","is_dynamic":false,"is_advanced":true},{"name":"clr enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"CLR user code execution enabled in the server","is_dynamic":true,"is_advanced":false},{"name":"clr strict security","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"CLR strict security enabled in the server","is_dynamic":true,"is_advanced":true},{"name":"common criteria compliance enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Common Criteria compliance mode enabled","is_dynamic":false,"is_advanced":true},{"name":"contained database authentication","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enables contained databases and contained authentication","is_dynamic":true,"is_advanced":false},{"name":"cost threshold for parallelism","value":5,"value_in_use":5,"minimum":0,"maximum":32767,"description":"cost threshold for parallelism","is_dynamic":true,"is_advanced":true},{"name":"cross db ownership chaining","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow cross db ownership chaining","is_dynamic":true,"is_advanced":false},{"name":"cursor threshold","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"cursor threshold","is_dynamic":true,"is_advanced":true},{"name":"Database Mail XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Database Mail XPs","is_dynamic":true,"is_advanced":true},{"name":"default full-text language","value":1033,"value_in_use":1033,"minimum":0,"maximum":2147483647,"description":"default full-text language","is_dynamic":true,"is_advanced":true},{"name":"default language","value":0,"value_in_use":0,"minimum":0,"maximum":9999,"description":"default language","is_dynamic":true,"is_advanced":false},{"name":"default trace enabled","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable the default trace","is_dynamic":true,"is_advanced":true},{"name":"disallow results from triggers","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Disallow returning results from triggers","is_dynamic":true,"is_advanced":true},{"name":"EKM provider enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable EKM provider","is_dynamic":true,"is_advanced":true},{"name":"external scripts enabled","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allows execution of external scripts","is_dynamic":false,"is_advanced":false},{"name":"filestream access level","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Sets the FILESTREAM access level","is_dynamic":true,"is_advanced":false},{"name":"fill factor (%)","value":0,"value_in_use":0,"minimum":0,"maximum":100,"description":"Default fill factor percentage","is_dynamic":false,"is_advanced":true},{"name":"ft crawl bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft crawl bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text crawl buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (max)","value":100,"value_in_use":100,"minimum":0,"maximum":32767,"description":"Max number of full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"ft notify bandwidth (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of reserved full-text notifications buffers","is_dynamic":true,"is_advanced":true},{"name":"hadoop connectivity","value":0,"value_in_use":0,"minimum":0,"maximum":7,"description":"Configure SQL Server to connect to external Hadoop or Microsoft Azure storage blob data sources through PolyBase","is_dynamic":false,"is_advanced":false},{"name":"index create memory (KB)","value":0,"value_in_use":0,"minimum":704,"maximum":2147483647,"description":"Memory for index create sorts (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"in-doubt xact resolution","value":0,"value_in_use":0,"minimum":0,"maximum":2,"description":"Recovery policy for DTC transactions with unknown outcome","is_dynamic":true,"is_advanced":true},{"name":"lightweight pooling","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"User mode scheduler uses lightweight pooling","is_dynamic":false,"is_advanced":true},{"name":"locks","value":0,"value_in_use":0,"minimum":5000,"maximum":2147483647,"description":"Number of locks for all users","is_dynamic":false,"is_advanced":true},{"name":"max degree of parallelism","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"maximum degree of parallelism","is_dynamic":true,"is_advanced":true},{"name":"max full-text crawl range","value":4,"value_in_use":4,"minimum":0,"maximum":256,"description":"Maximum  crawl ranges allowed in full-text indexing","is_dynamic":true,"is_advanced":true},{"name":"max server memory (MB)","value":2147483647,"value_in_use":2147483647,"minimum":128,"maximum":2147483647,"description":"Maximum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"max text repl size (B)","value":65536,"value_in_use":65536,"minimum":-1,"maximum":2147483647,"description":"Maximum size of a text field in replication.","is_dynamic":true,"is_advanced":false},{"name":"max worker threads","value":0,"value_in_use":0,"minimum":128,"maximum":65535,"description":"Maximum worker threads","is_dynamic":true,"is_advanced":true},{"name":"media retention","value":0,"value_in_use":0,"minimum":0,"maximum":365,"description":"Tape retention period in days","is_dynamic":true,"is_advanced":true},{"name":"min memory per query (KB)","value":1024,"value_in_use":1024,"minimum":512,"maximum":2147483647,"description":"minimum memory per query (kBytes)","is_dynamic":true,"is_advanced":true},{"name":"min server memory (MB)","value":0,"value_in_use":16,"minimum":0,"maximum":2147483647,"description":"Minimum size of server memory (MB)","is_dynamic":true,"is_advanced":true},{"name":"nested triggers","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow triggers to be invoked within triggers","is_dynamic":true,"is_advanced":false},{"name":"network packet size (B)","value":4096,"value_in_use":4096,"minimum":512,"maximum":32767,"description":"Network packet size","is_dynamic":true,"is_advanced":true},{"name":"Ole Automation Procedures","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Ole Automation Procedures","is_dynamic":true,"is_advanced":true},{"name":"open objects","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Number of open database objects","is_dynamic":false,"is_advanced":true},{"name":"optimize for ad hoc workloads","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"When this option is set, plan cache size is further reduced for single-use adhoc OLTP workload.","is_dynamic":true,"is_advanced":true},{"name":"PH timeout (s)","value":60,"value_in_use":60,"minimum":1,"maximum":3600,"description":"DB connection timeout for full-text protocol handler (s)","is_dynamic":true,"is_advanced":true},{"name":"polybase network encryption","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Configure SQL Server to encrypt control and data channels when using PolyBase","is_dynamic":false,"is_advanced":false},{"name":"precompute rank","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Use precomputed rank for full-text query","is_dynamic":true,"is_advanced":true},{"name":"priority boost","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Priority boost","is_dynamic":false,"is_advanced":true},{"name":"query governor cost limit","value":0,"value_in_use":0,"minimum":0,"maximum":2147483647,"description":"Maximum estimated cost allowed by query governor","is_dynamic":true,"is_advanced":true},{"name":"query wait (s)","value":-1,"value_in_use":-1,"minimum":-1,"maximum":2147483647,"description":"maximum time to wait for query memory (s)","is_dynamic":true,"is_advanced":true},{"name":"recovery interval (min)","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Maximum recovery interval in minutes","is_dynamic":true,"is_advanced":true},{"name":"remote access","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow remote access","is_dynamic":false,"is_advanced":false},{"name":"remote admin connections","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Dedicated Admin Connections are allowed from remote clients","is_dynamic":true,"is_advanced":false},{"name":"remote data archive","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Allow the use of the REMOTE_DATA_ARCHIVE data access for databases","is_dynamic":true,"is_advanced":false},{"name":"remote login timeout (s)","value":10,"value_in_use":10,"minimum":0,"maximum":2147483647,"description":"remote login timeout","is_dynamic":true,"is_advanced":false},{"name":"remote proc trans","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Create DTC transaction for remote procedures","is_dynamic":true,"is_advanced":false},{"name":"remote query timeout (s)","value":600,"value_in_use":600,"minimum":0,"maximum":2147483647,"description":"remote query timeout","is_dynamic":true,"is_advanced":false},{"name":"Replication XPs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable Replication XPs","is_dynamic":true,"is_advanced":true},{"name":"scan for startup procs","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"scan for startup stored procedures","is_dynamic":false,"is_advanced":true},{"name":"server trigger recursion","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Allow recursion for server level triggers","is_dynamic":true,"is_advanced":false},{"name":"set working set size","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"set working set size","is_dynamic":false,"is_advanced":true},{"name":"show advanced options","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"show advanced options","is_dynamic":true,"is_advanced":false},{"name":"SMO and DMO XPs","value":1,"value_in_use":1,"minimum":0,"maximum":1,"description":"Enable or disable SMO and DMO XPs","is_dynamic":true,"is_advanced":true},{"name":"transform noise words","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Transform noise words for full-text query","is_dynamic":true,"is_advanced":true},{"name":"two digit year cutoff","value":2049,"value_in_use":2049,"minimum":1753,"maximum":9999,"description":"two digit year cutoff","is_dynamic":true,"is_advanced":true},{"name":"user connections","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"Number of user connections allowed","is_dynamic":false,"is_advanced":true},{"name":"user options","value":0,"value_in_use":0,"minimum":0,"maximum":32767,"description":"user options","is_dynamic":true,"is_advanced":false},{"name":"xp_cmdshell","value":0,"value_in_use":0,"minimum":0,"maximum":1,"description":"Enable or disable command shell","is_dynamic":true,"is_advanced":true}],"output":{},"rowsAffected":[77]}},"_id":"pOiMHojuytmWprdk","createdAt":{"$$date":1515023170129},"updatedAt":{"$$date":1515023170129}}
{"batch":{"batch":[],"result":{"recordsets":[[{"avg_logical_reads":"592635","avg_logical_writes":"4787","avg_physical_reads":"8","Execution_count":"1","statement_start_offset":0,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"WITH BufferTypeCte&#x0A;AS (&#x0A;    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )&#x0A;                                     , Buffer.Record.value( '@id', 'INT' )&#x0A;                                     , Data.[Address]&#x0A;                                     , Data.[Type] ) AS [RowNumber]&#x0A;          , Data.[Address]&#x0A;          , Data.[Type]&#x0A;          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]&#x0A;          , Buffer.Record.value('@id', 'INT') AS [Id]&#x0A;          , Data.EventXML&#x0A;    FROM (  SELECT CAST(b.Record AS XML) AS EventXML&#x0A;             , b.ring_buffer_address AS [Address]&#x0A;             , b.ring_buffer_type AS [Type]&#x0A;             , i.ms_ticks&#x0A;        FROM sys.dm_os_ring_buffers b&#x0A;        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]&#x0A;    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)&#x0A;  )&#x0A;SELECT first.[Type]&#x0A;     , summary.[count]&#x0A;     , first.[Time] AS [FirstTime]&#x0A;     , last.[Time] AS [LastTime]&#x0A;--     , first.EventXML AS [FirstRecord]&#x0A;--     , last.EventXML AS [LastRecord]&#x0A;FROM (SELECT [Type]&#x0A;           , COUNT( RowNumber ) AS [count]&#x0A;           , MIN( RowNumber ) AS [FirstRow]&#x0A;           , MAX( RowNumber ) AS [LastRow]&#x0A;      FROM BufferTypeCTE&#x0A;      GROUP BY [Type]&#x0A;    ) AS summary&#x0A;JOIN BufferTypeCTE AS first&#x0A;ON first.RowNumber = summary.[FirstRow]&#x0A;JOIN BufferTypeCTE AS last&#x0A;ON last.RowNumber = summary.[LastRow]&#x0A;--ORDER BY [FirstTime];&#x0A;--ORDER BY [LastTime];&#x0A;ORDER BY [Type]\" StatementId=\"1\" StatementCompId=\"1\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"1.54081e+006\" StatementEstRows=\"1.02458e+009\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xEBEC0AF035D58E74\" QueryPlanHash=\"0x01B56B4ECCCCC5EA\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"360\" CompileTime=\"34\" CompileCPU=\"34\" CompileMemory=\"5184\"><ThreadStat Branches=\"5\"/><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"2560\" SerialDesiredMemory=\"2062312\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4715368\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"102.458\" AvgRowSize=\"91\" EstimatedTotalSubtreeCost=\"1.54081e+006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1049\"/><ColumnReference Column=\"Expr1075\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1049\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,([Expr1048]-SYSINFO.[ms_ticks])/(1000),0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"DIV\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1048\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1082\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1075\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,([Expr1074]-SYSINFO.[ms_ticks])/(1000),0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"DIV\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1074\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1083\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"10713.3\" AvgRowSize=\"107\" EstimatedTotalSubtreeCost=\"1.5407e+006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1074\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"2\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"67716\" AvgRowSize=\"107\" EstimatedTotalSubtreeCost=\"1.52999e+006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1074\"/></OutputList><NestedLoops Optimized=\"0\"><Predicate><ScalarOperator ScalarString=\"[Expr1028]=[Expr1070]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1028\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1070\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate><RelOp NodeId=\"3\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"0.00563063\" EstimateCPU=\"7.2118\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"903467\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/></OutputList><MemoryFractions Input=\"0.0148484\" Output=\"0.507669\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"4\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"903460\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"5\" PhysicalOp=\"Hash Match\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.803326\" AvgRowSize=\"4569\" EstimatedTotalSubtreeCost=\"723392\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><MemoryFractions Input=\"0.000504124\" Output=\"0.000489379\"/><Hash><DefinedValues/><HashKeysBuild><ColumnReference Column=\"Expr1027\"/></HashKeysBuild><HashKeysProbe><ColumnReference Column=\"Expr1044\"/></HashKeysProbe><ProbeResidual><ScalarOperator ScalarString=\"[Expr1044]=[Expr1027]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1027\"/></Identifier></ScalarOperator></Compare></ScalarOperator></ProbeResidual><RelOp NodeId=\"6\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"0.0286247\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/></OutputList><Parallelism PartitioningType=\"Broadcast\"><RelOp NodeId=\"7\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1026\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1105],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1105\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"8\" PhysicalOp=\"Hash Match\" LogicalOp=\"Aggregate\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1.22173\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Column=\"Expr1105\"/></OutputList><MemoryFractions Input=\"0.000286011\" Output=\"0.507165\"/><Hash><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1105\"/><ScalarOperator ScalarString=\"COUNT([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"COUNT_BIG\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1027\"/><ScalarOperator ScalarString=\"MIN([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1028\"/><ScalarOperator ScalarString=\"MAX([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MAX\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><HashKeysBuild><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></HashKeysBuild><BuildResidual><ScalarOperator ScalarString=\"SYSRINGBUFFERS.[ring_buffer_type] = SYSRINGBUFFERS.[ring_buffer_type]\"><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></Identifier></ScalarOperator></Compare></ScalarOperator></BuildResidual><RelOp NodeId=\"9\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"79\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1015\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1015\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"10\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"79\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/><ColumnReference Column=\"Segment1104\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1104\"/></SegmentColumn><RelOp NodeId=\"11\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"101\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"[Expr1008]\"><Identifier><ColumnReference Column=\"Expr1008\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1014\"/><ScalarOperator ScalarString=\"[Expr1013]\"><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"12\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"1.7119\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"13\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"0.00563063\" EstimateCPU=\"7.2118\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361147\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><MemoryFractions Input=\"0.507669\" Output=\"0.507383\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"14\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361140\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"15\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"181072\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"16\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4555\" EstimatedTotalSubtreeCost=\"1004.5\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/></OuterReferences><RelOp NodeId=\"17\" PhysicalOp=\"Parallelism\" LogicalOp=\"Repartition Streams\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.171094\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.202786\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"18\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00209\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.0316926\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"19\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0285013\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"0.0285024\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"20\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><TableValuedFunction><DefinedValues/><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></Parallelism></RelOp><RelOp NodeId=\"21\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1000\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"22\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></Parallelism></RelOp><RelOp NodeId=\"23\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"24\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1000] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"25\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1008\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"26\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"27\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"28\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1013\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"29\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"30\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp></Hash></RelOp></ComputeScalar></RelOp></Parallelism></RelOp><RelOp NodeId=\"31\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"57.2742\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362241\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1044\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"32\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1044\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1044\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"33\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1038\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/><ColumnReference Column=\"Segment1106\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1106\"/></SegmentColumn><RelOp NodeId=\"34\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"4588\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1038\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1038\"/><ScalarOperator ScalarString=\"[Expr1037]\"><Identifier><ColumnReference Column=\"Expr1037\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1043\"/><ScalarOperator ScalarString=\"[Expr1042]\"><Identifier><ColumnReference Column=\"Expr1042\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"35\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"29.7004\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1037\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1042\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"36\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"1013.51\" EstimateCPU=\"1.30291\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"362154\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><MemoryFractions Input=\"0.507165\" Output=\"0.492331\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1037\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1042\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"37\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"361140\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"38\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4571\" EstimatedTotalSubtreeCost=\"181072\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"39\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"1004.5\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/></OuterReferences><RelOp NodeId=\"40\" PhysicalOp=\"Parallelism\" LogicalOp=\"Repartition Streams\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.171611\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.203305\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"41\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00209\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.0316935\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"42\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0285021\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"0.0285033\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"43\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></Parallelism></RelOp><RelOp NodeId=\"44\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1029\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1029\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"45\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></Parallelism></RelOp><RelOp NodeId=\"46\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"47\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1029] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"48\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1037\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1037\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"49\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"50\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"51\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1042\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1042\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"52\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"53\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp></Parallelism></RelOp></Hash></RelOp><RelOp NodeId=\"54\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1048\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1048\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"55\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"56\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp><RelOp NodeId=\"57\" PhysicalOp=\"Table Spool\" LogicalOp=\"Lazy Spool\" EstimateRows=\"180000\" EstimateIO=\"0.01\" EstimateCPU=\"0.0325003\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"549088\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"179999\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1070\"/><ColumnReference Column=\"Expr1074\"/></OutputList><Spool><RelOp NodeId=\"58\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"543238\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1070\"/><ColumnReference Column=\"Expr1074\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"59\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"4503\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1070\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1070\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"60\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"4503\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1064\"/><ColumnReference Column=\"Expr1068\"/><ColumnReference Column=\"Expr1069\"/><ColumnReference Column=\"Segment1107\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1107\"/></SegmentColumn><RelOp NodeId=\"61\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"4588\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1064\"/><ColumnReference Column=\"Expr1068\"/><ColumnReference Column=\"Expr1069\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1064\"/><ScalarOperator ScalarString=\"[Expr1063]\"><Identifier><ColumnReference Column=\"Expr1063\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1069\"/><ScalarOperator ScalarString=\"[Expr1068]\"><Identifier><ColumnReference Column=\"Expr1068\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"62\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"2027.03\" EstimateCPU=\"2.60582\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1068\"/></OutputList><MemoryFractions Input=\"0.492331\" Output=\"0.492331\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1063\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1068\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"63\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"361141\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1068\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"64\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4571\" EstimatedTotalSubtreeCost=\"181073\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"65\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"1004.85\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/></OuterReferences><RelOp NodeId=\"66\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00418\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.00528131\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"67\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp><RelOp NodeId=\"68\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1055\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1055\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"69\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp><RelOp NodeId=\"70\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"71\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1055] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"72\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1063\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1063\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"73\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"74\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"75\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1068\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1068\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"76\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"77\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"78\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1074\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1074\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"79\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"80\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Spool></RelOp></NestedLoops></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></QueryPlan></StmtSimple></Statements></Batch></BatchSequence></ShowPlanXML>","text":"WITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"486799","avg_logical_writes":"3825","avg_physical_reads":"0","Execution_count":"2","statement_start_offset":108,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql&#x0A;WITH BufferTypeCte&#x0A;AS (&#x0A;    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )&#x0A;                                     , Buffer.Record.value( '@id', 'INT' )&#x0A;                                     , Data.[Address]&#x0A;                                     , Data.[Type] ) AS [RowNumber]&#x0A;          , Data.[Address]&#x0A;          , Data.[Type]&#x0A;          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]&#x0A;          , Buffer.Record.value('@id', 'INT') AS [Id]&#x0A;          , Data.EventXML&#x0A;    FROM (  SELECT CAST(b.Record AS XML) AS EventXML&#x0A;             , b.ring_buffer_address AS [Address]&#x0A;             , b.ring_buffer_type AS [Type]&#x0A;             , i.ms_ticks&#x0A;        FROM sys.dm_os_ring_buffers b&#x0A;        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]&#x0A;    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)&#x0A;  )&#x0A;SELECT first.[Type]&#x0A;     , summary.[count]&#x0A;     , first.[Time] AS [FirstTime]&#x0A;     , last.[Time] AS [LastTime]&#x0A;--     , first.EventXML AS [FirstRecord]&#x0A;--     , last.EventXML AS [LastRecord]&#x0A;FROM (SELECT [Type]&#x0A;           , COUNT( RowNumber ) AS [count]&#x0A;           , MIN( RowNumber ) AS [FirstRow]&#x0A;           , MAX( RowNumber ) AS [LastRow]&#x0A;      FROM BufferTypeCTE&#x0A;      GROUP BY [Type]&#x0A;    ) AS summary&#x0A;JOIN BufferTypeCTE AS first&#x0A;ON first.RowNumber = summary.[FirstRow]&#x0A;JOIN BufferTypeCTE AS last&#x0A;ON last.RowNumber = summary.[LastRow]&#x0A;--ORDER BY [FirstTime];&#x0A;--ORDER BY [LastTime];&#x0A;ORDER BY [Type]\" StatementId=\"1\" StatementCompId=\"1\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"1.54081e+006\" StatementEstRows=\"1.02458e+009\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xEBEC0AF035D58E74\" QueryPlanHash=\"0x01B56B4ECCCCC5EA\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"360\" CompileTime=\"29\" CompileCPU=\"29\" CompileMemory=\"5184\"><ThreadStat Branches=\"5\"/><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"2560\" SerialDesiredMemory=\"2062312\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4767440\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"102.458\" AvgRowSize=\"91\" EstimatedTotalSubtreeCost=\"1.54081e+006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1049\"/><ColumnReference Column=\"Expr1075\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1049\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,([Expr1048]-SYSINFO.[ms_ticks])/(1000),0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"DIV\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1048\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1082\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1075\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,([Expr1074]-SYSINFO.[ms_ticks])/(1000),0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"DIV\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1074\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1083\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"10713.3\" AvgRowSize=\"107\" EstimatedTotalSubtreeCost=\"1.5407e+006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1074\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"2\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"67716\" AvgRowSize=\"107\" EstimatedTotalSubtreeCost=\"1.52999e+006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1074\"/></OutputList><NestedLoops Optimized=\"0\"><Predicate><ScalarOperator ScalarString=\"[Expr1028]=[Expr1070]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1028\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1070\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate><RelOp NodeId=\"3\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"0.00563063\" EstimateCPU=\"7.2118\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"903467\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/></OutputList><MemoryFractions Input=\"0.0148484\" Output=\"0.507669\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"4\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"903460\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"5\" PhysicalOp=\"Hash Match\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.803326\" AvgRowSize=\"4569\" EstimatedTotalSubtreeCost=\"723392\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><MemoryFractions Input=\"0.000504124\" Output=\"0.000489379\"/><Hash><DefinedValues/><HashKeysBuild><ColumnReference Column=\"Expr1027\"/></HashKeysBuild><HashKeysProbe><ColumnReference Column=\"Expr1044\"/></HashKeysProbe><ProbeResidual><ScalarOperator ScalarString=\"[Expr1044]=[Expr1027]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1027\"/></Identifier></ScalarOperator></Compare></ScalarOperator></ProbeResidual><RelOp NodeId=\"6\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"0.0286247\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/></OutputList><Parallelism PartitioningType=\"Broadcast\"><RelOp NodeId=\"7\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1026\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1105],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1105\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"8\" PhysicalOp=\"Hash Match\" LogicalOp=\"Aggregate\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1.22173\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Column=\"Expr1105\"/></OutputList><MemoryFractions Input=\"0.000286011\" Output=\"0.507165\"/><Hash><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1105\"/><ScalarOperator ScalarString=\"COUNT([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"COUNT_BIG\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1027\"/><ScalarOperator ScalarString=\"MIN([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1028\"/><ScalarOperator ScalarString=\"MAX([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MAX\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><HashKeysBuild><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></HashKeysBuild><BuildResidual><ScalarOperator ScalarString=\"SYSRINGBUFFERS.[ring_buffer_type] = SYSRINGBUFFERS.[ring_buffer_type]\"><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></Identifier></ScalarOperator></Compare></ScalarOperator></BuildResidual><RelOp NodeId=\"9\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"79\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1015\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1015\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"10\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"79\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/><ColumnReference Column=\"Segment1104\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1104\"/></SegmentColumn><RelOp NodeId=\"11\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"101\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"[Expr1008]\"><Identifier><ColumnReference Column=\"Expr1008\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1014\"/><ScalarOperator ScalarString=\"[Expr1013]\"><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"12\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"1.7119\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"13\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"0.00563063\" EstimateCPU=\"7.2118\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361147\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><MemoryFractions Input=\"0.507669\" Output=\"0.507383\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"14\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361140\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"15\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"181072\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"16\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4555\" EstimatedTotalSubtreeCost=\"1004.5\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/></OuterReferences><RelOp NodeId=\"17\" PhysicalOp=\"Parallelism\" LogicalOp=\"Repartition Streams\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.171094\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.202786\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"18\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00209\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.0316926\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"19\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0285013\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"0.0285024\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"20\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><TableValuedFunction><DefinedValues/><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></Parallelism></RelOp><RelOp NodeId=\"21\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1000\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"22\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></Parallelism></RelOp><RelOp NodeId=\"23\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"24\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1000] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"25\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1008\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"26\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"27\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"28\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1013\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"29\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"30\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp></Hash></RelOp></ComputeScalar></RelOp></Parallelism></RelOp><RelOp NodeId=\"31\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"57.2742\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362241\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1044\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"32\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1044\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1044\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"33\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1038\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/><ColumnReference Column=\"Segment1106\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1106\"/></SegmentColumn><RelOp NodeId=\"34\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"4588\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1038\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1038\"/><ScalarOperator ScalarString=\"[Expr1037]\"><Identifier><ColumnReference Column=\"Expr1037\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1043\"/><ScalarOperator ScalarString=\"[Expr1042]\"><Identifier><ColumnReference Column=\"Expr1042\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"35\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"29.7004\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1037\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1042\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"36\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"1013.51\" EstimateCPU=\"1.30291\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"362154\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><MemoryFractions Input=\"0.507165\" Output=\"0.492331\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1037\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1042\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"37\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"361140\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"38\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4571\" EstimatedTotalSubtreeCost=\"181072\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"39\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"1004.5\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/></OuterReferences><RelOp NodeId=\"40\" PhysicalOp=\"Parallelism\" LogicalOp=\"Repartition Streams\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.171611\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.203305\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"41\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00209\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.0316935\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"42\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0285021\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"0.0285033\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"43\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></Parallelism></RelOp><RelOp NodeId=\"44\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1029\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1029\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"45\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></Parallelism></RelOp><RelOp NodeId=\"46\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"47\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1029] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"48\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1037\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1037\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"49\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"50\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"51\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1042\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1042\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"52\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"53\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp></Parallelism></RelOp></Hash></RelOp><RelOp NodeId=\"54\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1048\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1048\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"55\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"56\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp><RelOp NodeId=\"57\" PhysicalOp=\"Table Spool\" LogicalOp=\"Lazy Spool\" EstimateRows=\"180000\" EstimateIO=\"0.01\" EstimateCPU=\"0.0325003\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"549088\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"179999\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1070\"/><ColumnReference Column=\"Expr1074\"/></OutputList><Spool><RelOp NodeId=\"58\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"543238\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1070\"/><ColumnReference Column=\"Expr1074\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"59\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"4503\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1070\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1070\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"60\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"4503\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1064\"/><ColumnReference Column=\"Expr1068\"/><ColumnReference Column=\"Expr1069\"/><ColumnReference Column=\"Segment1107\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1107\"/></SegmentColumn><RelOp NodeId=\"61\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"4588\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1064\"/><ColumnReference Column=\"Expr1068\"/><ColumnReference Column=\"Expr1069\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1064\"/><ScalarOperator ScalarString=\"[Expr1063]\"><Identifier><ColumnReference Column=\"Expr1063\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1069\"/><ScalarOperator ScalarString=\"[Expr1068]\"><Identifier><ColumnReference Column=\"Expr1068\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"62\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"2027.03\" EstimateCPU=\"2.60582\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1068\"/></OutputList><MemoryFractions Input=\"0.492331\" Output=\"0.492331\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1063\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1068\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"63\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"361141\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1068\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"64\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4571\" EstimatedTotalSubtreeCost=\"181073\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"65\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"1004.85\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/></OuterReferences><RelOp NodeId=\"66\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00418\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.00528131\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"67\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp><RelOp NodeId=\"68\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1055\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1055\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"69\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp><RelOp NodeId=\"70\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"71\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1055] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"72\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1063\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1063\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"73\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"74\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"75\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1068\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1068\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"76\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"77\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"78\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1074\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1074\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"79\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"80\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Spool></RelOp></NestedLoops></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></QueryPlan></StmtSimple></Statements></Batch></BatchSequence></ShowPlanXML>","text":"-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"14152","avg_logical_writes":"142","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":102,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"-- /home/bwunder/sqlpal/scripts/ringExceptions.sql&#x0A;WITH ExceptionCte&#x0A;AS (&#x0A;    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )&#x0A;                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]&#x0A;         , Data.ring_buffer_type AS [Type]&#x0A;         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]&#x0A;         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]&#x0A;         , Buffer.Record.value('@id', 'int') AS [Id]&#x0A;         , Data.EventXML&#x0A;    FROM (SELECT CAST(Record AS XML) AS EventXML&#x0A;               , ring_buffer_type&#x0A;          FROM sys.dm_os_ring_buffers&#x0A;          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data&#x0A;    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)&#x0A;   )&#x0A;SELECT first.[Type]&#x0A;     , summary.[Error]&#x0A;     , CASE WHEN msg.message_id IS NOT NULL&#x0A;            THEN msg.text&#x0A;            ELSE 'no sys.messages row for Error'&#x0A;            END AS [External Message Info]&#x0A;     , summary.[count]&#x0A;     , DATEADD( second&#x0A;               , first.[Time] - info.ms_ticks / 1000&#x0A;               , CURRENT_TIMESTAMP ) AS [FirstTime]&#x0A;     , DATEADD( second&#x0A;               , last.[Time]  - info.ms_ticks / 1000&#x0A;               , CURRENT_TIMESTAMP ) AS [LastTime]&#x0A;--     , first.EventXML AS [FirstRecord]&#x0A;--     , last.EventXML AS [LastRecord]&#x0A;FROM (SELECT [Error]&#x0A;            , COUNT(*) AS [count]&#x0A;            , MIN(RowNumber) AS [FirstRow]&#x0A;            , MAX(RowNumber) AS [LastRow]&#x0A;       FROM ExceptionCte&#x0A;       GROUP BY [Error] ) AS [summary]&#x0A;JOIN ExceptionCTE AS first&#x0A;ON first.RowNumber = summary.[FirstRow]&#x0A;JOIN ExceptionCTE AS last&#x0A;ON last.RowNumber = summary.[LastRow]&#x0A;LEFT JOIN sys.messages msg&#x0A;ON summary.Error = msg.message_id&#x0A;AND msg.language_id = 1033&#x0A;CROSS JOIN sys.dm_os_sys_info AS info&#x0A;ORDER BY [Error]\" StatementId=\"1\" StatementCompId=\"1\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"57844.1\" StatementEstRows=\"6.4788e+007\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xBFE2D2AFEEE51DAC\" QueryPlanHash=\"0x68047A7B3252CA69\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"352\" CompileTime=\"40\" CompileCPU=\"40\" CompileMemory=\"6368\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,[Expr1027],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,[Expr1026],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"2560\" SerialDesiredMemory=\"100040\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4760840\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"6.4788e+007\" EstimateIO=\"0\" EstimateCPU=\"6.4788\" AvgRowSize=\"2145\" EstimatedTotalSubtreeCost=\"57844.1\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1135\"/><ColumnReference Column=\"Expr1136\"/><ColumnReference Column=\"Expr1137\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1135\"/><ScalarOperator ScalarString=\"CASE WHEN [Union1130] IS NOT NULL THEN [Union1134] ELSE N'no sys.messages row for Error' END\"><IF><Condition><ScalarOperator><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Union1130\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Identifier><ColumnReference Column=\"Union1134\"/></Identifier></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue=\"N'no sys.messages row for Error'\"/></ScalarOperator></Else></IF></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1136\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,[Expr1078]-[Expr1140],0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1078\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1140\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1138\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1137\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,[Expr1119]-[Expr1140],0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1119\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1140\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1139\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"6.4788e+007\" EstimateIO=\"0\" EstimateCPU=\"270.814\" AvgRowSize=\"2157\" EstimatedTotalSubtreeCost=\"57837.6\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1078\"/><ColumnReference Column=\"Expr1119\"/><ColumnReference Column=\"Union1130\"/><ColumnReference Column=\"Union1134\"/><ColumnReference Column=\"Expr1140\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"2\" PhysicalOp=\"Merge Join\" LogicalOp=\"Left Outer Join\" EstimateRows=\"6.4788e+007\" EstimateIO=\"0.000313\" EstimateCPU=\"80.387\" AvgRowSize=\"2149\" EstimatedTotalSubtreeCost=\"57495.6\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1078\"/><ColumnReference Column=\"Expr1119\"/><ColumnReference Column=\"Union1130\"/><ColumnReference Column=\"Union1134\"/></OutputList><Merge ManyToMany=\"1\"><InnerSideJoinColumns><ColumnReference Column=\"Union1130\"/></InnerSideJoinColumns><OuterSideJoinColumns><ColumnReference Column=\"Expr1030\"/></OuterSideJoinColumns><Residual><ScalarOperator ScalarString=\"[Expr1030]=[Union1130]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1030\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Union1130\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Residual><RelOp NodeId=\"3\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"3.24e+007\" EstimateIO=\"0\" EstimateCPU=\"135.432\" AvgRowSize=\"95\" EstimatedTotalSubtreeCost=\"57414.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1078\"/><ColumnReference Column=\"Expr1119\"/></OutputList><NestedLoops Optimized=\"0\"><Predicate><ScalarOperator ScalarString=\"[Expr1059]=[Expr1042]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1059\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1042\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate><RelOp NodeId=\"4\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"40148.1\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1119\"/></OutputList><NestedLoops Optimized=\"0\"><Predicate><ScalarOperator ScalarString=\"[Expr1043]=[Expr1100]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1043\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1100\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate><RelOp NodeId=\"5\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.000100031\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"23033.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/></OutputList><MemoryFractions Input=\"0.232253\" Output=\"0.000328272\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1030\"/></OrderByColumn></OrderBy><RelOp NodeId=\"6\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"23033.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1041\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1165],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1165\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"7\" PhysicalOp=\"Hash Match\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0557855\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"23033.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/><ColumnReference Column=\"Expr1165\"/></OutputList><MemoryFractions Input=\"0.000176618\" Output=\"0.116126\"/><Hash><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1165\"/><ScalarOperator ScalarString=\"COUNT(*)\"><Aggregate Distinct=\"0\" AggType=\"COUNT*\"/></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1042\"/><ScalarOperator ScalarString=\"MIN([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1043\"/><ScalarOperator ScalarString=\"MAX([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MAX\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><HashKeysBuild><ColumnReference Column=\"Expr1030\"/></HashKeysBuild><BuildResidual><ScalarOperator ScalarString=\"[Expr1030] = [Expr1030]\"><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1030\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1030\"/></Identifier></ScalarOperator></Compare></ScalarOperator></BuildResidual><RelOp NodeId=\"8\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.00056921\" AvgRowSize=\"19\" EstimatedTotalSubtreeCost=\"23033.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1015\"/><ColumnReference Column=\"Expr1030\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1030\"/><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"9\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"19\" EstimatedTotalSubtreeCost=\"23033.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1015\"/><ColumnReference Column=\"Expr1029\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"10\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000455368\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1015\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1015\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"11\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000113842\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/><ColumnReference Column=\"Segment1164\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1164\"/></SegmentColumn><RelOp NodeId=\"12\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.00056921\" AvgRowSize=\"4511\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"[Expr1008]\"><Identifier><ColumnReference Column=\"Expr1008\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1014\"/><ScalarOperator ScalarString=\"[Expr1013]\"><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"13\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"5692.1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.138654\" AvgRowSize=\"4499\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><MemoryFractions Input=\"0.348379\" Output=\"0.348203\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn></OrderBy><RelOp NodeId=\"14\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4499\" EstimatedTotalSubtreeCost=\"11420.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"15\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"5726.02\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"16\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4487\" EstimatedTotalSubtreeCost=\"31.7762\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/></OuterReferences><RelOp NodeId=\"17\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1e-005\" AvgRowSize=\"4035\" EstimatedTotalSubtreeCost=\"0.000110157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1000\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"18\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"100\" EstimateIO=\"0\" EstimateCPU=\"0.000100157\" AvgRowSize=\"3083\" EstimatedTotalSubtreeCost=\"0.000100157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"N'RING_BUFFER_EXCEPTION'\"><Const ConstValue=\"N'RING_BUFFER_EXCEPTION'\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><RelOp NodeId=\"19\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7523\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"20\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7493\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1000] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"21\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1008\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"22\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"23\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"24\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1013\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"25\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"26\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"27\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"2.45e-005\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"11612.9\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1029\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1029\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength([Expr1026])&gt;=(128) THEN CONVERT_IMPLICIT(int,[Expr1027],0) ELSE CONVERT_IMPLICIT(int,[Expr1026],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1026\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1027\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1026\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"28\" PhysicalOp=\"UDX\" LogicalOp=\"UDX\" EstimateRows=\"40\" EstimateIO=\"0\" EstimateCPU=\"4e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"11612.7\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/></OutputList><Extension UDXName=\"XQUERY DATA\"><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1024\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1025\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1026\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1027\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1028\"/></DefinedValue></DefinedValues><UsedUDXColumns><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader]\" Column=\"nid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"tid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvalue\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvaluebin\"/><ColumnReference Column=\"Expr1020\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/></UsedUDXColumns><RelOp NodeId=\"29\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"50\" EstimateIO=\"0\" EstimateCPU=\"0.00686844\" AvgRowSize=\"13435\" EstimatedTotalSubtreeCost=\"11612.5\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1020\"/><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader]\" Column=\"nid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"tid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvalue\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvaluebin\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1143\"/></OuterReferences><RelOp NodeId=\"30\" PhysicalOp=\"Top\" LogicalOp=\"Top\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"1365\" EstimatedTotalSubtreeCost=\"5694.23\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1020\"/><ColumnReference Column=\"Expr1143\"/></OutputList><Top RowCount=\"0\" IsPercent=\"0\" WithTies=\"0\"><TopExpression><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator></TopExpression><RelOp NodeId=\"31\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"1365\" EstimatedTotalSubtreeCost=\"5694.23\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1020\"/><ColumnReference Column=\"Expr1143\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1020\"/><ScalarOperator ScalarString=\"0x58\"><Const ConstValue=\"0x58\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"32\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"913\" EstimatedTotalSubtreeCost=\"5694.23\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1143\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"33\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.8e-006\" AvgRowSize=\"913\" EstimatedTotalSubtreeCost=\"5694.16\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1143\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1143\"/><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"34\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(2))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></ComputeScalar></RelOp></Top></RelOp><RelOp NodeId=\"35\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1643.17\" EstimateIO=\"0\" EstimateCPU=\"1.03286\" AvgRowSize=\"12531\" EstimatedTotalSubtreeCost=\"5879.16\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader]\" Column=\"nid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"tid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvalue\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvaluebin\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"nid\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"tid\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"lvalue\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"lvaluebin\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"[Expr1143]\"><Identifier><ColumnReference Column=\"Expr1143\"/></Identifier></ScalarOperator></ParameterList></TableValuedFunction></RelOp></NestedLoops></RelOp></Extension></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></Hash></RelOp></ComputeScalar></RelOp></Sort></RelOp><RelOp NodeId=\"36\" PhysicalOp=\"Table Spool\" LogicalOp=\"Lazy Spool\" EstimateRows=\"5692.1\" EstimateIO=\"0.01\" EstimateCPU=\"0.00112478\" AvgRowSize=\"23\" EstimatedTotalSubtreeCost=\"17114.7\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1100\"/><ColumnReference Column=\"Expr1119\"/></OutputList><Spool><RelOp NodeId=\"37\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"23\" EstimatedTotalSubtreeCost=\"17114.7\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1100\"/><ColumnReference Column=\"Expr1119\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"38\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000455368\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1100\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1100\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"39\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000113842\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/><ColumnReference Column=\"Expr1094\"/><ColumnReference Column=\"Expr1098\"/><ColumnReference Column=\"Expr1099\"/><ColumnReference Column=\"Segment1166\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1166\"/></SegmentColumn><RelOp NodeId=\"40\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.00056921\" AvgRowSize=\"4511\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/><ColumnReference Column=\"Expr1094\"/><ColumnReference Column=\"Expr1098\"/><ColumnReference Column=\"Expr1099\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1094\"/><ScalarOperator ScalarString=\"[Expr1093]\"><Identifier><ColumnReference Column=\"Expr1093\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1099\"/><ScalarOperator ScalarString=\"[Expr1098]\"><Identifier><ColumnReference Column=\"Expr1098\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"41\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"5692.1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.138654\" AvgRowSize=\"4499\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/><ColumnReference Column=\"Expr1098\"/></OutputList><MemoryFractions Input=\"0.323595\" Output=\"0.323595\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1093\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1098\"/></OrderByColumn></OrderBy><RelOp NodeId=\"42\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4499\" EstimatedTotalSubtreeCost=\"11420.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/><ColumnReference Column=\"Expr1098\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"43\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"5726.02\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"44\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4487\" EstimatedTotalSubtreeCost=\"31.7762\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1085\"/></OuterReferences><RelOp NodeId=\"45\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1e-005\" AvgRowSize=\"4035\" EstimatedTotalSubtreeCost=\"0.000110157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1085\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"46\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"100\" EstimateIO=\"0\" EstimateCPU=\"0.000100157\" AvgRowSize=\"3083\" EstimatedTotalSubtreeCost=\"0.000100157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"N'RING_BUFFER_EXCEPTION'\"><Const ConstValue=\"N'RING_BUFFER_EXCEPTION'\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><RelOp NodeId=\"47\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7523\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"48\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7493\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1085]\"><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1085] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"49\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1093\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1093\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1085] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"50\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"51\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1085]\"><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"52\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1098\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1098\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1085] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"53\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"54\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1085]\"><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"55\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1119\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1119\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1085] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"56\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"57\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1085]\"><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Spool></RelOp></NestedLoops></RelOp><RelOp NodeId=\"58\" PhysicalOp=\"Table Spool\" LogicalOp=\"Lazy Spool\" EstimateRows=\"5692.1\" EstimateIO=\"0.01\" EstimateCPU=\"0.00112488\" AvgRowSize=\"87\" EstimatedTotalSubtreeCost=\"17121.1\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"5691.1\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1059\"/><ColumnReference Column=\"Expr1078\"/></OutputList><Spool><RelOp NodeId=\"59\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"87\" EstimatedTotalSubtreeCost=\"17114.7\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1059\"/><ColumnReference Column=\"Expr1078\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"60\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000455368\" AvgRowSize=\"4557\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1059\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1059\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"61\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000113842\" AvgRowSize=\"4557\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/><ColumnReference Column=\"Expr1053\"/><ColumnReference Column=\"Expr1057\"/><ColumnReference Column=\"Expr1058\"/><ColumnReference Column=\"Segment1167\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1167\"/></SegmentColumn><RelOp NodeId=\"62\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.00056921\" AvgRowSize=\"4573\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/><ColumnReference Column=\"Expr1053\"/><ColumnReference Column=\"Expr1057\"/><ColumnReference Column=\"Expr1058\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1053\"/><ScalarOperator ScalarString=\"[Expr1052]\"><Identifier><ColumnReference Column=\"Expr1052\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1058\"/><ScalarOperator ScalarString=\"[Expr1057]\"><Identifier><ColumnReference Column=\"Expr1057\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"63\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"5692.1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.138654\" AvgRowSize=\"4561\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/><ColumnReference Column=\"Expr1057\"/></OutputList><MemoryFractions Input=\"0.328026\" Output=\"0.328026\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1052\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1057\"/></OrderByColumn></OrderBy><RelOp NodeId=\"64\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4561\" EstimatedTotalSubtreeCost=\"11420.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/><ColumnReference Column=\"Expr1057\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"65\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4557\" EstimatedTotalSubtreeCost=\"5726.02\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"66\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4549\" EstimatedTotalSubtreeCost=\"31.7762\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1044\"/></OuterReferences><RelOp NodeId=\"67\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1e-005\" AvgRowSize=\"4097\" EstimatedTotalSubtreeCost=\"0.000110157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1044\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"68\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"100\" EstimateIO=\"0\" EstimateCPU=\"0.000100157\" AvgRowSize=\"3145\" EstimatedTotalSubtreeCost=\"0.000100157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"N'RING_BUFFER_EXCEPTION'\"><Const ConstValue=\"N'RING_BUFFER_EXCEPTION'\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><RelOp NodeId=\"69\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7523\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"70\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7493\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1044]\"><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1044] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"71\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1052\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1052\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1044] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"72\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"73\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1044]\"><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"74\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1057\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1057\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1044] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"75\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"76\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1044]\"><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"77\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1078\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1078\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1044] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"78\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"79\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1044]\"><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Spool></RelOp></NestedLoops></RelOp><RelOp NodeId=\"80\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"13213\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.830349\" AvgRowSize=\"2063\" EstimatedTotalSubtreeCost=\"0.859427\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Union1130\"/><ColumnReference Column=\"Union1134\"/></OutputList><MemoryFractions Input=\"0.348051\" Output=\"0.348051\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Union1130\"/></OrderByColumn></OrderBy><RelOp NodeId=\"81\" PhysicalOp=\"Concatenation\" LogicalOp=\"Concatenation\" EstimateRows=\"13213\" EstimateIO=\"0\" EstimateCPU=\"0.0013213\" AvgRowSize=\"2063\" EstimatedTotalSubtreeCost=\"0.017817\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Union1130\"/><ColumnReference Column=\"Union1134\"/></OutputList><Concat><DefinedValues><DefinedValue><ColumnReference Column=\"Union1130\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"id\"/><ColumnReference Table=\"[SYSERRORS]\" Column=\"message_id\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Union1134\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"text\"/><ColumnReference Table=\"[SYSERRORS]\" Column=\"text\"/></DefinedValue></DefinedValues><RelOp NodeId=\"82\" PhysicalOp=\"Clustered Index Seek\" LogicalOp=\"Clustered Index Seek\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"1041\" EstimatedTotalSubtreeCost=\"0.0032831\" TableCardinality=\"0\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"id\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"text\"/></OutputList><IndexScan Ordered=\"1\" ScanDirection=\"FORWARD\" ForcedIndex=\"0\" ForceSeek=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"text\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Index=\"[clst]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><SeekPredicates><SeekPredicateNew><SeekKeys><StartRange ScanType=\"GT\"><RangeColumns><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"id\"/></RangeColumns><RangeExpressions><ScalarOperator ScalarString=\"(50000)\"><Const ConstValue=\"(50000)\"/></ScalarOperator></RangeExpressions></StartRange></SeekKeys></SeekPredicateNew></SeekPredicates><Predicate><ScalarOperator ScalarString=\"[master].[sys].[sysusermsgs].[msglangid]=(1033)\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"msglangid\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1033)\"/></ScalarOperator></Compare></ScalarOperator></Predicate></IndexScan></RelOp><RelOp NodeId=\"83\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"13212\" EstimateIO=\"0\" EstimateCPU=\"0.0132122\" AvgRowSize=\"2063\" EstimatedTotalSubtreeCost=\"0.0132122\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSERRORS]\" Column=\"message_id\"/><ColumnReference Table=\"[SYSERRORS]\" Column=\"text\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSERRORS]\" Column=\"message_id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSERRORS]\" Column=\"text\"/></DefinedValue></DefinedValues><Object Table=\"[SYSERRORS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"(1033)\"><Const ConstValue=\"(1033)\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></Concat></RelOp></Sort></RelOp></Merge></RelOp><RelOp NodeId=\"84\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"71.2668\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"6.4788e+007\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1140\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1140\"/><ScalarOperator ScalarString=\"SYSINFO.[ms_ticks]/(1000)\"><Arithmetic Operation=\"DIV\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"85\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"64.788\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"6.4788e+007\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></QueryPlan></StmtSimple></Statements></Batch></BatchSequence></ShowPlanXML>","text":"-- /home/bwunder/sqlpal/scripts/ringExceptions.sql\nWITH ExceptionCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]\n         , Data.ring_buffer_type AS [Type]\n         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]\n         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]\n         , Buffer.Record.value('@id', 'int') AS [Id]\n         , Data.EventXML\n    FROM (SELECT CAST(Record AS XML) AS EventXML\n               , ring_buffer_type\n          FROM sys.dm_os_ring_buffers\n          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n   )\nSELECT first.[Type]\n     , summary.[Error]\n     , CASE WHEN msg.message_id IS NOT NULL\n            THEN msg.text\n            ELSE 'no sys.messages row for Error'\n            END AS [External Message Info]\n     , summary.[count]\n     , DATEADD( second\n               , first.[Time] - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [FirstTime]\n     , DATEADD( second\n               , last.[Time]  - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Error]\n            , COUNT(*) AS [count]\n            , MIN(RowNumber) AS [FirstRow]\n            , MAX(RowNumber) AS [LastRow]\n       FROM ExceptionCte\n       GROUP BY [Error] ) AS [summary]\nJOIN ExceptionCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN ExceptionCTE AS last\nON last.RowNumber = summary.[LastRow]\nLEFT JOIN sys.messages msg\nON summary.Error = msg.message_id\nAND msg.language_id = 1033\nCROSS JOIN sys.dm_os_sys_info AS info\nORDER BY [Error];\n"},{"avg_logical_reads":"47","avg_logical_writes":"0","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":36,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"(@1 varchar(8000))SELECT [name],[value] FROM [sys].[extended_properties] WHERE [name]=@1\" StatementId=\"1\" StatementCompId=\"1\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.00328328\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"TRIVIAL\" QueryHash=\"0x2BA81DFA5D42DA17\" QueryPlanHash=\"0xD119E51F5B7ADA44\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan NonParallelPlanReason=\"CouldNotGenerateValidParallelPlan\" CachedPlanSize=\"24\" CompileTime=\"2\" CompileCPU=\"2\" CompileMemory=\"208\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4706904\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.8e-007\" AvgRowSize=\"4149\" EstimatedTotalSubtreeCost=\"0.00328328\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"name\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"value\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"1\" PhysicalOp=\"Clustered Index Scan\" LogicalOp=\"Clustered Index Scan\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"4154\" EstimatedTotalSubtreeCost=\"0.0032831\" TableCardinality=\"0\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"class\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"id\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"name\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"value\"/></OutputList><IndexScan Ordered=\"0\" ForcedIndex=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"class\"/></DefinedValue><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"name\"/></DefinedValue><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"value\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Index=\"[clust]\" Alias=\"[p]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><Predicate><ScalarOperator ScalarString=\"[master].[sys].[sysxprops].[name] as [p].[name]=CONVERT_IMPLICIT(nvarchar(4000),[@1],0)\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"name\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1002\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"8000\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"@1\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate></IndexScan></RelOp><Predicate><ScalarOperator ScalarString=\"has_access('EP',CONVERT_IMPLICIT(int,[master].[sys].[sysxprops].[class] as [p].[class],0),[master].[sys].[sysxprops].[id] as [p].[id])=(1)\"><Compare CompareOp=\"EQ\"><ScalarOperator><Intrinsic FunctionName=\"has_access\"><ScalarOperator><Const ConstValue=\"'EP'\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"class\"/></Identifier></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"\"/></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp><ParameterList><ColumnReference Column=\"@1\" ParameterDataType=\"varchar(8000)\" ParameterCompiledValue=\"'MS_SQLCEIPSERVICESETTINGS'\"/></ParameterList></QueryPlan></StmtSimple></Statements></Batch></BatchSequence></ShowPlanXML>","text":"(@1 varchar(8000))SELECT [name],[value] FROM [sys].[extended_properties] WHERE [name]=@1"},{"avg_logical_reads":"3","avg_logical_writes":"0","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":6050,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;---------------------------- sp_configure ------------------------------&#x0D;&#x0A;create procedure sys.sp_configure&#x0D;&#x0A;    @configname   varchar(35) = null   -- option name to configure&#x0D;&#x0A;   ,@configvalue  int         = null   -- new configuration value&#x0D;&#x0A;as&#x0D;&#x0A;&#x09;set nocount on&#x0D;&#x0A;&#x0D;&#x0A;&#x09;\" StatementId=\"1\" StatementCompId=\"3\" StatementType=\"SET ON/OFF\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"declare&#x0D;&#x0A;&#x09;&#x09;@confignum                smallint   --Num of the opt to be configured&#x0D;&#x0A;&#x09;   ,@configcount              int   --Num of options like @configname&#x0D;&#x0A;&#x09;   ,@show_advance             int   --Y/N Read&amp;Write actions on &quot;advanced&quot; opts&#x0D;&#x0A;&#x09;   ,@prevvalue                int&#x0D;&#x0A;&#x09;   ,@confignameIn             varchar(35)&#x0D;&#x0A;&#x09;    &#x0D;&#x0A;&#x09;select @confignameIn = @configname&#x0D;&#x0A;&#x09;&#x09;   ,@configname = lower(@configname collate Latin1_General_CI_AS)\" StatementId=\"2\" StatementCompId=\"4\" StatementType=\"ASSIGN\" RetrievedFromCache=\"true\"/><StmtCond StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Determine @maxnumber based on advance option in syscurconfigs.&#x0D;&#x0A;&#x09;if (select value_in_use from sys.configurations where configuration_id = 518) = 1\" StatementId=\"3\" StatementCompId=\"5\" StatementType=\"COND WITH QUERY\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"1.9656e-005\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x71F784306194E66F\" QueryPlanHash=\"0xE0D5441F2FDDCC0D\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><Condition><QueryPlan CachedPlanSize=\"56\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"928\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"1.9656e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1008\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"CASE WHEN CONVERT(sql_variant,CFGPROP.[value],0)=1 THEN (1) ELSE (0) END\"><IF><Condition><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"1\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Else></IF></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Outer Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"4.18e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"1.9556e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"2\" PhysicalOp=\"Constant Scan\" LogicalOp=\"Constant Scan\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><ConstantScan/></RelOp><RelOp NodeId=\"3\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"6.162e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"1.4219e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"4\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"7.9\" EstimateIO=\"0\" EstimateCPU=\"8.057e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"8.057e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"(518)\"><Const ConstValue=\"(518)\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></QueryPlan></Condition><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;   select @show_advance = 1\" StatementId=\"4\" StatementCompId=\"6\" StatementType=\"ASSIGN\" RetrievedFromCache=\"true\"/></Statements></Then><Else><Statements><StmtSimple StatementText=\"   -- Display advanced options&#x0D;&#x0A;&#x09;else&#x0D;&#x0A;&#x09;   select @show_advance = 0\" StatementId=\"5\" StatementCompId=\"9\" StatementType=\"ASSIGN\" RetrievedFromCache=\"true\"/></Statements></Else></StmtCond><StmtCond StatementText=\"   -- Don't display advanced options&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If no option name is given, the procedure will just print out all the&#x0D;&#x0A;&#x09;--  options and their values.&#x0D;&#x0A;&#x09;if @configname is NULL\" StatementId=\"6\" StatementCompId=\"11\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;select name,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, minimum) as minimum,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, maximum) as maximum,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, isnull(value, value_in_use)) as config_value,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, value_in_use) as run_value&#x0D;&#x0A;&#x09;&#x09;from  sys.configurations&#x0D;&#x0A;&#x09;&#x09;where (is_advanced = 0 or @show_advance = 1)&#x0D;&#x0A;&#x09;&#x09;order by lower(name)\" StatementId=\"7\" StatementCompId=\"12\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.0240519\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x1A60A2992151BC3C\" QueryPlanHash=\"0x8D855E51956B0354\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"40\" CompileTime=\"10\" CompileCPU=\"8\" CompileMemory=\"1136\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[minval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[maxval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"512\" SerialDesiredMemory=\"544\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><OptimizerStatsUsage><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[clst]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000004_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000003_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000002_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/></OptimizerStatsUsage><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.000100099\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"0.0240519\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/></OutputList><MemoryFractions Input=\"1\" Output=\"1\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1011\"/></OrderByColumn></OrderBy><RelOp NodeId=\"1\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"0.0126906\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"CONVERT(int,isnull([master].[sys].[sysobjvalues].[value] as [v].[value],[Expr1013]),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Intrinsic FunctionName=\"isnull\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"2\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Outer Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"2.25629e-005\" AvgRowSize=\"8115\" EstimatedTotalSubtreeCost=\"0.0126905\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"3\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"5.39781\" EstimateIO=\"0\" EstimateCPU=\"0.00013272\" AvgRowSize=\"4109\" EstimatedTotalSubtreeCost=\"0.000219777\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/><ColumnReference Column=\"Expr1013\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"4\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9e-006\" AvgRowSize=\"4113\" EstimatedTotalSubtreeCost=\"8.7057e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/><ColumnReference Column=\"Expr1013\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[minval],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[maxval],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1010\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[value],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1011\"/><ScalarOperator ScalarString=\"lower(CFGPROP.[name])\"><Intrinsic FunctionName=\"lower\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"CONVERT(sql_variant,CFGPROP.[value],0)\"><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"5\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"66\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"(CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><RelOp NodeId=\"6\" PhysicalOp=\"Clustered Index Seek\" LogicalOp=\"Clustered Index Seek\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"4019\" EstimatedTotalSubtreeCost=\"0.0124481\" TableCardinality=\"567\" Parallel=\"0\" EstimateRebinds=\"4.39781\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></OutputList><IndexScan Ordered=\"1\" ScanDirection=\"FORWARD\" ForcedIndex=\"0\" ForceSeek=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Index=\"[clst]\" Alias=\"[v]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType=\"EQ\"><RangeColumns><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valclass\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"objid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"subobjid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valnum\"/></RangeColumns><RangeExpressions><ScalarOperator ScalarString=\"(50)\"><Const ConstValue=\"(50)\"/></ScalarOperator><ScalarOperator ScalarString=\"CFGPROP.[id]\"><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates></IndexScan></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></Sort></RelOp></QueryPlan></StmtSimple><StmtSimple StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;&#x09;return (0)\" StatementId=\"8\" StatementCompId=\"13\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Use @configname and try to find the right option.&#x0D;&#x0A;&#x09;--  If there isn't just one, print appropriate diagnostics and return.&#x0D;&#x0A;&#x09;select @configcount = count(*)&#x0D;&#x0A;&#x09;from sys.configurations&#x0D;&#x0A;&#x09;where lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'&#x0D;&#x0A;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"9\" StatementCompId=\"15\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.000284592\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xC1175B7C92338EBC\" QueryPlanHash=\"0x84921440C2662387\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"24\" CompileTime=\"2\" CompileCPU=\"2\" CompileMemory=\"1000\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"0.000284592\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1007\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1018],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1018\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.61511e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"0.000284592\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1018\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1018\"/><ScalarOperator ScalarString=\"Count(*)\"><Aggregate AggType=\"countstar\" Distinct=\"0\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"2\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1.85851\" EstimateIO=\"0\" EstimateCPU=\"0.00020382\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"0.000282977\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><Filter StartupExpression=\"0\"><RelOp NodeId=\"3\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"50\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"lower(CONVERT(nvarchar(35),CFGPROP.[name],0)) like CONVERT_IMPLICIT(nvarchar(37),'%'+[@configname]+'%',0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Intrinsic FunctionName=\"like\"><ScalarOperator><Intrinsic FunctionName=\"lower\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1008\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"74\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple><StmtCond StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If no option, print an error message.&#x0D;&#x0A;&#x09;if @configcount = 0\" StatementId=\"10\" StatementCompId=\"16\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;-- If exist but not used in matrix, print MATRIX1_NOT_AVAILABLE &#x0D;&#x0A;&#x09;&#x09;select @configcount = count(*)&#x0D;&#x0A;&#x09;&#x09;from sys.configurations$&#x0D;&#x0A;&#x09;&#x09;where lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'&#x0D;&#x0A;&#x09;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"11\" StatementCompId=\"17\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.000238668\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x94AC2599E658FA04\" QueryPlanHash=\"0x84921440C2662387\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"960\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"0.000238668\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1007\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1017],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1017\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"3.09075e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"0.000238668\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1017\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1017\"/><ScalarOperator ScalarString=\"Count(*)\"><Aggregate AggType=\"countstar\" Distinct=\"0\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"2\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"4.31791\" EstimateIO=\"0\" EstimateCPU=\"0.00015642\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"0.000235577\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><Filter StartupExpression=\"0\"><RelOp NodeId=\"3\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"50\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"lower(CONVERT(nvarchar(35),CFGPROP.[name],0)) like CONVERT_IMPLICIT(nvarchar(37),'%'+[@configname]+'%',0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1))\"><Logical Operation=\"AND\"><ScalarOperator><Intrinsic FunctionName=\"like\"><ScalarOperator><Intrinsic FunctionName=\"lower\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1008\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"74\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;if @configcount &lt;&gt; 0\" StatementId=\"12\" StatementCompId=\"18\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;&#x09;if ServerProperty('IsMatrix') &lt;&gt; 0\" StatementId=\"13\" StatementCompId=\"19\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;raiserror(28401,-1,-1,@confignameIn)&#x0D;&#x0A;&#x09;&#x09;&#x09;\" StatementId=\"14\" StatementCompId=\"20\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond></Statements></Then><Else><Statements><StmtSimple StatementText=\"end&#x0D;&#x0A;&#x09;&#x09;else&#x0D;&#x0A;&#x09;&#x09;&#x09;raiserror (15123,-1,-1,@confignameIn)&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"15\" StatementCompId=\"24\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/></Statements></Else></StmtCond><StmtSimple StatementText=\"return (1)\" StatementId=\"16\" StatementCompId=\"26\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If more than one option like @configname, show the duplicates and return.&#x0D;&#x0A;&#x09;if @configcount &gt; 1\" StatementId=\"17\" StatementCompId=\"28\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;raiserror (15124,-1,-1,@confignameIn)&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"18\" StatementCompId=\"29\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"print ' '&#x0D;&#x0A;&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"19\" StatementCompId=\"30\" StatementType=\"PRINT\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"select duplicate_options = name&#x0D;&#x0A;&#x09;&#x09;from sys.configurations&#x0D;&#x0A;&#x09;&#x09;where lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%' &#x0D;&#x0A;&#x09;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"20\" StatementCompId=\"31\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.000282977\" StatementEstRows=\"1.85851\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xAD7D62D67FF0C87C\" QueryPlanHash=\"0xB504A51A43325688\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"960\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1.85851\" EstimateIO=\"0\" EstimateCPU=\"0.00020382\" AvgRowSize=\"46\" EstimatedTotalSubtreeCost=\"0.000282977\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"1\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"50\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"lower(CONVERT(nvarchar(35),CFGPROP.[name],0)) like CONVERT_IMPLICIT(nvarchar(37),'%'+[@configname]+'%',0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Intrinsic FunctionName=\"like\"><ScalarOperator><Intrinsic FunctionName=\"lower\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1007\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"74\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1011\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple><StmtSimple StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;  return (1)\" StatementId=\"21\" StatementCompId=\"32\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then><Else><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x09;else&#x0D;&#x0A;&#x09;&#x09;-- There must be exactly one, so get the full name.&#x0D;&#x0A;&#x09;&#x09;select @configname = name&#x0D;&#x0A;&#x09;&#x09;from sys.configurations&#x0D;&#x0A;&#x09;&#x09;where lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'&#x0D;&#x0A;&#x09;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"22\" StatementCompId=\"35\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.000290877\" StatementEstRows=\"1.85851\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x0441DEA70BCE5F13\" QueryPlanHash=\"0x0AA7E138C069E029\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"976\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1.85851\" EstimateIO=\"0\" EstimateCPU=\"0.00020382\" AvgRowSize=\"28\" EstimatedTotalSubtreeCost=\"0.000290877\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1007\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"1\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9e-006\" AvgRowSize=\"69\" EstimatedTotalSubtreeCost=\"8.7057e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(varchar(35),CFGPROP.[name],0)\"><Convert DataType=\"varchar\" Length=\"35\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"2\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"50\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"lower(CONVERT(nvarchar(35),CFGPROP.[name],0)) like CONVERT_IMPLICIT(nvarchar(37),'%'+[@configname]+'%',0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Intrinsic FunctionName=\"like\"><ScalarOperator><Intrinsic FunctionName=\"lower\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1008\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"74\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple></Statements></Else></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If @configvalue is NULL, just show the current state of the option.&#x0D;&#x0A;&#x09;if @configvalue is null\" StatementId=\"23\" StatementCompId=\"37\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x0D;&#x0A;&#x09;&#x09;select name,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, minimum) as minimum,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, maximum) as maximum,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, isnull(value, value_in_use)) as config_value,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, value_in_use) as run_value&#x0D;&#x0A;&#x09;&#x09;from sys.configurations&#x0D;&#x0A;&#x09;&#x09;where (name collate Latin1_General_CI_AS) = @configname&#x0D;&#x0A;&#x09;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"24\" StatementCompId=\"38\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.00526438\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x65077183403531B9\" QueryPlanHash=\"0x4BBB058F66C70C85\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"40\" CompileTime=\"3\" CompileCPU=\"3\" CompileMemory=\"1120\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[minval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[maxval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><OptimizerStatsUsage><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[clst]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000004_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000003_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000002_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/></OptimizerStatsUsage><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"62\" EstimatedTotalSubtreeCost=\"0.00526438\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1010\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"CONVERT(int,isnull([master].[sys].[sysobjvalues].[value] as [v].[value],[Expr1013]),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Intrinsic FunctionName=\"isnull\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Outer Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"8.63175e-006\" AvgRowSize=\"8078\" EstimatedTotalSubtreeCost=\"0.00526428\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"2\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"2.06501\" EstimateIO=\"0\" EstimateCPU=\"0.00016432\" AvgRowSize=\"4072\" EstimatedTotalSubtreeCost=\"0.000251377\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1013\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"3\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9e-006\" AvgRowSize=\"4076\" EstimatedTotalSubtreeCost=\"8.7057e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1013\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[minval],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[maxval],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1010\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[value],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"CONVERT(sql_variant,CFGPROP.[value],0)\"><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"4\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"66\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"CONVERT(nvarchar(35),CFGPROP.[name],0)=CONVERT_IMPLICIT(nvarchar(35),[@configname],0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1011\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><RelOp NodeId=\"5\" PhysicalOp=\"Clustered Index Seek\" LogicalOp=\"Clustered Index Seek\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"4019\" EstimatedTotalSubtreeCost=\"0.00500427\" TableCardinality=\"567\" Parallel=\"0\" EstimateRebinds=\"1.06501\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></OutputList><IndexScan Ordered=\"1\" ScanDirection=\"FORWARD\" ForcedIndex=\"0\" ForceSeek=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Index=\"[clst]\" Alias=\"[v]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType=\"EQ\"><RangeColumns><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valclass\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"objid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"subobjid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valnum\"/></RangeColumns><RangeExpressions><ScalarOperator ScalarString=\"(50)\"><Const ConstValue=\"(50)\"/></ScalarOperator><ScalarOperator ScalarString=\"CFGPROP.[id]\"><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates></IndexScan></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple><StmtSimple StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;   return (0)\" StatementId=\"25\" StatementCompId=\"39\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Check Permissions&#x0D;&#x0A;&#x09;if (not has_perms_by_name(NULL,NULL,'alter settings') = 1)\" StatementId=\"26\" StatementCompId=\"41\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;raiserror(15247,-1,-1)&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"27\" StatementCompId=\"42\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"28\" StatementCompId=\"43\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Now get the configuration number.&#x0D;&#x0A;&#x09;select @confignum = configuration_id, @prevvalue = convert(int, isnull(value, value_in_use))&#x0D;&#x0A;&#x09;from  sys.configurations&#x0D;&#x0A;&#x09;where (@configvalue = 0 or convert(sql_variant, @configvalue) between minimum and maximum)&#x0D;&#x0A;&#x09;&#x09;and (name collate Latin1_General_CI_AS) = @configname&#x0D;&#x0A;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"29\" StatementCompId=\"45\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.00362566\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x3505FFE9573C5196\" QueryPlanHash=\"0x4BBB058F66C70C85\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"40\" CompileTime=\"3\" CompileCPU=\"3\" CompileMemory=\"1152\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[minval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[maxval],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><OptimizerStatsUsage><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[clst]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000004_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000003_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000002_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/></OptimizerStatsUsage><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"13\" EstimatedTotalSubtreeCost=\"0.00362566\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"CONVERT(int,isnull([master].[sys].[sysobjvalues].[value] as [v].[value],[Expr1014]),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Intrinsic FunctionName=\"isnull\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1014\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Outer Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"4.18e-006\" AvgRowSize=\"8031\" EstimatedTotalSubtreeCost=\"0.00362556\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1014\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"2\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.00025122\" AvgRowSize=\"4025\" EstimatedTotalSubtreeCost=\"0.000338277\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1014\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"3\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9e-006\" AvgRowSize=\"4074\" EstimatedTotalSubtreeCost=\"8.7057e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1014\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(smallint,CFGPROP.[id],0)\"><Convert DataType=\"smallint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1014\"/><ScalarOperator ScalarString=\"CONVERT(sql_variant,CFGPROP.[value],0)\"><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"4\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"66\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"([@configvalue]=(0) OR CONVERT(sql_variant,[@configvalue],0)&gt;=CONVERT(sql_variant,CFGPROP.[minval],0) AND CONVERT(sql_variant,[@configvalue],0)&lt;=CONVERT(sql_variant,CFGPROP.[maxval],0)) AND CONVERT(nvarchar(35),CFGPROP.[name],0)=CONVERT_IMPLICIT(nvarchar(35),[@configname],0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1009\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator><ScalarOperator><Logical Operation=\"AND\"><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1010\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Compare CompareOp=\"LE\"><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1011\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1013\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><RelOp NodeId=\"5\" PhysicalOp=\"Clustered Index Seek\" LogicalOp=\"Clustered Index Seek\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"4019\" EstimatedTotalSubtreeCost=\"0.0032831\" TableCardinality=\"567\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></OutputList><IndexScan Ordered=\"1\" ScanDirection=\"FORWARD\" ForcedIndex=\"0\" ForceSeek=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Index=\"[clst]\" Alias=\"[v]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType=\"EQ\"><RangeColumns><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valclass\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"objid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"subobjid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valnum\"/></RangeColumns><RangeExpressions><ScalarOperator ScalarString=\"(50)\"><Const ConstValue=\"(50)\"/></ScalarOperator><ScalarOperator ScalarString=\"CFGPROP.[id]\"><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates></IndexScan></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/><ColumnReference Column=\"@configvalue\" ParameterDataType=\"int\" ParameterCompiledValue=\"NULL\"/></ParameterList></QueryPlan></StmtSimple><StmtCond StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If this is the number of default language, we want to make sure&#x0D;&#x0A;&#x09;--  that the new value is a valid language id in Syslanguages.&#x0D;&#x0A;&#x09;if @confignum = 124\" StatementId=\"30\" StatementCompId=\"46\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;if not exists (select * from sys.syslanguages&#x0D;&#x0A;&#x09;&#x09;&#x09; where langid = @configvalue)\" StatementId=\"31\" StatementCompId=\"47\" StatementType=\"COND WITH QUERY\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"6.594e-006\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x36C8E67381E5E6C3\" QueryPlanHash=\"0xC05302B49F97720A\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><Condition><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"968\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"6.594e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1005\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1005\"/><ScalarOperator ScalarString=\"CASE WHEN [Expr1006] IS NULL THEN (1) ELSE (0) END\"><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1006\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Else></IF></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Semi Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"4.18e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"6.494e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1006\"/></OutputList><NestedLoops Optimized=\"0\"><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1006\"/></DefinedValue></DefinedValues><ProbeColumn><ColumnReference Column=\"Expr1006\"/></ProbeColumn><RelOp NodeId=\"2\" PhysicalOp=\"Constant Scan\" LogicalOp=\"Constant Scan\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><ConstantScan/></RelOp><RelOp NodeId=\"3\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><TableValuedFunction><DefinedValues/><Object Table=\"[SYSLANG]\"/><ParameterList><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"[@configvalue]\"><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configvalue\" ParameterDataType=\"int\" ParameterCompiledValue=\"NULL\"/></ParameterList></QueryPlan></Condition><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;-- 0 is default language, us_english&#x0D;&#x0A;&#x09;&#x09;&#x09;if @configvalue &lt;&gt; 0\" StatementId=\"32\" StatementCompId=\"48\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;&#x09;raiserror(15127,-1,-1)&#x0D;&#x0A;&#x09;&#x09;&#x09;&#x09;\" StatementId=\"33\" StatementCompId=\"49\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"34\" StatementCompId=\"50\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond></Statements></Then></StmtCond></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;end&#x0D;&#x0A;&#x09;&#x09;end&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If this is the number of kernel language, we want to make sure&#x0D;&#x0A;&#x09;--  that the new value is a valid language id in Syslanguages.&#x0D;&#x0A;&#x09;if @confignum = 132\" StatementId=\"35\" StatementCompId=\"54\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;if not exists (select * from sys.syslanguages&#x0D;&#x0A;&#x09;&#x09;&#x09;where langid = @configvalue)\" StatementId=\"36\" StatementCompId=\"55\" StatementType=\"COND WITH QUERY\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"6.594e-006\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x36C8E67381E5E6C3\" QueryPlanHash=\"0xC05302B49F97720A\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><Condition><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"968\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"6.594e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1005\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1005\"/><ScalarOperator ScalarString=\"CASE WHEN [Expr1006] IS NULL THEN (1) ELSE (0) END\"><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1006\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Else></IF></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Semi Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"4.18e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"6.494e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1006\"/></OutputList><NestedLoops Optimized=\"0\"><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1006\"/></DefinedValue></DefinedValues><ProbeColumn><ColumnReference Column=\"Expr1006\"/></ProbeColumn><RelOp NodeId=\"2\" PhysicalOp=\"Constant Scan\" LogicalOp=\"Constant Scan\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><ConstantScan/></RelOp><RelOp NodeId=\"3\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><TableValuedFunction><DefinedValues/><Object Table=\"[SYSLANG]\"/><ParameterList><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"[@configvalue]\"><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configvalue\" ParameterDataType=\"int\" ParameterCompiledValue=\"NULL\"/></ParameterList></QueryPlan></Condition><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;-- 0 is default language, us_english&#x0D;&#x0A;&#x09;&#x09;&#x09;if @configvalue &lt;&gt; 0\" StatementId=\"37\" StatementCompId=\"56\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;   raiserror(15028,-1,-1)&#x0D;&#x0A;&#x09;&#x09;&#x09;   \" StatementId=\"38\" StatementCompId=\"57\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"39\" StatementCompId=\"58\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond></Statements></Then></StmtCond></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;end&#x0D;&#x0A;&#x09;&#x09;end&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;--  &quot;user options&quot; should not try to set incompatible options/values.&#x0D;&#x0A;&#x09;if @confignum = 1534\" StatementId=\"40\" StatementCompId=\"62\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtCond StatementText=\"  --&quot;user options&quot;&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;if (@configvalue &amp; (1024+2048) = (1024+2048))\" StatementId=\"41\" StatementCompId=\"63\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\" --ansi_null_default_on/off&#x0D;&#x0A;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;raiserror(15303,-1,-1,@configvalue)&#x0D;&#x0A;&#x09;&#x09;&#x09;\" StatementId=\"42\" StatementCompId=\"64\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"43\" StatementCompId=\"65\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;end&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Although the @configname is good, @configvalue wasn't in range.&#x0D;&#x0A;&#x09;if @confignum is NULL\" StatementId=\"44\" StatementCompId=\"68\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;raiserror(15129,-1,-1,@configvalue,@configname)&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"45\" StatementCompId=\"69\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"46\" StatementCompId=\"70\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtSimple StatementText=\"** Text not available **\" StatementId=\"47\" StatementCompId=\"72\" StatementType=\"INVOKE\" RetrievedFromCache=\"true\"/><StmtCond StatementText=\"if @@error &lt;&gt; 0\" StatementId=\"48\" StatementCompId=\"73\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\" &#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;return (1)\" StatementId=\"49\" StatementCompId=\"74\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then><Else><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x09;else&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;declare @configwname nvarchar(35), @configwvalue sql_variant&#x0D;&#x0A;&#x09;&#x09;select @configwname = @configname, &#x0D;&#x0A;&#x09;&#x09;&#x09;@configwvalue = @configvalue\" StatementId=\"50\" StatementCompId=\"77\" StatementType=\"ASSIGN\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"** Text not available **\" StatementId=\"51\" StatementCompId=\"78\" StatementType=\"INVOKE\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"raiserror(15457,-1,-1, @configname, @prevvalue, @configvalue) with log&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"52\" StatementCompId=\"79\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (0)\" StatementId=\"53\" StatementCompId=\"80\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Else></StmtCond></Statements></Batch></BatchSequence></ShowPlanXML>","text":"\r\n---------------------------- sp_configure ------------------------------\r\ncreate procedure sys.sp_configure\r\n    @configname   varchar(35) = null   -- option name to configure\r\n   ,@configvalue  int         = null   -- new configuration value\r\nas\r\n\tset nocount on\r\n\r\n\tdeclare\r\n\t\t@confignum                smallint   --Num of the opt to be configured\r\n\t   ,@configcount              int   --Num of options like @configname\r\n\t   ,@show_advance             int   --Y/N Read&Write actions on \"advanced\" opts\r\n\t   ,@prevvalue                int\r\n\t   ,@confignameIn             varchar(35)\r\n\t    \r\n\tselect @confignameIn = @configname\r\n\t\t   ,@configname = lower(@configname collate Latin1_General_CI_AS)\r\n\r\n\t-- Determine @maxnumber based on advance option in syscurconfigs.\r\n\tif (select value_in_use from sys.configurations where configuration_id = 518) = 1\r\n\t   select @show_advance = 1   -- Display advanced options\r\n\telse\r\n\t   select @show_advance = 0   -- Don't display advanced options\r\n\r\n\t-- If no option name is given, the procedure will just print out all the\r\n\t--  options and their values.\r\n\tif @configname is NULL\r\n\tbegin\r\n\t\tselect name,\r\n\t\t\tconvert(int, minimum) as minimum,\r\n\t\t\tconvert(int, maximum) as maximum,\r\n\t\t\tconvert(int, isnull(value, value_in_use)) as config_value,\r\n\t\t\tconvert(int, value_in_use) as run_value\r\n\t\tfrom  sys.configurations\r\n\t\twhere (is_advanced = 0 or @show_advance = 1)\r\n\t\torder by lower(name)\r\n\r\n\t\treturn (0)\r\n\tend\r\n\r\n\t-- Use @configname and try to find the right option.\r\n\t--  If there isn't just one, print appropriate diagnostics and return.\r\n\tselect @configcount = count(*)\r\n\tfrom sys.configurations\r\n\twhere lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'\r\n\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t-- If no option, print an error message.\r\n\tif @configcount = 0\r\n\tbegin\r\n\t\t-- If exist but not used in matrix, print MATRIX1_NOT_AVAILABLE \r\n\t\tselect @configcount = count(*)\r\n\t\tfrom sys.configurations$\r\n\t\twhere lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'\r\n\t\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\t\tif @configcount <> 0\r\n\t\t\tbegin\r\n\t\t\t\tif ServerProperty('IsMatrix') <> 0\r\n\t\t\t\t\traiserror(28401,-1,-1,@confignameIn)\r\n\t\t\tend\r\n\t\telse\r\n\t\t\traiserror (15123,-1,-1,@confignameIn)\r\n\t\treturn (1)\r\n\tend\r\n\r\n\t-- If more than one option like @configname, show the duplicates and return.\r\n\tif @configcount > 1\r\n\tbegin\r\n\t\traiserror (15124,-1,-1,@confignameIn)\r\n\t\tprint ' '\r\n\r\n\t\tselect duplicate_options = name\r\n\t\tfrom sys.configurations\r\n\t\twhere lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%' \r\n\t\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t  return (1)\r\n\tend\r\n\telse\r\n\t\t-- There must be exactly one, so get the full name.\r\n\t\tselect @configname = name\r\n\t\tfrom sys.configurations\r\n\t\twhere lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'\r\n\t\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t-- If @configvalue is NULL, just show the current state of the option.\r\n\tif @configvalue is null\r\n\tbegin\r\n\r\n\t\tselect name,\r\n\t\t\tconvert(int, minimum) as minimum,\r\n\t\t\tconvert(int, maximum) as maximum,\r\n\t\t\tconvert(int, isnull(value, value_in_use)) as config_value,\r\n\t\t\tconvert(int, value_in_use) as run_value\r\n\t\tfrom sys.configurations\r\n\t\twhere (name collate Latin1_General_CI_AS) = @configname\r\n\t\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t   return (0)\r\n\tend\r\n\r\n\t-- Check Permissions\r\n\tif (not has_perms_by_name(NULL,NULL,'alter settings') = 1)\r\n\tbegin\r\n\t\traiserror(15247,-1,-1)\r\n\t\treturn (1)\r\n\tend\r\n\r\n\t-- Now get the configuration number.\r\n\tselect @confignum = configuration_id, @prevvalue = convert(int, isnull(value, value_in_use))\r\n\tfrom  sys.configurations\r\n\twhere (@configvalue = 0 or convert(sql_variant, @configvalue) between minimum and maximum)\r\n\t\tand (name collate Latin1_General_CI_AS) = @configname\r\n\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t-- If this is the number of default language, we want to make sure\r\n\t--  that the new value is a valid language id in Syslanguages.\r\n\tif @confignum = 124\r\n\tbegin\r\n\t\tif not exists (select * from sys.syslanguages\r\n\t\t\t where langid = @configvalue)\r\n\t\tbegin\r\n\t\t\t-- 0 is default language, us_english\r\n\t\t\tif @configvalue <> 0\r\n\t\t\tbegin\r\n\t\t\t\traiserror(15127,-1,-1)\r\n\t\t\t\treturn (1)\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\r\n\t-- If this is the number of kernel language, we want to make sure\r\n\t--  that the new value is a valid language id in Syslanguages.\r\n\tif @confignum = 132\r\n\tbegin\r\n\t\tif not exists (select * from sys.syslanguages\r\n\t\t\twhere langid = @configvalue)\r\n\t\tbegin\r\n\t\t\t-- 0 is default language, us_english\r\n\t\t\tif @configvalue <> 0\r\n\t\t\tbegin\r\n\t\t\t   raiserror(15028,-1,-1)\r\n\t\t\t   return (1)\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\r\n\t--  \"user options\" should not try to set incompatible options/values.\r\n\tif @confignum = 1534  --\"user options\"\r\n\tbegin\r\n\t\tif (@configvalue & (1024+2048) = (1024+2048)) --ansi_null_default_on/off\r\n\t\tbegin\r\n\t\t\traiserror(15303,-1,-1,@configvalue)\r\n\t\t\treturn (1)\r\n\t\tend\r\n\tend\r\n\r\n\t-- Although the @configname is good, @configvalue wasn't in range.\r\n\tif @confignum is NULL\r\n\tbegin\r\n\t\traiserror(15129,-1,-1,@configvalue,@configname)\r\n\t\treturn (1)\r\n\tend\r\n\r\n\t-- Now update sysconfigures.\r\n\tEXEC %%ServerConfiguration( ConfigID = @confignum ).SetValue( Value = @configvalue )\r\n\r\n\tif @@error <> 0 \r\n\tbegin\r\n\t\treturn (1)\r\n\tend\r\n\telse\r\n\tbegin\r\n\t\tdeclare @configwname nvarchar(35), @configwvalue sql_variant\r\n\t\tselect @configwname = @configname, \r\n\t\t\t@configwvalue = @configvalue\r\n\r\n\t\t-- EMDEventType(x_eet_Alter_Instance), EMDUniversalClass(x_eunc_Object), src major id, src minor id, src name\r\n\t\t-- -1 means ignore target stuff, target major id, target minor id, target name,\r\n\t\t-- # of parameters, 5 parameters\r\n\t\tEXEC %%System().FireTrigger(ID = 214, ID = 107, ID = 0, ID = 0, Value = NULL,\r\n\t\t\tID = -1, ID = 0, ID = 0, Value = NULL, \r\n\t\t\tID = 2, Value = @configwname, Value = @configwvalue, Value = NULL, Value = NULL, Value = NULL, Value = NULL, Value = NULL)\r\n\r\n\t\traiserror(15457,-1,-1, @configname, @prevvalue, @configvalue) with log\r\n\t\treturn (0) -- sp_configure\r\n\tend\r\n"}]],"recordset":[{"avg_logical_reads":"592635","avg_logical_writes":"4787","avg_physical_reads":"8","Execution_count":"1","statement_start_offset":0,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"WITH BufferTypeCte&#x0A;AS (&#x0A;    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )&#x0A;                                     , Buffer.Record.value( '@id', 'INT' )&#x0A;                                     , Data.[Address]&#x0A;                                     , Data.[Type] ) AS [RowNumber]&#x0A;          , Data.[Address]&#x0A;          , Data.[Type]&#x0A;          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]&#x0A;          , Buffer.Record.value('@id', 'INT') AS [Id]&#x0A;          , Data.EventXML&#x0A;    FROM (  SELECT CAST(b.Record AS XML) AS EventXML&#x0A;             , b.ring_buffer_address AS [Address]&#x0A;             , b.ring_buffer_type AS [Type]&#x0A;             , i.ms_ticks&#x0A;        FROM sys.dm_os_ring_buffers b&#x0A;        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]&#x0A;    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)&#x0A;  )&#x0A;SELECT first.[Type]&#x0A;     , summary.[count]&#x0A;     , first.[Time] AS [FirstTime]&#x0A;     , last.[Time] AS [LastTime]&#x0A;--     , first.EventXML AS [FirstRecord]&#x0A;--     , last.EventXML AS [LastRecord]&#x0A;FROM (SELECT [Type]&#x0A;           , COUNT( RowNumber ) AS [count]&#x0A;           , MIN( RowNumber ) AS [FirstRow]&#x0A;           , MAX( RowNumber ) AS [LastRow]&#x0A;      FROM BufferTypeCTE&#x0A;      GROUP BY [Type]&#x0A;    ) AS summary&#x0A;JOIN BufferTypeCTE AS first&#x0A;ON first.RowNumber = summary.[FirstRow]&#x0A;JOIN BufferTypeCTE AS last&#x0A;ON last.RowNumber = summary.[LastRow]&#x0A;--ORDER BY [FirstTime];&#x0A;--ORDER BY [LastTime];&#x0A;ORDER BY [Type]\" StatementId=\"1\" StatementCompId=\"1\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"1.54081e+006\" StatementEstRows=\"1.02458e+009\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xEBEC0AF035D58E74\" QueryPlanHash=\"0x01B56B4ECCCCC5EA\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"360\" CompileTime=\"34\" CompileCPU=\"34\" CompileMemory=\"5184\"><ThreadStat Branches=\"5\"/><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"2560\" SerialDesiredMemory=\"2062312\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4715368\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"102.458\" AvgRowSize=\"91\" EstimatedTotalSubtreeCost=\"1.54081e+006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1049\"/><ColumnReference Column=\"Expr1075\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1049\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,([Expr1048]-SYSINFO.[ms_ticks])/(1000),0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"DIV\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1048\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1082\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1075\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,([Expr1074]-SYSINFO.[ms_ticks])/(1000),0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"DIV\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1074\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1083\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"10713.3\" AvgRowSize=\"107\" EstimatedTotalSubtreeCost=\"1.5407e+006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1074\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"2\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"67716\" AvgRowSize=\"107\" EstimatedTotalSubtreeCost=\"1.52999e+006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1074\"/></OutputList><NestedLoops Optimized=\"0\"><Predicate><ScalarOperator ScalarString=\"[Expr1028]=[Expr1070]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1028\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1070\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate><RelOp NodeId=\"3\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"0.00563063\" EstimateCPU=\"7.2118\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"903467\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/></OutputList><MemoryFractions Input=\"0.0148484\" Output=\"0.507669\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"4\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"903460\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"5\" PhysicalOp=\"Hash Match\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.803326\" AvgRowSize=\"4569\" EstimatedTotalSubtreeCost=\"723392\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><MemoryFractions Input=\"0.000504124\" Output=\"0.000489379\"/><Hash><DefinedValues/><HashKeysBuild><ColumnReference Column=\"Expr1027\"/></HashKeysBuild><HashKeysProbe><ColumnReference Column=\"Expr1044\"/></HashKeysProbe><ProbeResidual><ScalarOperator ScalarString=\"[Expr1044]=[Expr1027]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1027\"/></Identifier></ScalarOperator></Compare></ScalarOperator></ProbeResidual><RelOp NodeId=\"6\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"0.0286247\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/></OutputList><Parallelism PartitioningType=\"Broadcast\"><RelOp NodeId=\"7\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1026\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1105],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1105\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"8\" PhysicalOp=\"Hash Match\" LogicalOp=\"Aggregate\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1.22173\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Column=\"Expr1105\"/></OutputList><MemoryFractions Input=\"0.000286011\" Output=\"0.507165\"/><Hash><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1105\"/><ScalarOperator ScalarString=\"COUNT([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"COUNT_BIG\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1027\"/><ScalarOperator ScalarString=\"MIN([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1028\"/><ScalarOperator ScalarString=\"MAX([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MAX\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><HashKeysBuild><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></HashKeysBuild><BuildResidual><ScalarOperator ScalarString=\"SYSRINGBUFFERS.[ring_buffer_type] = SYSRINGBUFFERS.[ring_buffer_type]\"><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></Identifier></ScalarOperator></Compare></ScalarOperator></BuildResidual><RelOp NodeId=\"9\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"79\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1015\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1015\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"10\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"79\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/><ColumnReference Column=\"Segment1104\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1104\"/></SegmentColumn><RelOp NodeId=\"11\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"101\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"[Expr1008]\"><Identifier><ColumnReference Column=\"Expr1008\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1014\"/><ScalarOperator ScalarString=\"[Expr1013]\"><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"12\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"1.7119\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"13\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"0.00563063\" EstimateCPU=\"7.2118\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361147\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><MemoryFractions Input=\"0.507669\" Output=\"0.507383\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"14\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361140\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"15\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"181072\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"16\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4555\" EstimatedTotalSubtreeCost=\"1004.5\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/></OuterReferences><RelOp NodeId=\"17\" PhysicalOp=\"Parallelism\" LogicalOp=\"Repartition Streams\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.171094\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.202786\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"18\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00209\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.0316926\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"19\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0285013\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"0.0285024\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"20\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><TableValuedFunction><DefinedValues/><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></Parallelism></RelOp><RelOp NodeId=\"21\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1000\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"22\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></Parallelism></RelOp><RelOp NodeId=\"23\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"24\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1000] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"25\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1008\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"26\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"27\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"28\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1013\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"29\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"30\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp></Hash></RelOp></ComputeScalar></RelOp></Parallelism></RelOp><RelOp NodeId=\"31\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"57.2742\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362241\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1044\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"32\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1044\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1044\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"33\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1038\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/><ColumnReference Column=\"Segment1106\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1106\"/></SegmentColumn><RelOp NodeId=\"34\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"4588\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1038\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1038\"/><ScalarOperator ScalarString=\"[Expr1037]\"><Identifier><ColumnReference Column=\"Expr1037\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1043\"/><ScalarOperator ScalarString=\"[Expr1042]\"><Identifier><ColumnReference Column=\"Expr1042\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"35\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"29.7004\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1037\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1042\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"36\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"1013.51\" EstimateCPU=\"1.30291\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"362154\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><MemoryFractions Input=\"0.507165\" Output=\"0.492331\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1037\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1042\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"37\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"361140\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"38\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4571\" EstimatedTotalSubtreeCost=\"181072\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"39\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"1004.5\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/></OuterReferences><RelOp NodeId=\"40\" PhysicalOp=\"Parallelism\" LogicalOp=\"Repartition Streams\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.171611\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.203305\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"41\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00209\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.0316935\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"42\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0285021\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"0.0285033\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"43\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></Parallelism></RelOp><RelOp NodeId=\"44\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1029\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1029\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"45\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></Parallelism></RelOp><RelOp NodeId=\"46\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"47\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1029] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"48\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1037\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1037\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"49\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"50\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"51\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1042\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1042\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"52\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"53\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp></Parallelism></RelOp></Hash></RelOp><RelOp NodeId=\"54\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1048\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1048\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"55\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"56\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp><RelOp NodeId=\"57\" PhysicalOp=\"Table Spool\" LogicalOp=\"Lazy Spool\" EstimateRows=\"180000\" EstimateIO=\"0.01\" EstimateCPU=\"0.0325003\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"549088\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"179999\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1070\"/><ColumnReference Column=\"Expr1074\"/></OutputList><Spool><RelOp NodeId=\"58\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"543238\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1070\"/><ColumnReference Column=\"Expr1074\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"59\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"4503\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1070\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1070\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"60\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"4503\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1064\"/><ColumnReference Column=\"Expr1068\"/><ColumnReference Column=\"Expr1069\"/><ColumnReference Column=\"Segment1107\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1107\"/></SegmentColumn><RelOp NodeId=\"61\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"4588\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1064\"/><ColumnReference Column=\"Expr1068\"/><ColumnReference Column=\"Expr1069\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1064\"/><ScalarOperator ScalarString=\"[Expr1063]\"><Identifier><ColumnReference Column=\"Expr1063\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1069\"/><ScalarOperator ScalarString=\"[Expr1068]\"><Identifier><ColumnReference Column=\"Expr1068\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"62\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"2027.03\" EstimateCPU=\"2.60582\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1068\"/></OutputList><MemoryFractions Input=\"0.492331\" Output=\"0.492331\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1063\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1068\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"63\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"361141\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1068\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"64\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4571\" EstimatedTotalSubtreeCost=\"181073\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"65\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"1004.85\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/></OuterReferences><RelOp NodeId=\"66\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00418\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.00528131\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"67\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp><RelOp NodeId=\"68\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1055\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1055\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"69\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp><RelOp NodeId=\"70\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"71\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1055] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"72\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1063\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1063\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"73\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"74\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"75\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1068\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1068\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"76\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"77\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"78\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1074\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1074\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"79\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"80\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Spool></RelOp></NestedLoops></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></QueryPlan></StmtSimple></Statements></Batch></BatchSequence></ShowPlanXML>","text":"WITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"486799","avg_logical_writes":"3825","avg_physical_reads":"0","Execution_count":"2","statement_start_offset":108,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql&#x0A;WITH BufferTypeCte&#x0A;AS (&#x0A;    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )&#x0A;                                     , Buffer.Record.value( '@id', 'INT' )&#x0A;                                     , Data.[Address]&#x0A;                                     , Data.[Type] ) AS [RowNumber]&#x0A;          , Data.[Address]&#x0A;          , Data.[Type]&#x0A;          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]&#x0A;          , Buffer.Record.value('@id', 'INT') AS [Id]&#x0A;          , Data.EventXML&#x0A;    FROM (  SELECT CAST(b.Record AS XML) AS EventXML&#x0A;             , b.ring_buffer_address AS [Address]&#x0A;             , b.ring_buffer_type AS [Type]&#x0A;             , i.ms_ticks&#x0A;        FROM sys.dm_os_ring_buffers b&#x0A;        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]&#x0A;    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)&#x0A;  )&#x0A;SELECT first.[Type]&#x0A;     , summary.[count]&#x0A;     , first.[Time] AS [FirstTime]&#x0A;     , last.[Time] AS [LastTime]&#x0A;--     , first.EventXML AS [FirstRecord]&#x0A;--     , last.EventXML AS [LastRecord]&#x0A;FROM (SELECT [Type]&#x0A;           , COUNT( RowNumber ) AS [count]&#x0A;           , MIN( RowNumber ) AS [FirstRow]&#x0A;           , MAX( RowNumber ) AS [LastRow]&#x0A;      FROM BufferTypeCTE&#x0A;      GROUP BY [Type]&#x0A;    ) AS summary&#x0A;JOIN BufferTypeCTE AS first&#x0A;ON first.RowNumber = summary.[FirstRow]&#x0A;JOIN BufferTypeCTE AS last&#x0A;ON last.RowNumber = summary.[LastRow]&#x0A;--ORDER BY [FirstTime];&#x0A;--ORDER BY [LastTime];&#x0A;ORDER BY [Type]\" StatementId=\"1\" StatementCompId=\"1\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"1.54081e+006\" StatementEstRows=\"1.02458e+009\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xEBEC0AF035D58E74\" QueryPlanHash=\"0x01B56B4ECCCCC5EA\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"360\" CompileTime=\"29\" CompileCPU=\"29\" CompileMemory=\"5184\"><ThreadStat Branches=\"5\"/><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"2560\" SerialDesiredMemory=\"2062312\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4767440\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"102.458\" AvgRowSize=\"91\" EstimatedTotalSubtreeCost=\"1.54081e+006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1049\"/><ColumnReference Column=\"Expr1075\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1049\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,([Expr1048]-SYSINFO.[ms_ticks])/(1000),0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"DIV\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1048\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1082\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1075\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,([Expr1074]-SYSINFO.[ms_ticks])/(1000),0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"DIV\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1074\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1083\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"10713.3\" AvgRowSize=\"107\" EstimatedTotalSubtreeCost=\"1.5407e+006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1074\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"2\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1.02458e+009\" EstimateIO=\"0\" EstimateCPU=\"67716\" AvgRowSize=\"107\" EstimatedTotalSubtreeCost=\"1.52999e+006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1074\"/></OutputList><NestedLoops Optimized=\"0\"><Predicate><ScalarOperator ScalarString=\"[Expr1028]=[Expr1070]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1028\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1070\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate><RelOp NodeId=\"3\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"0.00563063\" EstimateCPU=\"7.2118\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"903467\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/></OutputList><MemoryFractions Input=\"0.0148484\" Output=\"0.507669\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"4\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"903460\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1048\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"5\" PhysicalOp=\"Hash Match\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.803326\" AvgRowSize=\"4569\" EstimatedTotalSubtreeCost=\"723392\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><MemoryFractions Input=\"0.000504124\" Output=\"0.000489379\"/><Hash><DefinedValues/><HashKeysBuild><ColumnReference Column=\"Expr1027\"/></HashKeysBuild><HashKeysProbe><ColumnReference Column=\"Expr1044\"/></HashKeysProbe><ProbeResidual><ScalarOperator ScalarString=\"[Expr1044]=[Expr1027]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1027\"/></Identifier></ScalarOperator></Compare></ScalarOperator></ProbeResidual><RelOp NodeId=\"6\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"0.0286247\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/></OutputList><Parallelism PartitioningType=\"Broadcast\"><RelOp NodeId=\"7\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1026\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1105],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1105\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"8\" PhysicalOp=\"Hash Match\" LogicalOp=\"Aggregate\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1.22173\" AvgRowSize=\"27\" EstimatedTotalSubtreeCost=\"361150\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1027\"/><ColumnReference Column=\"Expr1028\"/><ColumnReference Column=\"Expr1105\"/></OutputList><MemoryFractions Input=\"0.000286011\" Output=\"0.507165\"/><Hash><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1105\"/><ScalarOperator ScalarString=\"COUNT([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"COUNT_BIG\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1027\"/><ScalarOperator ScalarString=\"MIN([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1028\"/><ScalarOperator ScalarString=\"MAX([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MAX\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><HashKeysBuild><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></HashKeysBuild><BuildResidual><ScalarOperator ScalarString=\"SYSRINGBUFFERS.[ring_buffer_type] = SYSRINGBUFFERS.[ring_buffer_type]\"><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></Identifier></ScalarOperator></Compare></ScalarOperator></BuildResidual><RelOp NodeId=\"9\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"79\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1015\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1015\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"10\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"79\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/><ColumnReference Column=\"Segment1104\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1104\"/></SegmentColumn><RelOp NodeId=\"11\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"101\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"[Expr1008]\"><Identifier><ColumnReference Column=\"Expr1008\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1014\"/><ScalarOperator ScalarString=\"[Expr1013]\"><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"12\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"1.7119\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361149\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"13\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"0.00563063\" EstimateCPU=\"7.2118\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361147\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><MemoryFractions Input=\"0.507669\" Output=\"0.507383\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"14\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"89\" EstimatedTotalSubtreeCost=\"361140\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"15\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"181072\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"16\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4555\" EstimatedTotalSubtreeCost=\"1004.5\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/></OuterReferences><RelOp NodeId=\"17\" PhysicalOp=\"Parallelism\" LogicalOp=\"Repartition Streams\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.171094\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.202786\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"18\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00209\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.0316926\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"19\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0285013\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"0.0285024\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"20\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><TableValuedFunction><DefinedValues/><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></Parallelism></RelOp><RelOp NodeId=\"21\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1000\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1000\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"22\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></Parallelism></RelOp><RelOp NodeId=\"23\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"24\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1000] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"25\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1008\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"26\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"27\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"28\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1013\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"29\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"30\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp></Hash></RelOp></ComputeScalar></RelOp></Parallelism></RelOp><RelOp NodeId=\"31\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"57.2742\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362241\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1044\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"32\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1044\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1044\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"33\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"4565\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1038\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/><ColumnReference Column=\"Segment1106\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1106\"/></SegmentColumn><RelOp NodeId=\"34\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"4588\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1038\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1038\"/><ScalarOperator ScalarString=\"[Expr1037]\"><Identifier><ColumnReference Column=\"Expr1037\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1043\"/><ScalarOperator ScalarString=\"[Expr1042]\"><Identifier><ColumnReference Column=\"Expr1042\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"35\" PhysicalOp=\"Parallelism\" LogicalOp=\"Gather Streams\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"29.7004\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"362184\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><Parallelism><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1037\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1042\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"36\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"1013.51\" EstimateCPU=\"1.30291\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"362154\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><MemoryFractions Input=\"0.507165\" Output=\"0.492331\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1037\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1042\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"37\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"361140\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/><ColumnReference Column=\"Expr1042\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"38\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4571\" EstimatedTotalSubtreeCost=\"181072\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1037\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"39\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.3762\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"1004.5\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1029\"/></OuterReferences><RelOp NodeId=\"40\" PhysicalOp=\"Parallelism\" LogicalOp=\"Repartition Streams\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.171611\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.203305\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"41\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00209\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.0316935\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1029\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"42\" PhysicalOp=\"Parallelism\" LogicalOp=\"Distribute Streams\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0285021\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"0.0285033\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><Parallelism PartitioningType=\"RoundRobin\"><RelOp NodeId=\"43\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></Parallelism></RelOp><RelOp NodeId=\"44\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1029\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1029\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"45\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></Parallelism></RelOp><RelOp NodeId=\"46\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"47\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1029] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"48\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1037\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1037\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"49\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"50\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"51\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1042\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1042\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"52\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"53\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp></Parallelism></RelOp></Hash></RelOp><RelOp NodeId=\"54\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1048\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1048\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1029] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"55\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"56\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp><RelOp NodeId=\"57\" PhysicalOp=\"Table Spool\" LogicalOp=\"Lazy Spool\" EstimateRows=\"180000\" EstimateIO=\"0.01\" EstimateCPU=\"0.0325003\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"549088\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"179999\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1070\"/><ColumnReference Column=\"Expr1074\"/></OutputList><Spool><RelOp NodeId=\"58\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"543238\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1070\"/><ColumnReference Column=\"Expr1074\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"59\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0144\" AvgRowSize=\"4503\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1070\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1070\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"60\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.0036\" AvgRowSize=\"4503\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1064\"/><ColumnReference Column=\"Expr1068\"/><ColumnReference Column=\"Expr1069\"/><ColumnReference Column=\"Segment1107\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1107\"/></SegmentColumn><RelOp NodeId=\"61\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.018\" AvgRowSize=\"4588\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1064\"/><ColumnReference Column=\"Expr1068\"/><ColumnReference Column=\"Expr1069\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1064\"/><ScalarOperator ScalarString=\"[Expr1063]\"><Identifier><ColumnReference Column=\"Expr1063\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1069\"/><ScalarOperator ScalarString=\"[Expr1068]\"><Identifier><ColumnReference Column=\"Expr1068\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"62\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"180000\" EstimateIO=\"2027.03\" EstimateCPU=\"2.60582\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"363170\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1068\"/></OutputList><MemoryFractions Input=\"0.492331\" Output=\"0.492331\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1063\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1068\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></OrderByColumn></OrderBy><RelOp NodeId=\"63\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4575\" EstimatedTotalSubtreeCost=\"361141\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/><ColumnReference Column=\"Expr1068\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"64\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4571\" EstimatedTotalSubtreeCost=\"181073\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1063\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"65\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"180000\" EstimateIO=\"0\" EstimateCPU=\"0.7524\" AvgRowSize=\"4563\" EstimatedTotalSubtreeCost=\"1004.85\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1055\"/></OuterReferences><RelOp NodeId=\"66\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00418\" AvgRowSize=\"4111\" EstimatedTotalSubtreeCost=\"0.00528131\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/><ColumnReference Column=\"Expr1055\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"67\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp><RelOp NodeId=\"68\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.0001\" AvgRowSize=\"4103\" EstimatedTotalSubtreeCost=\"0.00110016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1055\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1055\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"69\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1000\" EstimateIO=\"0\" EstimateCPU=\"0.00100016\" AvgRowSize=\"3151\" EstimatedTotalSubtreeCost=\"0.00100016\" Parallel=\"1\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_address\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp><RelOp NodeId=\"70\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004.1\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"71\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"1004\" Parallel=\"1\" EstimateRebinds=\"968.377\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1055] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"72\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1063\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1063\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"73\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"74\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"75\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1068\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1068\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"76\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"77\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"78\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1074\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1074\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1055] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"79\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"180067\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"80\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"180065\" Parallel=\"1\" EstimateRebinds=\"179968\" EstimateRewinds=\"30.6228\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1055]\"><Identifier><ColumnReference Column=\"Expr1055\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Spool></RelOp></NestedLoops></RelOp></Parallelism></RelOp></ComputeScalar></RelOp></QueryPlan></StmtSimple></Statements></Batch></BatchSequence></ShowPlanXML>","text":"-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"14152","avg_logical_writes":"142","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":102,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"-- /home/bwunder/sqlpal/scripts/ringExceptions.sql&#x0A;WITH ExceptionCte&#x0A;AS (&#x0A;    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )&#x0A;                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]&#x0A;         , Data.ring_buffer_type AS [Type]&#x0A;         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]&#x0A;         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]&#x0A;         , Buffer.Record.value('@id', 'int') AS [Id]&#x0A;         , Data.EventXML&#x0A;    FROM (SELECT CAST(Record AS XML) AS EventXML&#x0A;               , ring_buffer_type&#x0A;          FROM sys.dm_os_ring_buffers&#x0A;          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data&#x0A;    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)&#x0A;   )&#x0A;SELECT first.[Type]&#x0A;     , summary.[Error]&#x0A;     , CASE WHEN msg.message_id IS NOT NULL&#x0A;            THEN msg.text&#x0A;            ELSE 'no sys.messages row for Error'&#x0A;            END AS [External Message Info]&#x0A;     , summary.[count]&#x0A;     , DATEADD( second&#x0A;               , first.[Time] - info.ms_ticks / 1000&#x0A;               , CURRENT_TIMESTAMP ) AS [FirstTime]&#x0A;     , DATEADD( second&#x0A;               , last.[Time]  - info.ms_ticks / 1000&#x0A;               , CURRENT_TIMESTAMP ) AS [LastTime]&#x0A;--     , first.EventXML AS [FirstRecord]&#x0A;--     , last.EventXML AS [LastRecord]&#x0A;FROM (SELECT [Error]&#x0A;            , COUNT(*) AS [count]&#x0A;            , MIN(RowNumber) AS [FirstRow]&#x0A;            , MAX(RowNumber) AS [LastRow]&#x0A;       FROM ExceptionCte&#x0A;       GROUP BY [Error] ) AS [summary]&#x0A;JOIN ExceptionCTE AS first&#x0A;ON first.RowNumber = summary.[FirstRow]&#x0A;JOIN ExceptionCTE AS last&#x0A;ON last.RowNumber = summary.[LastRow]&#x0A;LEFT JOIN sys.messages msg&#x0A;ON summary.Error = msg.message_id&#x0A;AND msg.language_id = 1033&#x0A;CROSS JOIN sys.dm_os_sys_info AS info&#x0A;ORDER BY [Error]\" StatementId=\"1\" StatementCompId=\"1\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"57844.1\" StatementEstRows=\"6.4788e+007\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xBFE2D2AFEEE51DAC\" QueryPlanHash=\"0x68047A7B3252CA69\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"352\" CompileTime=\"40\" CompileCPU=\"40\" CompileMemory=\"6368\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,[Expr1027],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,[Expr1026],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"2560\" SerialDesiredMemory=\"100040\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4760840\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"6.4788e+007\" EstimateIO=\"0\" EstimateCPU=\"6.4788\" AvgRowSize=\"2145\" EstimatedTotalSubtreeCost=\"57844.1\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1135\"/><ColumnReference Column=\"Expr1136\"/><ColumnReference Column=\"Expr1137\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1135\"/><ScalarOperator ScalarString=\"CASE WHEN [Union1130] IS NOT NULL THEN [Union1134] ELSE N'no sys.messages row for Error' END\"><IF><Condition><ScalarOperator><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Union1130\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Identifier><ColumnReference Column=\"Union1134\"/></Identifier></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue=\"N'no sys.messages row for Error'\"/></ScalarOperator></Else></IF></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1136\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,[Expr1078]-[Expr1140],0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1078\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1140\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1138\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1137\"/><ScalarOperator ScalarString=\"dateadd(second,CONVERT_IMPLICIT(int,[Expr1119]-[Expr1140],0),getdate())\"><Intrinsic FunctionName=\"dateadd\"><ScalarOperator><Const ConstValue=\"(8)\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"SUB\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1119\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1140\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1139\"><ScalarOperator><Intrinsic FunctionName=\"getdate\"/></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"6.4788e+007\" EstimateIO=\"0\" EstimateCPU=\"270.814\" AvgRowSize=\"2157\" EstimatedTotalSubtreeCost=\"57837.6\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1078\"/><ColumnReference Column=\"Expr1119\"/><ColumnReference Column=\"Union1130\"/><ColumnReference Column=\"Union1134\"/><ColumnReference Column=\"Expr1140\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"2\" PhysicalOp=\"Merge Join\" LogicalOp=\"Left Outer Join\" EstimateRows=\"6.4788e+007\" EstimateIO=\"0.000313\" EstimateCPU=\"80.387\" AvgRowSize=\"2149\" EstimatedTotalSubtreeCost=\"57495.6\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1078\"/><ColumnReference Column=\"Expr1119\"/><ColumnReference Column=\"Union1130\"/><ColumnReference Column=\"Union1134\"/></OutputList><Merge ManyToMany=\"1\"><InnerSideJoinColumns><ColumnReference Column=\"Union1130\"/></InnerSideJoinColumns><OuterSideJoinColumns><ColumnReference Column=\"Expr1030\"/></OuterSideJoinColumns><Residual><ScalarOperator ScalarString=\"[Expr1030]=[Union1130]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1030\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Union1130\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Residual><RelOp NodeId=\"3\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"3.24e+007\" EstimateIO=\"0\" EstimateCPU=\"135.432\" AvgRowSize=\"95\" EstimatedTotalSubtreeCost=\"57414.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1078\"/><ColumnReference Column=\"Expr1119\"/></OutputList><NestedLoops Optimized=\"0\"><Predicate><ScalarOperator ScalarString=\"[Expr1059]=[Expr1042]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1059\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1042\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate><RelOp NodeId=\"4\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"40148.1\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1119\"/></OutputList><NestedLoops Optimized=\"0\"><Predicate><ScalarOperator ScalarString=\"[Expr1043]=[Expr1100]\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1043\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1100\"/></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate><RelOp NodeId=\"5\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.000100031\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"23033.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/></OutputList><MemoryFractions Input=\"0.232253\" Output=\"0.000328272\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1030\"/></OrderByColumn></OrderBy><RelOp NodeId=\"6\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"23033.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1041\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1041\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1165],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1165\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"7\" PhysicalOp=\"Hash Match\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.0557855\" AvgRowSize=\"31\" EstimatedTotalSubtreeCost=\"23033.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1030\"/><ColumnReference Column=\"Expr1042\"/><ColumnReference Column=\"Expr1043\"/><ColumnReference Column=\"Expr1165\"/></OutputList><MemoryFractions Input=\"0.000176618\" Output=\"0.116126\"/><Hash><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1165\"/><ScalarOperator ScalarString=\"COUNT(*)\"><Aggregate Distinct=\"0\" AggType=\"COUNT*\"/></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1042\"/><ScalarOperator ScalarString=\"MIN([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1043\"/><ScalarOperator ScalarString=\"MAX([Expr1015])\"><Aggregate Distinct=\"0\" AggType=\"MAX\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1015\"/></Identifier></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><HashKeysBuild><ColumnReference Column=\"Expr1030\"/></HashKeysBuild><BuildResidual><ScalarOperator ScalarString=\"[Expr1030] = [Expr1030]\"><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1030\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1030\"/></Identifier></ScalarOperator></Compare></ScalarOperator></BuildResidual><RelOp NodeId=\"8\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.00056921\" AvgRowSize=\"19\" EstimatedTotalSubtreeCost=\"23033.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1015\"/><ColumnReference Column=\"Expr1030\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1030\"/><ScalarOperator ScalarString=\"[Expr1029]\"><Identifier><ColumnReference Column=\"Expr1029\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"9\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"19\" EstimatedTotalSubtreeCost=\"23033.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1015\"/><ColumnReference Column=\"Expr1029\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"10\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000455368\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1015\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1015\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"11\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000113842\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/><ColumnReference Column=\"Segment1164\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1164\"/></SegmentColumn><RelOp NodeId=\"12\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.00056921\" AvgRowSize=\"4511\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1013\"/><ColumnReference Column=\"Expr1014\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"[Expr1008]\"><Identifier><ColumnReference Column=\"Expr1008\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1014\"/><ScalarOperator ScalarString=\"[Expr1013]\"><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"13\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"5692.1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.138654\" AvgRowSize=\"4499\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><MemoryFractions Input=\"0.348379\" Output=\"0.348203\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1008\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1013\"/></OrderByColumn></OrderBy><RelOp NodeId=\"14\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4499\" EstimatedTotalSubtreeCost=\"11420.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"15\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"5726.02\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1008\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"16\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4487\" EstimatedTotalSubtreeCost=\"31.7762\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1000\"/></OuterReferences><RelOp NodeId=\"17\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1e-005\" AvgRowSize=\"4035\" EstimatedTotalSubtreeCost=\"0.000110157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1000\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1000\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"18\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"100\" EstimateIO=\"0\" EstimateCPU=\"0.000100157\" AvgRowSize=\"3083\" EstimatedTotalSubtreeCost=\"0.000100157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"N'RING_BUFFER_EXCEPTION'\"><Const ConstValue=\"N'RING_BUFFER_EXCEPTION'\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><RelOp NodeId=\"19\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7523\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"20\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7493\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1000] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"21\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1008\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"22\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"23\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"24\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1013\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"25\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"26\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"27\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"2.45e-005\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"11612.9\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1029\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1029\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1000] IS NULL THEN NULL ELSE CASE WHEN datalength([Expr1026])&gt;=(128) THEN CONVERT_IMPLICIT(int,[Expr1027],0) ELSE CONVERT_IMPLICIT(int,[Expr1026],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1026\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1027\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1026\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"28\" PhysicalOp=\"UDX\" LogicalOp=\"UDX\" EstimateRows=\"40\" EstimateIO=\"0\" EstimateCPU=\"4e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"11612.7\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1026\"/><ColumnReference Column=\"Expr1027\"/></OutputList><Extension UDXName=\"XQUERY DATA\"><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1024\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1025\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1026\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1027\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1028\"/></DefinedValue></DefinedValues><UsedUDXColumns><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader]\" Column=\"nid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"tid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvalue\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvaluebin\"/><ColumnReference Column=\"Expr1020\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/></UsedUDXColumns><RelOp NodeId=\"29\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"50\" EstimateIO=\"0\" EstimateCPU=\"0.00686844\" AvgRowSize=\"13435\" EstimatedTotalSubtreeCost=\"11612.5\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1020\"/><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader]\" Column=\"nid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"tid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvalue\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvaluebin\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1143\"/></OuterReferences><RelOp NodeId=\"30\" PhysicalOp=\"Top\" LogicalOp=\"Top\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"1365\" EstimatedTotalSubtreeCost=\"5694.23\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1020\"/><ColumnReference Column=\"Expr1143\"/></OutputList><Top RowCount=\"0\" IsPercent=\"0\" WithTies=\"0\"><TopExpression><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator></TopExpression><RelOp NodeId=\"31\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"1365\" EstimatedTotalSubtreeCost=\"5694.23\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1020\"/><ColumnReference Column=\"Expr1143\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1020\"/><ScalarOperator ScalarString=\"0x58\"><Const ConstValue=\"0x58\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"32\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"913\" EstimatedTotalSubtreeCost=\"5694.23\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1143\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"33\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.8e-006\" AvgRowSize=\"913\" EstimatedTotalSubtreeCost=\"5694.16\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1143\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1143\"/><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"34\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(2))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></ComputeScalar></RelOp></Top></RelOp><RelOp NodeId=\"35\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1643.17\" EstimateIO=\"0\" EstimateCPU=\"1.03286\" AvgRowSize=\"12531\" EstimatedTotalSubtreeCost=\"5879.16\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader]\" Column=\"nid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"tid\"/><ColumnReference Table=\"[XML Reader]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvalue\"/><ColumnReference Table=\"[XML Reader]\" Column=\"lvaluebin\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"nid\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"tid\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"lvalue\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader]\" Column=\"lvaluebin\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1000]\"><Identifier><ColumnReference Column=\"Expr1000\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"[Expr1143]\"><Identifier><ColumnReference Column=\"Expr1143\"/></Identifier></ScalarOperator></ParameterList></TableValuedFunction></RelOp></NestedLoops></RelOp></Extension></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></Hash></RelOp></ComputeScalar></RelOp></Sort></RelOp><RelOp NodeId=\"36\" PhysicalOp=\"Table Spool\" LogicalOp=\"Lazy Spool\" EstimateRows=\"5692.1\" EstimateIO=\"0.01\" EstimateCPU=\"0.00112478\" AvgRowSize=\"23\" EstimatedTotalSubtreeCost=\"17114.7\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1100\"/><ColumnReference Column=\"Expr1119\"/></OutputList><Spool><RelOp NodeId=\"37\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"23\" EstimatedTotalSubtreeCost=\"17114.7\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1100\"/><ColumnReference Column=\"Expr1119\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"38\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000455368\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1100\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1100\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"39\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000113842\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/><ColumnReference Column=\"Expr1094\"/><ColumnReference Column=\"Expr1098\"/><ColumnReference Column=\"Expr1099\"/><ColumnReference Column=\"Segment1166\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1166\"/></SegmentColumn><RelOp NodeId=\"40\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.00056921\" AvgRowSize=\"4511\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/><ColumnReference Column=\"Expr1094\"/><ColumnReference Column=\"Expr1098\"/><ColumnReference Column=\"Expr1099\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1094\"/><ScalarOperator ScalarString=\"[Expr1093]\"><Identifier><ColumnReference Column=\"Expr1093\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1099\"/><ScalarOperator ScalarString=\"[Expr1098]\"><Identifier><ColumnReference Column=\"Expr1098\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"41\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"5692.1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.138654\" AvgRowSize=\"4499\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/><ColumnReference Column=\"Expr1098\"/></OutputList><MemoryFractions Input=\"0.323595\" Output=\"0.323595\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1093\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1098\"/></OrderByColumn></OrderBy><RelOp NodeId=\"42\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4499\" EstimatedTotalSubtreeCost=\"11420.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/><ColumnReference Column=\"Expr1098\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"43\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4495\" EstimatedTotalSubtreeCost=\"5726.02\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1093\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"44\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4487\" EstimatedTotalSubtreeCost=\"31.7762\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1085\"/></OuterReferences><RelOp NodeId=\"45\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1e-005\" AvgRowSize=\"4035\" EstimatedTotalSubtreeCost=\"0.000110157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1085\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1085\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"46\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"100\" EstimateIO=\"0\" EstimateCPU=\"0.000100157\" AvgRowSize=\"3083\" EstimatedTotalSubtreeCost=\"0.000100157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"N'RING_BUFFER_EXCEPTION'\"><Const ConstValue=\"N'RING_BUFFER_EXCEPTION'\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><RelOp NodeId=\"47\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7523\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"48\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7493\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1085]\"><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1085] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"49\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1093\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1093\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1085] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"50\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"51\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1085]\"><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"52\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1098\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1098\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1085] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"53\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"54\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1085]\"><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"55\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1119\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1119\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1085] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"56\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"57\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1085]\"><Identifier><ColumnReference Column=\"Expr1085\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Spool></RelOp></NestedLoops></RelOp><RelOp NodeId=\"58\" PhysicalOp=\"Table Spool\" LogicalOp=\"Lazy Spool\" EstimateRows=\"5692.1\" EstimateIO=\"0.01\" EstimateCPU=\"0.00112488\" AvgRowSize=\"87\" EstimatedTotalSubtreeCost=\"17121.1\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"5691.1\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1059\"/><ColumnReference Column=\"Expr1078\"/></OutputList><Spool><RelOp NodeId=\"59\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"87\" EstimatedTotalSubtreeCost=\"17114.7\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1059\"/><ColumnReference Column=\"Expr1078\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"60\" PhysicalOp=\"Sequence Project\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000455368\" AvgRowSize=\"4557\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1059\"/></OutputList><SequenceProject><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1059\"/><ScalarOperator ScalarString=\"row_number\"><Sequence FunctionName=\"row_number\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"61\" PhysicalOp=\"Segment\" LogicalOp=\"Segment\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.000113842\" AvgRowSize=\"4557\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/><ColumnReference Column=\"Expr1053\"/><ColumnReference Column=\"Expr1057\"/><ColumnReference Column=\"Expr1058\"/><ColumnReference Column=\"Segment1167\"/></OutputList><Segment><GroupBy/><SegmentColumn><ColumnReference Column=\"Segment1167\"/></SegmentColumn><RelOp NodeId=\"62\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.00056921\" AvgRowSize=\"4573\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/><ColumnReference Column=\"Expr1053\"/><ColumnReference Column=\"Expr1057\"/><ColumnReference Column=\"Expr1058\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1053\"/><ScalarOperator ScalarString=\"[Expr1052]\"><Identifier><ColumnReference Column=\"Expr1052\"/></Identifier></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1058\"/><ScalarOperator ScalarString=\"[Expr1057]\"><Identifier><ColumnReference Column=\"Expr1057\"/></Identifier></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"63\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"5692.1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.138654\" AvgRowSize=\"4561\" EstimatedTotalSubtreeCost=\"11420.4\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/><ColumnReference Column=\"Expr1057\"/></OutputList><MemoryFractions Input=\"0.328026\" Output=\"0.328026\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1052\"/></OrderByColumn><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1057\"/></OrderByColumn></OrderBy><RelOp NodeId=\"64\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4561\" EstimatedTotalSubtreeCost=\"11420.3\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/><ColumnReference Column=\"Expr1057\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"65\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4557\" EstimatedTotalSubtreeCost=\"5726.02\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Column=\"Expr1052\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"66\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Inner Join\" EstimateRows=\"5692.1\" EstimateIO=\"0\" EstimateCPU=\"0.023793\" AvgRowSize=\"4549\" EstimatedTotalSubtreeCost=\"31.7762\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Column=\"Expr1044\"/></OuterReferences><RelOp NodeId=\"67\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"31.6228\" EstimateIO=\"0\" EstimateCPU=\"1e-005\" AvgRowSize=\"4097\" EstimatedTotalSubtreeCost=\"0.000110157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Column=\"Expr1044\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1044\"/><ScalarOperator ScalarString=\"CONVERT(xml,SYSRINGBUFFERS.[record],0)\"><Convert DataType=\"xml\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"68\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"100\" EstimateIO=\"0\" EstimateCPU=\"0.000100157\" AvgRowSize=\"3145\" EstimatedTotalSubtreeCost=\"0.000100157\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"ring_buffer_type\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSRINGBUFFERS]\" Column=\"record\"/></DefinedValue></DefinedValues><Object Table=\"[SYSRINGBUFFERS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"N'RING_BUFFER_EXCEPTION'\"><Const ConstValue=\"N'RING_BUFFER_EXCEPTION'\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><RelOp NodeId=\"69\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"180\" EstimateIO=\"0\" EstimateCPU=\"9.6e-005\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7523\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><Filter StartupExpression=\"1\"><RelOp NodeId=\"70\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"200\" EstimateIO=\"0\" EstimateCPU=\"1.004\" AvgRowSize=\"461\" EstimatedTotalSubtreeCost=\"31.7493\" Parallel=\"0\" EstimateRebinds=\"25.9994\" EstimateRewinds=\"4.62341\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1044]\"><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"[Expr1044] IS NOT NULL\"><Compare CompareOp=\"IS NOT\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp><RelOp NodeId=\"71\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1052\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1052\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1044] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"72\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"73\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1044]\"><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp><RelOp NodeId=\"74\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1057\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1057\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1044] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(int,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(int,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"75\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"76\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1044]\"><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Sort></RelOp></ComputeScalar></RelOp></Segment></RelOp></SequenceProject></RelOp><RelOp NodeId=\"77\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.1e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1078\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1078\"/><ScalarOperator ScalarString=\"MIN(CASE WHEN [Expr1044] IS NULL THEN NULL ELSE CASE WHEN datalength(XML Reader with XPath filter.[value])&gt;=(128) THEN CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[lvalue],0) ELSE CONVERT_IMPLICIT(bigint,XML Reader with XPath filter.[value],0) END END)\"><Aggregate Distinct=\"0\" AggType=\"MIN\"><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Then><Else><ScalarOperator><IF><Condition><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Intrinsic FunctionName=\"datalength\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(128)\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Then><Else><ScalarOperator><Convert DataType=\"bigint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Else></IF></ScalarOperator></Else></IF></ScalarOperator></Aggregate></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"78\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.224e-005\" AvgRowSize=\"8045\" EstimatedTotalSubtreeCost=\"5694.22\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"79\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"18\" EstimateIO=\"0\" EstimateCPU=\"1.00036\" AvgRowSize=\"8497\" EstimatedTotalSubtreeCost=\"5694.15\" Parallel=\"0\" EstimateRebinds=\"5686.46\" EstimateRewinds=\"4.63473\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"lvalue\"/></DefinedValue></DefinedValues><Object Table=\"[XML Reader with XPath filter]\"/><ParameterList><ScalarOperator ScalarString=\"[Expr1044]\"><Identifier><ColumnReference Column=\"Expr1044\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(7)\"><Const ConstValue=\"(7)\"/></ScalarOperator><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]\"><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"getdescendantlimit(XML Reader with XPath filter.[id])\"><Intrinsic FunctionName=\"getdescendantlimit\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"XML Reader with XPath filter.[id]=getancestor(XML Reader with XPath filter.[id],(1))\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Intrinsic FunctionName=\"getancestor\"><ScalarOperator><Identifier><ColumnReference Table=\"[XML Reader with XPath filter]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Intrinsic></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></NestedLoops></RelOp></Spool></RelOp></NestedLoops></RelOp><RelOp NodeId=\"80\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"13213\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.830349\" AvgRowSize=\"2063\" EstimatedTotalSubtreeCost=\"0.859427\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Union1130\"/><ColumnReference Column=\"Union1134\"/></OutputList><MemoryFractions Input=\"0.348051\" Output=\"0.348051\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Union1130\"/></OrderByColumn></OrderBy><RelOp NodeId=\"81\" PhysicalOp=\"Concatenation\" LogicalOp=\"Concatenation\" EstimateRows=\"13213\" EstimateIO=\"0\" EstimateCPU=\"0.0013213\" AvgRowSize=\"2063\" EstimatedTotalSubtreeCost=\"0.017817\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Union1130\"/><ColumnReference Column=\"Union1134\"/></OutputList><Concat><DefinedValues><DefinedValue><ColumnReference Column=\"Union1130\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"id\"/><ColumnReference Table=\"[SYSERRORS]\" Column=\"message_id\"/></DefinedValue><DefinedValue><ColumnReference Column=\"Union1134\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"text\"/><ColumnReference Table=\"[SYSERRORS]\" Column=\"text\"/></DefinedValue></DefinedValues><RelOp NodeId=\"82\" PhysicalOp=\"Clustered Index Seek\" LogicalOp=\"Clustered Index Seek\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"1041\" EstimatedTotalSubtreeCost=\"0.0032831\" TableCardinality=\"0\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"id\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"text\"/></OutputList><IndexScan Ordered=\"1\" ScanDirection=\"FORWARD\" ForcedIndex=\"0\" ForceSeek=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"text\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Index=\"[clst]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><SeekPredicates><SeekPredicateNew><SeekKeys><StartRange ScanType=\"GT\"><RangeColumns><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"id\"/></RangeColumns><RangeExpressions><ScalarOperator ScalarString=\"(50000)\"><Const ConstValue=\"(50000)\"/></ScalarOperator></RangeExpressions></StartRange></SeekKeys></SeekPredicateNew></SeekPredicates><Predicate><ScalarOperator ScalarString=\"[master].[sys].[sysusermsgs].[msglangid]=(1033)\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysusermsgs]\" Column=\"msglangid\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1033)\"/></ScalarOperator></Compare></ScalarOperator></Predicate></IndexScan></RelOp><RelOp NodeId=\"83\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"13212\" EstimateIO=\"0\" EstimateCPU=\"0.0132122\" AvgRowSize=\"2063\" EstimatedTotalSubtreeCost=\"0.0132122\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSERRORS]\" Column=\"message_id\"/><ColumnReference Table=\"[SYSERRORS]\" Column=\"text\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSERRORS]\" Column=\"message_id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[SYSERRORS]\" Column=\"text\"/></DefinedValue></DefinedValues><Object Table=\"[SYSERRORS]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"(1033)\"><Const ConstValue=\"(1033)\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></Concat></RelOp></Sort></RelOp></Merge></RelOp><RelOp NodeId=\"84\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"71.2668\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"6.4788e+007\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1140\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1140\"/><ScalarOperator ScalarString=\"SYSINFO.[ms_ticks]/(1000)\"><Arithmetic Operation=\"DIV\"><ScalarOperator><Identifier><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1000)\"/></ScalarOperator></Arithmetic></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"85\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"64.788\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"6.4788e+007\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[SYSINFO]\" Column=\"ms_ticks\"/></DefinedValue></DefinedValues><Object Table=\"[SYSINFO]\"/></TableValuedFunction></RelOp></ComputeScalar></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></QueryPlan></StmtSimple></Statements></Batch></BatchSequence></ShowPlanXML>","text":"-- /home/bwunder/sqlpal/scripts/ringExceptions.sql\nWITH ExceptionCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]\n         , Data.ring_buffer_type AS [Type]\n         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]\n         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]\n         , Buffer.Record.value('@id', 'int') AS [Id]\n         , Data.EventXML\n    FROM (SELECT CAST(Record AS XML) AS EventXML\n               , ring_buffer_type\n          FROM sys.dm_os_ring_buffers\n          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n   )\nSELECT first.[Type]\n     , summary.[Error]\n     , CASE WHEN msg.message_id IS NOT NULL\n            THEN msg.text\n            ELSE 'no sys.messages row for Error'\n            END AS [External Message Info]\n     , summary.[count]\n     , DATEADD( second\n               , first.[Time] - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [FirstTime]\n     , DATEADD( second\n               , last.[Time]  - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Error]\n            , COUNT(*) AS [count]\n            , MIN(RowNumber) AS [FirstRow]\n            , MAX(RowNumber) AS [LastRow]\n       FROM ExceptionCte\n       GROUP BY [Error] ) AS [summary]\nJOIN ExceptionCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN ExceptionCTE AS last\nON last.RowNumber = summary.[LastRow]\nLEFT JOIN sys.messages msg\nON summary.Error = msg.message_id\nAND msg.language_id = 1033\nCROSS JOIN sys.dm_os_sys_info AS info\nORDER BY [Error];\n"},{"avg_logical_reads":"47","avg_logical_writes":"0","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":36,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"(@1 varchar(8000))SELECT [name],[value] FROM [sys].[extended_properties] WHERE [name]=@1\" StatementId=\"1\" StatementCompId=\"1\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.00328328\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"TRIVIAL\" QueryHash=\"0x2BA81DFA5D42DA17\" QueryPlanHash=\"0xD119E51F5B7ADA44\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan NonParallelPlanReason=\"CouldNotGenerateValidParallelPlan\" CachedPlanSize=\"24\" CompileTime=\"2\" CompileCPU=\"2\" CompileMemory=\"208\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4706904\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.8e-007\" AvgRowSize=\"4149\" EstimatedTotalSubtreeCost=\"0.00328328\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"name\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"value\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"1\" PhysicalOp=\"Clustered Index Scan\" LogicalOp=\"Clustered Index Scan\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"4154\" EstimatedTotalSubtreeCost=\"0.0032831\" TableCardinality=\"0\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"class\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"id\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"name\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"value\"/></OutputList><IndexScan Ordered=\"0\" ForcedIndex=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"class\"/></DefinedValue><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"name\"/></DefinedValue><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"value\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Index=\"[clust]\" Alias=\"[p]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><Predicate><ScalarOperator ScalarString=\"[master].[sys].[sysxprops].[name] as [p].[name]=CONVERT_IMPLICIT(nvarchar(4000),[@1],0)\"><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"name\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1002\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"8000\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"@1\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Compare></ScalarOperator></Predicate></IndexScan></RelOp><Predicate><ScalarOperator ScalarString=\"has_access('EP',CONVERT_IMPLICIT(int,[master].[sys].[sysxprops].[class] as [p].[class],0),[master].[sys].[sysxprops].[id] as [p].[id])=(1)\"><Compare CompareOp=\"EQ\"><ScalarOperator><Intrinsic FunctionName=\"has_access\"><ScalarOperator><Const ConstValue=\"'EP'\"/></ScalarOperator><ScalarOperator><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"class\"/></Identifier></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysxprops]\" Alias=\"[p]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"\"/></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp><ParameterList><ColumnReference Column=\"@1\" ParameterDataType=\"varchar(8000)\" ParameterCompiledValue=\"'MS_SQLCEIPSERVICESETTINGS'\"/></ParameterList></QueryPlan></StmtSimple></Statements></Batch></BatchSequence></ShowPlanXML>","text":"(@1 varchar(8000))SELECT [name],[value] FROM [sys].[extended_properties] WHERE [name]=@1"},{"avg_logical_reads":"3","avg_logical_writes":"0","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":6050,"query_plan":"<ShowPlanXML xmlns=\"http://schemas.microsoft.com/sqlserver/2004/07/showplan\" Version=\"1.6\" Build=\"14.0.900.75\"><BatchSequence><Batch><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;---------------------------- sp_configure ------------------------------&#x0D;&#x0A;create procedure sys.sp_configure&#x0D;&#x0A;    @configname   varchar(35) = null   -- option name to configure&#x0D;&#x0A;   ,@configvalue  int         = null   -- new configuration value&#x0D;&#x0A;as&#x0D;&#x0A;&#x09;set nocount on&#x0D;&#x0A;&#x0D;&#x0A;&#x09;\" StatementId=\"1\" StatementCompId=\"3\" StatementType=\"SET ON/OFF\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"declare&#x0D;&#x0A;&#x09;&#x09;@confignum                smallint   --Num of the opt to be configured&#x0D;&#x0A;&#x09;   ,@configcount              int   --Num of options like @configname&#x0D;&#x0A;&#x09;   ,@show_advance             int   --Y/N Read&amp;Write actions on &quot;advanced&quot; opts&#x0D;&#x0A;&#x09;   ,@prevvalue                int&#x0D;&#x0A;&#x09;   ,@confignameIn             varchar(35)&#x0D;&#x0A;&#x09;    &#x0D;&#x0A;&#x09;select @confignameIn = @configname&#x0D;&#x0A;&#x09;&#x09;   ,@configname = lower(@configname collate Latin1_General_CI_AS)\" StatementId=\"2\" StatementCompId=\"4\" StatementType=\"ASSIGN\" RetrievedFromCache=\"true\"/><StmtCond StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Determine @maxnumber based on advance option in syscurconfigs.&#x0D;&#x0A;&#x09;if (select value_in_use from sys.configurations where configuration_id = 518) = 1\" StatementId=\"3\" StatementCompId=\"5\" StatementType=\"COND WITH QUERY\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"1.9656e-005\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x71F784306194E66F\" QueryPlanHash=\"0xE0D5441F2FDDCC0D\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><Condition><QueryPlan CachedPlanSize=\"56\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"928\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"1.9656e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1008\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"CASE WHEN CONVERT(sql_variant,CFGPROP.[value],0)=1 THEN (1) ELSE (0) END\"><IF><Condition><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"1\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Else></IF></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Outer Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"4.18e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"1.9556e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></OutputList><NestedLoops Optimized=\"0\"><RelOp NodeId=\"2\" PhysicalOp=\"Constant Scan\" LogicalOp=\"Constant Scan\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><ConstantScan/></RelOp><RelOp NodeId=\"3\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"6.162e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"1.4219e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"4\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"7.9\" EstimateIO=\"0\" EstimateCPU=\"8.057e-006\" AvgRowSize=\"15\" EstimatedTotalSubtreeCost=\"8.057e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"(518)\"><Const ConstValue=\"(518)\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Predicate></Filter></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></QueryPlan></Condition><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;   select @show_advance = 1\" StatementId=\"4\" StatementCompId=\"6\" StatementType=\"ASSIGN\" RetrievedFromCache=\"true\"/></Statements></Then><Else><Statements><StmtSimple StatementText=\"   -- Display advanced options&#x0D;&#x0A;&#x09;else&#x0D;&#x0A;&#x09;   select @show_advance = 0\" StatementId=\"5\" StatementCompId=\"9\" StatementType=\"ASSIGN\" RetrievedFromCache=\"true\"/></Statements></Else></StmtCond><StmtCond StatementText=\"   -- Don't display advanced options&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If no option name is given, the procedure will just print out all the&#x0D;&#x0A;&#x09;--  options and their values.&#x0D;&#x0A;&#x09;if @configname is NULL\" StatementId=\"6\" StatementCompId=\"11\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;select name,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, minimum) as minimum,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, maximum) as maximum,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, isnull(value, value_in_use)) as config_value,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, value_in_use) as run_value&#x0D;&#x0A;&#x09;&#x09;from  sys.configurations&#x0D;&#x0A;&#x09;&#x09;where (is_advanced = 0 or @show_advance = 1)&#x0D;&#x0A;&#x09;&#x09;order by lower(name)\" StatementId=\"7\" StatementCompId=\"12\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.0240519\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x1A60A2992151BC3C\" QueryPlanHash=\"0x8D855E51956B0354\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"40\" CompileTime=\"10\" CompileCPU=\"8\" CompileMemory=\"1136\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[minval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[maxval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"512\" SerialDesiredMemory=\"544\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><OptimizerStatsUsage><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[clst]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000004_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000003_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000002_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/></OptimizerStatsUsage><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Sort\" LogicalOp=\"Sort\" EstimateRows=\"1\" EstimateIO=\"0.0112613\" EstimateCPU=\"0.000100099\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"0.0240519\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/></OutputList><MemoryFractions Input=\"1\" Output=\"1\"/><Sort Distinct=\"0\"><OrderBy><OrderByColumn Ascending=\"1\"><ColumnReference Column=\"Expr1011\"/></OrderByColumn></OrderBy><RelOp NodeId=\"1\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"99\" EstimatedTotalSubtreeCost=\"0.0126906\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"CONVERT(int,isnull([master].[sys].[sysobjvalues].[value] as [v].[value],[Expr1013]),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Intrinsic FunctionName=\"isnull\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"2\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Outer Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"2.25629e-005\" AvgRowSize=\"8115\" EstimatedTotalSubtreeCost=\"0.0126905\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"3\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"5.39781\" EstimateIO=\"0\" EstimateCPU=\"0.00013272\" AvgRowSize=\"4109\" EstimatedTotalSubtreeCost=\"0.000219777\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/><ColumnReference Column=\"Expr1013\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"4\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9e-006\" AvgRowSize=\"4113\" EstimatedTotalSubtreeCost=\"8.7057e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1011\"/><ColumnReference Column=\"Expr1013\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[minval],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[maxval],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1010\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[value],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1011\"/><ScalarOperator ScalarString=\"lower(CFGPROP.[name])\"><Intrinsic FunctionName=\"lower\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"CONVERT(sql_variant,CFGPROP.[value],0)\"><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"5\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"66\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"(CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><RelOp NodeId=\"6\" PhysicalOp=\"Clustered Index Seek\" LogicalOp=\"Clustered Index Seek\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"4019\" EstimatedTotalSubtreeCost=\"0.0124481\" TableCardinality=\"567\" Parallel=\"0\" EstimateRebinds=\"4.39781\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></OutputList><IndexScan Ordered=\"1\" ScanDirection=\"FORWARD\" ForcedIndex=\"0\" ForceSeek=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Index=\"[clst]\" Alias=\"[v]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType=\"EQ\"><RangeColumns><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valclass\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"objid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"subobjid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valnum\"/></RangeColumns><RangeExpressions><ScalarOperator ScalarString=\"(50)\"><Const ConstValue=\"(50)\"/></ScalarOperator><ScalarOperator ScalarString=\"CFGPROP.[id]\"><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates></IndexScan></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp></Sort></RelOp></QueryPlan></StmtSimple><StmtSimple StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;&#x09;return (0)\" StatementId=\"8\" StatementCompId=\"13\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Use @configname and try to find the right option.&#x0D;&#x0A;&#x09;--  If there isn't just one, print appropriate diagnostics and return.&#x0D;&#x0A;&#x09;select @configcount = count(*)&#x0D;&#x0A;&#x09;from sys.configurations&#x0D;&#x0A;&#x09;where lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'&#x0D;&#x0A;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"9\" StatementCompId=\"15\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.000284592\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xC1175B7C92338EBC\" QueryPlanHash=\"0x84921440C2662387\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"24\" CompileTime=\"2\" CompileCPU=\"2\" CompileMemory=\"1000\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"0.000284592\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1007\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1018],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1018\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.61511e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"0.000284592\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1018\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1018\"/><ScalarOperator ScalarString=\"Count(*)\"><Aggregate AggType=\"countstar\" Distinct=\"0\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"2\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1.85851\" EstimateIO=\"0\" EstimateCPU=\"0.00020382\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"0.000282977\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><Filter StartupExpression=\"0\"><RelOp NodeId=\"3\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"50\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"lower(CONVERT(nvarchar(35),CFGPROP.[name],0)) like CONVERT_IMPLICIT(nvarchar(37),'%'+[@configname]+'%',0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Intrinsic FunctionName=\"like\"><ScalarOperator><Intrinsic FunctionName=\"lower\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1008\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"74\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple><StmtCond StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If no option, print an error message.&#x0D;&#x0A;&#x09;if @configcount = 0\" StatementId=\"10\" StatementCompId=\"16\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;-- If exist but not used in matrix, print MATRIX1_NOT_AVAILABLE &#x0D;&#x0A;&#x09;&#x09;select @configcount = count(*)&#x0D;&#x0A;&#x09;&#x09;from sys.configurations$&#x0D;&#x0A;&#x09;&#x09;where lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'&#x0D;&#x0A;&#x09;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"11\" StatementCompId=\"17\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.000238668\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x94AC2599E658FA04\" QueryPlanHash=\"0x84921440C2662387\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"960\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"0.000238668\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1007\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(int,[Expr1017],0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1017\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Stream Aggregate\" LogicalOp=\"Aggregate\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"3.09075e-006\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"0.000238668\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1017\"/></OutputList><StreamAggregate><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1017\"/><ScalarOperator ScalarString=\"Count(*)\"><Aggregate AggType=\"countstar\" Distinct=\"0\"/></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"2\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"4.31791\" EstimateIO=\"0\" EstimateCPU=\"0.00015642\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"0.000235577\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><Filter StartupExpression=\"0\"><RelOp NodeId=\"3\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"50\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"lower(CONVERT(nvarchar(35),CFGPROP.[name],0)) like CONVERT_IMPLICIT(nvarchar(37),'%'+[@configname]+'%',0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1))\"><Logical Operation=\"AND\"><ScalarOperator><Intrinsic FunctionName=\"like\"><ScalarOperator><Intrinsic FunctionName=\"lower\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1008\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"74\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp></StreamAggregate></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;if @configcount &lt;&gt; 0\" StatementId=\"12\" StatementCompId=\"18\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;&#x09;if ServerProperty('IsMatrix') &lt;&gt; 0\" StatementId=\"13\" StatementCompId=\"19\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;&#x09;&#x09;raiserror(28401,-1,-1,@confignameIn)&#x0D;&#x0A;&#x09;&#x09;&#x09;\" StatementId=\"14\" StatementCompId=\"20\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond></Statements></Then><Else><Statements><StmtSimple StatementText=\"end&#x0D;&#x0A;&#x09;&#x09;else&#x0D;&#x0A;&#x09;&#x09;&#x09;raiserror (15123,-1,-1,@confignameIn)&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"15\" StatementCompId=\"24\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/></Statements></Else></StmtCond><StmtSimple StatementText=\"return (1)\" StatementId=\"16\" StatementCompId=\"26\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If more than one option like @configname, show the duplicates and return.&#x0D;&#x0A;&#x09;if @configcount &gt; 1\" StatementId=\"17\" StatementCompId=\"28\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;raiserror (15124,-1,-1,@confignameIn)&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"18\" StatementCompId=\"29\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"print ' '&#x0D;&#x0A;&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"19\" StatementCompId=\"30\" StatementType=\"PRINT\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"select duplicate_options = name&#x0D;&#x0A;&#x09;&#x09;from sys.configurations&#x0D;&#x0A;&#x09;&#x09;where lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%' &#x0D;&#x0A;&#x09;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"20\" StatementCompId=\"31\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.000282977\" StatementEstRows=\"1.85851\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0xAD7D62D67FF0C87C\" QueryPlanHash=\"0xB504A51A43325688\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"960\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1.85851\" EstimateIO=\"0\" EstimateCPU=\"0.00020382\" AvgRowSize=\"46\" EstimatedTotalSubtreeCost=\"0.000282977\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"1\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"50\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp><Predicate><ScalarOperator ScalarString=\"lower(CONVERT(nvarchar(35),CFGPROP.[name],0)) like CONVERT_IMPLICIT(nvarchar(37),'%'+[@configname]+'%',0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Intrinsic FunctionName=\"like\"><ScalarOperator><Intrinsic FunctionName=\"lower\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1007\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"74\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1011\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple><StmtSimple StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;  return (1)\" StatementId=\"21\" StatementCompId=\"32\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then><Else><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x09;else&#x0D;&#x0A;&#x09;&#x09;-- There must be exactly one, so get the full name.&#x0D;&#x0A;&#x09;&#x09;select @configname = name&#x0D;&#x0A;&#x09;&#x09;from sys.configurations&#x0D;&#x0A;&#x09;&#x09;where lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'&#x0D;&#x0A;&#x09;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"22\" StatementCompId=\"35\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.000290877\" StatementEstRows=\"1.85851\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x0441DEA70BCE5F13\" QueryPlanHash=\"0x0AA7E138C069E029\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"976\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1.85851\" EstimateIO=\"0\" EstimateCPU=\"0.00020382\" AvgRowSize=\"28\" EstimatedTotalSubtreeCost=\"0.000290877\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1007\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"1\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9e-006\" AvgRowSize=\"69\" EstimatedTotalSubtreeCost=\"8.7057e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(varchar(35),CFGPROP.[name],0)\"><Convert DataType=\"varchar\" Length=\"35\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"2\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"50\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"lower(CONVERT(nvarchar(35),CFGPROP.[name],0)) like CONVERT_IMPLICIT(nvarchar(37),'%'+[@configname]+'%',0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Intrinsic FunctionName=\"like\"><ScalarOperator><Intrinsic FunctionName=\"lower\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1008\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"74\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Arithmetic Operation=\"ADD\"><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Arithmetic></ScalarOperator><ScalarOperator><Const ConstValue=\"'%'\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Intrinsic></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple></Statements></Else></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If @configvalue is NULL, just show the current state of the option.&#x0D;&#x0A;&#x09;if @configvalue is null\" StatementId=\"23\" StatementCompId=\"37\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x0D;&#x0A;&#x09;&#x09;select name,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, minimum) as minimum,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, maximum) as maximum,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, isnull(value, value_in_use)) as config_value,&#x0D;&#x0A;&#x09;&#x09;&#x09;convert(int, value_in_use) as run_value&#x0D;&#x0A;&#x09;&#x09;from sys.configurations&#x0D;&#x0A;&#x09;&#x09;where (name collate Latin1_General_CI_AS) = @configname&#x0D;&#x0A;&#x09;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"24\" StatementCompId=\"38\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.00526438\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x65077183403531B9\" QueryPlanHash=\"0x4BBB058F66C70C85\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"40\" CompileTime=\"3\" CompileCPU=\"3\" CompileMemory=\"1120\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[minval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[maxval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[value],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><OptimizerStatsUsage><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[clst]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000004_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000003_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000002_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/></OptimizerStatsUsage><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"62\" EstimatedTotalSubtreeCost=\"0.00526438\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1009\"/><ColumnReference Column=\"Expr1010\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1009\"/><ScalarOperator ScalarString=\"CONVERT(int,isnull([master].[sys].[sysobjvalues].[value] as [v].[value],[Expr1013]),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Intrinsic FunctionName=\"isnull\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1013\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Outer Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"8.63175e-006\" AvgRowSize=\"8078\" EstimatedTotalSubtreeCost=\"0.00526428\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1013\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"2\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"2.06501\" EstimateIO=\"0\" EstimateCPU=\"0.00016432\" AvgRowSize=\"4072\" EstimatedTotalSubtreeCost=\"0.000251377\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1013\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"3\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9e-006\" AvgRowSize=\"4076\" EstimatedTotalSubtreeCost=\"8.7057e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/><ColumnReference Column=\"Expr1010\"/><ColumnReference Column=\"Expr1013\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[minval],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[maxval],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1010\"/><ScalarOperator ScalarString=\"CONVERT(int,CONVERT(sql_variant,CFGPROP.[value],0),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1013\"/><ScalarOperator ScalarString=\"CONVERT(sql_variant,CFGPROP.[value],0)\"><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"4\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"66\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"CONVERT(nvarchar(35),CFGPROP.[name],0)=CONVERT_IMPLICIT(nvarchar(35),[@configname],0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1011\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><RelOp NodeId=\"5\" PhysicalOp=\"Clustered Index Seek\" LogicalOp=\"Clustered Index Seek\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"4019\" EstimatedTotalSubtreeCost=\"0.00500427\" TableCardinality=\"567\" Parallel=\"0\" EstimateRebinds=\"1.06501\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></OutputList><IndexScan Ordered=\"1\" ScanDirection=\"FORWARD\" ForcedIndex=\"0\" ForceSeek=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Index=\"[clst]\" Alias=\"[v]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType=\"EQ\"><RangeColumns><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valclass\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"objid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"subobjid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valnum\"/></RangeColumns><RangeExpressions><ScalarOperator ScalarString=\"(50)\"><Const ConstValue=\"(50)\"/></ScalarOperator><ScalarOperator ScalarString=\"CFGPROP.[id]\"><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates></IndexScan></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/></ParameterList></QueryPlan></StmtSimple><StmtSimple StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;   return (0)\" StatementId=\"25\" StatementCompId=\"39\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Check Permissions&#x0D;&#x0A;&#x09;if (not has_perms_by_name(NULL,NULL,'alter settings') = 1)\" StatementId=\"26\" StatementCompId=\"41\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;raiserror(15247,-1,-1)&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"27\" StatementCompId=\"42\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"28\" StatementCompId=\"43\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Now get the configuration number.&#x0D;&#x0A;&#x09;select @confignum = configuration_id, @prevvalue = convert(int, isnull(value, value_in_use))&#x0D;&#x0A;&#x09;from  sys.configurations&#x0D;&#x0A;&#x09;where (@configvalue = 0 or convert(sql_variant, @configvalue) between minimum and maximum)&#x0D;&#x0A;&#x09;&#x09;and (name collate Latin1_General_CI_AS) = @configname&#x0D;&#x0A;&#x09;&#x09;and (is_advanced = 0 or @show_advance = 1)\" StatementId=\"29\" StatementCompId=\"45\" StatementType=\"SELECT\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"0.00362566\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x3505FFE9573C5196\" QueryPlanHash=\"0x4BBB058F66C70C85\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><QueryPlan CachedPlanSize=\"40\" CompileTime=\"3\" CompileCPU=\"3\" CompileMemory=\"1152\"><Warnings><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[minval],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[value],0)\"/><PlanAffectingConvert ConvertIssue=\"Cardinality Estimate\" Expression=\"CONVERT(sql_variant,CFGPROP.[maxval],0)\"/></Warnings><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><OptimizerStatsUsage><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[clst]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000004_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000003_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/><StatisticsInfo LastUpdate=\"2018-01-04T15:11:07.69\" ModificationCount=\"0\" SamplingPercent=\"100\" Statistics=\"[_WA_Sys_00000002_0000003C]\" Table=\"[sysobjvalues]\" Schema=\"[sys]\" Database=\"[master]\"/></OptimizerStatsUsage><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"13\" EstimatedTotalSubtreeCost=\"0.00362566\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1008\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1008\"/><ScalarOperator ScalarString=\"CONVERT(int,isnull([master].[sys].[sysobjvalues].[value] as [v].[value],[Expr1014]),0)\"><Convert DataType=\"int\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Intrinsic FunctionName=\"isnull\"><ScalarOperator><Identifier><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></Identifier></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"Expr1014\"/></Identifier></ScalarOperator></Intrinsic></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Outer Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"4.18e-006\" AvgRowSize=\"8031\" EstimatedTotalSubtreeCost=\"0.00362556\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1014\"/></OutputList><NestedLoops Optimized=\"0\"><OuterReferences><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></OuterReferences><RelOp NodeId=\"2\" PhysicalOp=\"Filter\" LogicalOp=\"Filter\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"0.00025122\" AvgRowSize=\"4025\" EstimatedTotalSubtreeCost=\"0.000338277\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1014\"/></OutputList><Filter StartupExpression=\"0\"><RelOp NodeId=\"3\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9e-006\" AvgRowSize=\"4074\" EstimatedTotalSubtreeCost=\"8.7057e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/><ColumnReference Column=\"Expr1007\"/><ColumnReference Column=\"Expr1014\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1007\"/><ScalarOperator ScalarString=\"CONVERT_IMPLICIT(smallint,CFGPROP.[id],0)\"><Convert DataType=\"smallint\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue><DefinedValue><ColumnReference Column=\"Expr1014\"/><ScalarOperator ScalarString=\"CONVERT(sql_variant,CFGPROP.[value],0)\"><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></Identifier></ScalarOperator></Convert></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"4\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"79\" EstimateIO=\"0\" EstimateCPU=\"7.9157e-005\" AvgRowSize=\"66\" EstimatedTotalSubtreeCost=\"7.9157e-005\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></OutputList><TableValuedFunction><DefinedValues><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"value\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></DefinedValue><DefinedValue><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></DefinedValue></DefinedValues><Object Table=\"[CFGPROP]\"/><ParameterList><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></ComputeScalar></RelOp><Predicate><ScalarOperator ScalarString=\"([@configvalue]=(0) OR CONVERT(sql_variant,[@configvalue],0)&gt;=CONVERT(sql_variant,CFGPROP.[minval],0) AND CONVERT(sql_variant,[@configvalue],0)&lt;=CONVERT(sql_variant,CFGPROP.[maxval],0)) AND CONVERT(nvarchar(35),CFGPROP.[name],0)=CONVERT_IMPLICIT(nvarchar(35),[@configname],0) AND (CONVERT(bit,CFGPROP.[status]&amp;(2),0)=(0) OR [@show_advance]=(1)) AND CONVERT(bit,CFGPROP.[status]&amp;(4),0)=(0)\"><Logical Operation=\"AND\"><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1009\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator><ScalarOperator><Logical Operation=\"AND\"><ScalarOperator><Compare CompareOp=\"GE\"><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1010\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"minval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Compare CompareOp=\"LE\"><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1011\"><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator><ScalarOperator><Convert DataType=\"sql_variant\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"maxval\"/></Identifier></ScalarOperator></Convert></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"name\"/></Identifier></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1012\"><ScalarOperator><Convert DataType=\"nvarchar\" Length=\"70\" Style=\"0\" Implicit=\"1\"><ScalarOperator><Identifier><ColumnReference Column=\"@configname\"/></Identifier></ScalarOperator></Convert></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Logical Operation=\"OR\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(2)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator><ScalarOperator><Identifier><ColumnReference Column=\"ConstExpr1013\"><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Identifier><ColumnReference Column=\"@show_advance\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Compare></ScalarOperator></ColumnReference></Identifier></ScalarOperator></Logical></ScalarOperator><ScalarOperator><Compare CompareOp=\"EQ\"><ScalarOperator><Convert DataType=\"bit\" Style=\"0\" Implicit=\"0\"><ScalarOperator><Arithmetic Operation=\"BIT_AND\"><ScalarOperator><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"status\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"(4)\"/></ScalarOperator></Arithmetic></ScalarOperator></Convert></ScalarOperator><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Compare></ScalarOperator></Logical></ScalarOperator></Predicate></Filter></RelOp><RelOp NodeId=\"5\" PhysicalOp=\"Clustered Index Seek\" LogicalOp=\"Clustered Index Seek\" EstimateRows=\"1\" EstimatedRowsRead=\"1\" EstimateIO=\"0.003125\" EstimateCPU=\"0.0001581\" AvgRowSize=\"4019\" EstimatedTotalSubtreeCost=\"0.0032831\" TableCardinality=\"567\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></OutputList><IndexScan Ordered=\"1\" ScanDirection=\"FORWARD\" ForcedIndex=\"0\" ForceSeek=\"0\" ForceScan=\"0\" NoExpandHint=\"0\" Storage=\"RowStore\"><DefinedValues><DefinedValue><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"value\"/></DefinedValue></DefinedValues><Object Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Index=\"[clst]\" Alias=\"[v]\" IndexKind=\"Clustered\" Storage=\"RowStore\"/><SeekPredicates><SeekPredicateNew><SeekKeys><Prefix ScanType=\"EQ\"><RangeColumns><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valclass\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"objid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"subobjid\"/><ColumnReference Database=\"[master]\" Schema=\"[sys]\" Table=\"[sysobjvalues]\" Alias=\"[v]\" Column=\"valnum\"/></RangeColumns><RangeExpressions><ScalarOperator ScalarString=\"(50)\"><Const ConstValue=\"(50)\"/></ScalarOperator><ScalarOperator ScalarString=\"CFGPROP.[id]\"><Identifier><ColumnReference Table=\"[CFGPROP]\" Column=\"id\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator></RangeExpressions></Prefix></SeekKeys></SeekPredicateNew></SeekPredicates></IndexScan></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configname\" ParameterDataType=\"varchar(35)\" ParameterCompiledValue=\"'ap_cmd'\"/><ColumnReference Column=\"@configvalue\" ParameterDataType=\"int\" ParameterCompiledValue=\"NULL\"/></ParameterList></QueryPlan></StmtSimple><StmtCond StatementText=\"&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If this is the number of default language, we want to make sure&#x0D;&#x0A;&#x09;--  that the new value is a valid language id in Syslanguages.&#x0D;&#x0A;&#x09;if @confignum = 124\" StatementId=\"30\" StatementCompId=\"46\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;if not exists (select * from sys.syslanguages&#x0D;&#x0A;&#x09;&#x09;&#x09; where langid = @configvalue)\" StatementId=\"31\" StatementCompId=\"47\" StatementType=\"COND WITH QUERY\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"6.594e-006\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x36C8E67381E5E6C3\" QueryPlanHash=\"0xC05302B49F97720A\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><Condition><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"968\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"6.594e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1005\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1005\"/><ScalarOperator ScalarString=\"CASE WHEN [Expr1006] IS NULL THEN (1) ELSE (0) END\"><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1006\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Else></IF></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Semi Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"4.18e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"6.494e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1006\"/></OutputList><NestedLoops Optimized=\"0\"><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1006\"/></DefinedValue></DefinedValues><ProbeColumn><ColumnReference Column=\"Expr1006\"/></ProbeColumn><RelOp NodeId=\"2\" PhysicalOp=\"Constant Scan\" LogicalOp=\"Constant Scan\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><ConstantScan/></RelOp><RelOp NodeId=\"3\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><TableValuedFunction><DefinedValues/><Object Table=\"[SYSLANG]\"/><ParameterList><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"[@configvalue]\"><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configvalue\" ParameterDataType=\"int\" ParameterCompiledValue=\"NULL\"/></ParameterList></QueryPlan></Condition><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;-- 0 is default language, us_english&#x0D;&#x0A;&#x09;&#x09;&#x09;if @configvalue &lt;&gt; 0\" StatementId=\"32\" StatementCompId=\"48\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;&#x09;raiserror(15127,-1,-1)&#x0D;&#x0A;&#x09;&#x09;&#x09;&#x09;\" StatementId=\"33\" StatementCompId=\"49\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"34\" StatementCompId=\"50\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond></Statements></Then></StmtCond></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;end&#x0D;&#x0A;&#x09;&#x09;end&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- If this is the number of kernel language, we want to make sure&#x0D;&#x0A;&#x09;--  that the new value is a valid language id in Syslanguages.&#x0D;&#x0A;&#x09;if @confignum = 132\" StatementId=\"35\" StatementCompId=\"54\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;if not exists (select * from sys.syslanguages&#x0D;&#x0A;&#x09;&#x09;&#x09;where langid = @configvalue)\" StatementId=\"36\" StatementCompId=\"55\" StatementType=\"COND WITH QUERY\" RetrievedFromCache=\"true\" StatementSubTreeCost=\"6.594e-006\" StatementEstRows=\"1\" SecurityPolicyApplied=\"false\" StatementOptmLevel=\"FULL\" QueryHash=\"0x36C8E67381E5E6C3\" QueryPlanHash=\"0xC05302B49F97720A\" StatementOptmEarlyAbortReason=\"GoodEnoughPlanFound\" CardinalityEstimationModelVersion=\"140\"><StatementSetOptions QUOTED_IDENTIFIER=\"true\" ARITHABORT=\"false\" CONCAT_NULL_YIELDS_NULL=\"true\" ANSI_NULLS=\"true\" ANSI_PADDING=\"true\" ANSI_WARNINGS=\"true\" NUMERIC_ROUNDABORT=\"false\"/><Condition><QueryPlan CachedPlanSize=\"24\" CompileTime=\"1\" CompileCPU=\"1\" CompileMemory=\"968\"><MemoryGrantInfo SerialRequiredMemory=\"0\" SerialDesiredMemory=\"0\"/><OptimizerHardwareDependentProperties EstimatedAvailableMemoryGrant=\"161792\" EstimatedPagesCached=\"40448\" EstimatedAvailableDegreeOfParallelism=\"2\" MaxCompileMemory=\"4716880\"/><TraceFlags IsCompileTime=\"1\"><TraceFlag Value=\"835\" Scope=\"Global\"/><TraceFlag Value=\"3105\" Scope=\"Global\"/><TraceFlag Value=\"5504\" Scope=\"Global\"/><TraceFlag Value=\"5521\" Scope=\"Global\"/><TraceFlag Value=\"6529\" Scope=\"Global\"/><TraceFlag Value=\"8020\" Scope=\"Global\"/><TraceFlag Value=\"8415\" Scope=\"Global\"/></TraceFlags><RelOp NodeId=\"0\" PhysicalOp=\"Compute Scalar\" LogicalOp=\"Compute Scalar\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1e-007\" AvgRowSize=\"11\" EstimatedTotalSubtreeCost=\"6.594e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1005\"/></OutputList><ComputeScalar><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1005\"/><ScalarOperator ScalarString=\"CASE WHEN [Expr1006] IS NULL THEN (1) ELSE (0) END\"><IF><Condition><ScalarOperator><Compare CompareOp=\"IS\"><ScalarOperator><Identifier><ColumnReference Column=\"Expr1006\"/></Identifier></ScalarOperator><ScalarOperator><Const ConstValue=\"NULL\"/></ScalarOperator></Compare></ScalarOperator></Condition><Then><ScalarOperator><Const ConstValue=\"(1)\"/></ScalarOperator></Then><Else><ScalarOperator><Const ConstValue=\"(0)\"/></ScalarOperator></Else></IF></ScalarOperator></DefinedValue></DefinedValues><RelOp NodeId=\"1\" PhysicalOp=\"Nested Loops\" LogicalOp=\"Left Semi Join\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"4.18e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"6.494e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList><ColumnReference Column=\"Expr1006\"/></OutputList><NestedLoops Optimized=\"0\"><DefinedValues><DefinedValue><ColumnReference Column=\"Expr1006\"/></DefinedValue></DefinedValues><ProbeColumn><ColumnReference Column=\"Expr1006\"/></ProbeColumn><RelOp NodeId=\"2\" PhysicalOp=\"Constant Scan\" LogicalOp=\"Constant Scan\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><ConstantScan/></RelOp><RelOp NodeId=\"3\" PhysicalOp=\"Table-valued function\" LogicalOp=\"Table-valued function\" EstimateRows=\"1\" EstimateIO=\"0\" EstimateCPU=\"1.157e-006\" AvgRowSize=\"9\" EstimatedTotalSubtreeCost=\"1.157e-006\" Parallel=\"0\" EstimateRebinds=\"0\" EstimateRewinds=\"0\" EstimatedExecutionMode=\"Row\"><OutputList/><TableValuedFunction><DefinedValues/><Object Table=\"[SYSLANG]\"/><ParameterList><ScalarOperator ScalarString=\"(1)\"><Const ConstValue=\"(1)\"/></ScalarOperator><ScalarOperator ScalarString=\"[@configvalue]\"><Identifier><ColumnReference Column=\"@configvalue\"/></Identifier></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator><ScalarOperator ScalarString=\"(0)\"><Const ConstValue=\"(0)\"/></ScalarOperator><ScalarOperator ScalarString=\"NULL\"><Const ConstValue=\"NULL\"/></ScalarOperator></ParameterList></TableValuedFunction></RelOp></NestedLoops></RelOp></ComputeScalar></RelOp><ParameterList><ColumnReference Column=\"@configvalue\" ParameterDataType=\"int\" ParameterCompiledValue=\"NULL\"/></ParameterList></QueryPlan></Condition><Then><Statements><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;-- 0 is default language, us_english&#x0D;&#x0A;&#x09;&#x09;&#x09;if @configvalue &lt;&gt; 0\" StatementId=\"37\" StatementCompId=\"56\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;   raiserror(15028,-1,-1)&#x0D;&#x0A;&#x09;&#x09;&#x09;   \" StatementId=\"38\" StatementCompId=\"57\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"39\" StatementCompId=\"58\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond></Statements></Then></StmtCond></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;&#x09;end&#x0D;&#x0A;&#x09;&#x09;end&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;--  &quot;user options&quot; should not try to set incompatible options/values.&#x0D;&#x0A;&#x09;if @confignum = 1534\" StatementId=\"40\" StatementCompId=\"62\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtCond StatementText=\"  --&quot;user options&quot;&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;if (@configvalue &amp; (1024+2048) = (1024+2048))\" StatementId=\"41\" StatementCompId=\"63\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\" --ansi_null_default_on/off&#x0D;&#x0A;&#x09;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;&#x09;raiserror(15303,-1,-1,@configvalue)&#x0D;&#x0A;&#x09;&#x09;&#x09;\" StatementId=\"42\" StatementCompId=\"64\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"43\" StatementCompId=\"65\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond></Statements></Then></StmtCond><StmtCond StatementText=\"&#x0D;&#x0A;&#x09;&#x09;end&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x0D;&#x0A;&#x09;-- Although the @configname is good, @configvalue wasn't in range.&#x0D;&#x0A;&#x09;if @confignum is NULL\" StatementId=\"44\" StatementCompId=\"68\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;raiserror(15129,-1,-1,@configvalue,@configname)&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"45\" StatementCompId=\"69\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (1)\" StatementId=\"46\" StatementCompId=\"70\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then></StmtCond><StmtSimple StatementText=\"** Text not available **\" StatementId=\"47\" StatementCompId=\"72\" StatementType=\"INVOKE\" RetrievedFromCache=\"true\"/><StmtCond StatementText=\"if @@error &lt;&gt; 0\" StatementId=\"48\" StatementCompId=\"73\" StatementType=\"COND\" RetrievedFromCache=\"true\"><Condition/><Then><Statements><StmtSimple StatementText=\" &#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;return (1)\" StatementId=\"49\" StatementCompId=\"74\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Then><Else><Statements><StmtSimple StatementText=\"&#x0D;&#x0A;&#x09;end&#x0D;&#x0A;&#x09;else&#x0D;&#x0A;&#x09;begin&#x0D;&#x0A;&#x09;&#x09;declare @configwname nvarchar(35), @configwvalue sql_variant&#x0D;&#x0A;&#x09;&#x09;select @configwname = @configname, &#x0D;&#x0A;&#x09;&#x09;&#x09;@configwvalue = @configvalue\" StatementId=\"50\" StatementCompId=\"77\" StatementType=\"ASSIGN\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"** Text not available **\" StatementId=\"51\" StatementCompId=\"78\" StatementType=\"INVOKE\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"raiserror(15457,-1,-1, @configname, @prevvalue, @configvalue) with log&#x0D;&#x0A;&#x09;&#x09;\" StatementId=\"52\" StatementCompId=\"79\" StatementType=\"RAISERROR\" RetrievedFromCache=\"true\"/><StmtSimple StatementText=\"return (0)\" StatementId=\"53\" StatementCompId=\"80\" StatementType=\"RETURN\" RetrievedFromCache=\"true\"/></Statements></Else></StmtCond></Statements></Batch></BatchSequence></ShowPlanXML>","text":"\r\n---------------------------- sp_configure ------------------------------\r\ncreate procedure sys.sp_configure\r\n    @configname   varchar(35) = null   -- option name to configure\r\n   ,@configvalue  int         = null   -- new configuration value\r\nas\r\n\tset nocount on\r\n\r\n\tdeclare\r\n\t\t@confignum                smallint   --Num of the opt to be configured\r\n\t   ,@configcount              int   --Num of options like @configname\r\n\t   ,@show_advance             int   --Y/N Read&Write actions on \"advanced\" opts\r\n\t   ,@prevvalue                int\r\n\t   ,@confignameIn             varchar(35)\r\n\t    \r\n\tselect @confignameIn = @configname\r\n\t\t   ,@configname = lower(@configname collate Latin1_General_CI_AS)\r\n\r\n\t-- Determine @maxnumber based on advance option in syscurconfigs.\r\n\tif (select value_in_use from sys.configurations where configuration_id = 518) = 1\r\n\t   select @show_advance = 1   -- Display advanced options\r\n\telse\r\n\t   select @show_advance = 0   -- Don't display advanced options\r\n\r\n\t-- If no option name is given, the procedure will just print out all the\r\n\t--  options and their values.\r\n\tif @configname is NULL\r\n\tbegin\r\n\t\tselect name,\r\n\t\t\tconvert(int, minimum) as minimum,\r\n\t\t\tconvert(int, maximum) as maximum,\r\n\t\t\tconvert(int, isnull(value, value_in_use)) as config_value,\r\n\t\t\tconvert(int, value_in_use) as run_value\r\n\t\tfrom  sys.configurations\r\n\t\twhere (is_advanced = 0 or @show_advance = 1)\r\n\t\torder by lower(name)\r\n\r\n\t\treturn (0)\r\n\tend\r\n\r\n\t-- Use @configname and try to find the right option.\r\n\t--  If there isn't just one, print appropriate diagnostics and return.\r\n\tselect @configcount = count(*)\r\n\tfrom sys.configurations\r\n\twhere lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'\r\n\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t-- If no option, print an error message.\r\n\tif @configcount = 0\r\n\tbegin\r\n\t\t-- If exist but not used in matrix, print MATRIX1_NOT_AVAILABLE \r\n\t\tselect @configcount = count(*)\r\n\t\tfrom sys.configurations$\r\n\t\twhere lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'\r\n\t\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\t\tif @configcount <> 0\r\n\t\t\tbegin\r\n\t\t\t\tif ServerProperty('IsMatrix') <> 0\r\n\t\t\t\t\traiserror(28401,-1,-1,@confignameIn)\r\n\t\t\tend\r\n\t\telse\r\n\t\t\traiserror (15123,-1,-1,@confignameIn)\r\n\t\treturn (1)\r\n\tend\r\n\r\n\t-- If more than one option like @configname, show the duplicates and return.\r\n\tif @configcount > 1\r\n\tbegin\r\n\t\traiserror (15124,-1,-1,@confignameIn)\r\n\t\tprint ' '\r\n\r\n\t\tselect duplicate_options = name\r\n\t\tfrom sys.configurations\r\n\t\twhere lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%' \r\n\t\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t  return (1)\r\n\tend\r\n\telse\r\n\t\t-- There must be exactly one, so get the full name.\r\n\t\tselect @configname = name\r\n\t\tfrom sys.configurations\r\n\t\twhere lower(name collate Latin1_General_CI_AS) like '%' + @configname + '%'\r\n\t\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t-- If @configvalue is NULL, just show the current state of the option.\r\n\tif @configvalue is null\r\n\tbegin\r\n\r\n\t\tselect name,\r\n\t\t\tconvert(int, minimum) as minimum,\r\n\t\t\tconvert(int, maximum) as maximum,\r\n\t\t\tconvert(int, isnull(value, value_in_use)) as config_value,\r\n\t\t\tconvert(int, value_in_use) as run_value\r\n\t\tfrom sys.configurations\r\n\t\twhere (name collate Latin1_General_CI_AS) = @configname\r\n\t\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t   return (0)\r\n\tend\r\n\r\n\t-- Check Permissions\r\n\tif (not has_perms_by_name(NULL,NULL,'alter settings') = 1)\r\n\tbegin\r\n\t\traiserror(15247,-1,-1)\r\n\t\treturn (1)\r\n\tend\r\n\r\n\t-- Now get the configuration number.\r\n\tselect @confignum = configuration_id, @prevvalue = convert(int, isnull(value, value_in_use))\r\n\tfrom  sys.configurations\r\n\twhere (@configvalue = 0 or convert(sql_variant, @configvalue) between minimum and maximum)\r\n\t\tand (name collate Latin1_General_CI_AS) = @configname\r\n\t\tand (is_advanced = 0 or @show_advance = 1)\r\n\r\n\t-- If this is the number of default language, we want to make sure\r\n\t--  that the new value is a valid language id in Syslanguages.\r\n\tif @confignum = 124\r\n\tbegin\r\n\t\tif not exists (select * from sys.syslanguages\r\n\t\t\t where langid = @configvalue)\r\n\t\tbegin\r\n\t\t\t-- 0 is default language, us_english\r\n\t\t\tif @configvalue <> 0\r\n\t\t\tbegin\r\n\t\t\t\traiserror(15127,-1,-1)\r\n\t\t\t\treturn (1)\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\r\n\t-- If this is the number of kernel language, we want to make sure\r\n\t--  that the new value is a valid language id in Syslanguages.\r\n\tif @confignum = 132\r\n\tbegin\r\n\t\tif not exists (select * from sys.syslanguages\r\n\t\t\twhere langid = @configvalue)\r\n\t\tbegin\r\n\t\t\t-- 0 is default language, us_english\r\n\t\t\tif @configvalue <> 0\r\n\t\t\tbegin\r\n\t\t\t   raiserror(15028,-1,-1)\r\n\t\t\t   return (1)\r\n\t\t\tend\r\n\t\tend\r\n\tend\r\n\r\n\t--  \"user options\" should not try to set incompatible options/values.\r\n\tif @confignum = 1534  --\"user options\"\r\n\tbegin\r\n\t\tif (@configvalue & (1024+2048) = (1024+2048)) --ansi_null_default_on/off\r\n\t\tbegin\r\n\t\t\traiserror(15303,-1,-1,@configvalue)\r\n\t\t\treturn (1)\r\n\t\tend\r\n\tend\r\n\r\n\t-- Although the @configname is good, @configvalue wasn't in range.\r\n\tif @confignum is NULL\r\n\tbegin\r\n\t\traiserror(15129,-1,-1,@configvalue,@configname)\r\n\t\treturn (1)\r\n\tend\r\n\r\n\t-- Now update sysconfigures.\r\n\tEXEC %%ServerConfiguration( ConfigID = @confignum ).SetValue( Value = @configvalue )\r\n\r\n\tif @@error <> 0 \r\n\tbegin\r\n\t\treturn (1)\r\n\tend\r\n\telse\r\n\tbegin\r\n\t\tdeclare @configwname nvarchar(35), @configwvalue sql_variant\r\n\t\tselect @configwname = @configname, \r\n\t\t\t@configwvalue = @configvalue\r\n\r\n\t\t-- EMDEventType(x_eet_Alter_Instance), EMDUniversalClass(x_eunc_Object), src major id, src minor id, src name\r\n\t\t-- -1 means ignore target stuff, target major id, target minor id, target name,\r\n\t\t-- # of parameters, 5 parameters\r\n\t\tEXEC %%System().FireTrigger(ID = 214, ID = 107, ID = 0, ID = 0, Value = NULL,\r\n\t\t\tID = -1, ID = 0, ID = 0, Value = NULL, \r\n\t\t\tID = 2, Value = @configwname, Value = @configwvalue, Value = NULL, Value = NULL, Value = NULL, Value = NULL, Value = NULL)\r\n\r\n\t\traiserror(15457,-1,-1, @configname, @prevvalue, @configvalue) with log\r\n\t\treturn (0) -- sp_configure\r\n\tend\r\n"}],"output":{},"rowsAffected":[5]}},"_id":"pdOCdQdOue8s2nwp","createdAt":{"$$date":1515102165974},"updatedAt":{"$$date":1515102165974}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":"tempdb"}]],"recordset":[{"":"tempdb"}],"output":{},"rowsAffected":[1]}},"_id":"q8ButPUCHAEzscko","createdAt":{"$$date":1512840389890},"updatedAt":{"$$date":1512840389890}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"ruVV536UESppvYEx","createdAt":{"$$date":1512929477037},"updatedAt":{"$$date":1512929477037}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"AdventureWorks2014","db_size":"    223.25 MB","owner":"sa","dbid":6,"created":"May  6 2017","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAnsiNullsEnabled, IsAnsiPaddingEnabled, IsAnsiWarningsEnabled, IsArithmeticAbortEnabled, IsAutoCreateStatistics, IsAutoUpdateStatistics, IsFullTextEnabled, IsNullConcat, IsQuotedIdentifiersEnabled","compatibility_level":120},{"name":"master","db_size":"     35.31 MB","owner":"sa","dbid":1,"created":"Apr  8 2003","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAutoCreateStatistics, IsAutoUpdateStatistics","compatibility_level":140},{"name":"model","db_size":"     16.00 MB","owner":"sa","dbid":3,"created":"Apr  8 2003","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=FULL, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAutoCreateStatistics, IsAutoUpdateStatistics","compatibility_level":140},{"name":"msdb","db_size":"     15.69 MB","owner":"sa","dbid":4,"created":"Jan 10 2017","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAutoCreateStatistics, IsAutoUpdateStatistics, IsFullTextEnabled","compatibility_level":140},{"name":"tempdb","db_size":"     16.00 MB","owner":"sa","dbid":2,"created":"Dec  9 2017","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAutoCreateStatistics, IsAutoUpdateStatistics","compatibility_level":140}]],"recordset":[{"name":"AdventureWorks2014","db_size":"    223.25 MB","owner":"sa","dbid":6,"created":"May  6 2017","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAnsiNullsEnabled, IsAnsiPaddingEnabled, IsAnsiWarningsEnabled, IsArithmeticAbortEnabled, IsAutoCreateStatistics, IsAutoUpdateStatistics, IsFullTextEnabled, IsNullConcat, IsQuotedIdentifiersEnabled","compatibility_level":120},{"name":"master","db_size":"     35.31 MB","owner":"sa","dbid":1,"created":"Apr  8 2003","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAutoCreateStatistics, IsAutoUpdateStatistics","compatibility_level":140},{"name":"model","db_size":"     16.00 MB","owner":"sa","dbid":3,"created":"Apr  8 2003","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=FULL, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAutoCreateStatistics, IsAutoUpdateStatistics","compatibility_level":140},{"name":"msdb","db_size":"     15.69 MB","owner":"sa","dbid":4,"created":"Jan 10 2017","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAutoCreateStatistics, IsAutoUpdateStatistics, IsFullTextEnabled","compatibility_level":140},{"name":"tempdb","db_size":"     16.00 MB","owner":"sa","dbid":2,"created":"Dec  9 2017","status":"Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=869, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsAutoCreateStatistics, IsAutoUpdateStatistics","compatibility_level":140}],"output":{},"rowsAffected":[]}},"_id":"rvUO2ElWnmUGQETb","createdAt":{"$$date":1512966885116},"updatedAt":{"$$date":1512966885116}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"s5Wsw5glD3tsGFok","createdAt":{"$$date":1513634950772},"updatedAt":{"$$date":1513634950772}}
{"batch":{"batch":[]},"_id":"ssYpnv22lldku9b9","createdAt":{"$$date":1512507796143},"updatedAt":{"$$date":1512507796143}}
{"batch":{"batch":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"tQP3oThmzbT5R0GA","createdAt":{"$$date":1512840741567},"updatedAt":{"$$date":1512840741567}}
{"batch":{"batch":[]},"_id":"tw1XELyioN9aVb4Q","createdAt":{"$$date":1513700718258},"updatedAt":{"$$date":1513700718258}}
{"batch":{"batch":[]},"_id":"uHvLrMavrGGnOdWh","createdAt":{"$$date":1513871470154},"updatedAt":{"$$date":1513871470154}}
{"batch":{"batch":[],"result":{"recordsets":[],"output":{},"rowsAffected":[]}},"_id":"uY5vjXhoi1JRe71q","createdAt":{"$$date":1512840340108},"updatedAt":{"$$date":1512840340108}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"public","":"ԁ\u0000\u0000ऀ\u0004\u0000璃\u001b䥧䯀䎩⟀抧"},{"name":"dbo","":"\u0001"},{"name":"guest","":"\u0000"},{"name":"INFORMATION_SCHEMA","":null},{"name":"sys","":null},{"name":"db_owner","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀀\u0000"},{"name":"db_accessadmin","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀁\u0000"},{"name":"db_securityadmin","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀂\u0000"},{"name":"db_ddladmin","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀃\u0000"},{"name":"db_backupoperator","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀅\u0000"},{"name":"db_datareader","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀆\u0000"},{"name":"db_datawriter","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀇\u0000"},{"name":"db_denydatareader","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀈\u0000"},{"name":"db_denydatawriter","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀉\u0000"}]],"recordset":[{"name":"public","":"ԁ\u0000\u0000ऀ\u0004\u0000璃\u001b䥧䯀䎩⟀抧"},{"name":"dbo","":"\u0001"},{"name":"guest","":"\u0000"},{"name":"INFORMATION_SCHEMA","":null},{"name":"sys","":null},{"name":"db_owner","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀀\u0000"},{"name":"db_accessadmin","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀁\u0000"},{"name":"db_securityadmin","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀂\u0000"},{"name":"db_ddladmin","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀃\u0000"},{"name":"db_backupoperator","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀅\u0000"},{"name":"db_datareader","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀆\u0000"},{"name":"db_datawriter","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀇\u0000"},{"name":"db_denydatareader","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀈\u0000"},{"name":"db_denydatawriter","":"ԁ\u0000\u0000ऀ\u0004\u0000\u0000\u0000\u0000\u0000\u0000\u0000䀉\u0000"}],"output":{},"rowsAffected":[14]}},"_id":"v41DNugiuGmhXWCB","createdAt":{"$$date":1513418446516},"updatedAt":{"$$date":1513418446516}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}]],"recordset":[{"name":"show advanced options","minimum":0,"maximum":1,"config_value":1,"run_value":1}],"output":{},"rowsAffected":[]}},"_id":"voSMXpGvbVmNpwqm","createdAt":{"$$date":1513701405383},"updatedAt":{"$$date":1513701405383}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"xp_cmdshell","minimum":0,"maximum":1,"config_value":0,"run_value":0}]],"recordset":[{"name":"xp_cmdshell","minimum":0,"maximum":1,"config_value":0,"run_value":0}],"output":{},"rowsAffected":[]}},"_id":"x0iWXzfxvZuPeYHw","createdAt":{"$$date":1513038591829},"updatedAt":{"$$date":1513038591829}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"xErHZmTpgGgcJV4U","createdAt":{"$$date":1513693692617},"updatedAt":{"$$date":1513693692617}}
{"batch":{"batch":[],"result":{"recordsets":[[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}]],"recordset":[{"name":"master","dbid":1,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"/var/opt/mssql/data/master.mdf","version":869},{"name":"tempdb","dbid":2,"sid":{"0":1},"mode":0,"status":65544,"status2":1090520064,"crdate":{"$$date":1512792458987},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\tempdb.mdf","version":869},{"name":"model","dbid":3,"sid":{"0":1},"mode":0,"status":65536,"status2":1090519040,"crdate":{"$$date":1049793216390},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\model.mdf","version":869},{"name":"msdb","dbid":4,"sid":{"0":1},"mode":0,"status":65544,"status2":1627390976,"crdate":{"$$date":1484082557180},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":140,"filename":"C:\\var\\opt\\mssql\\data\\MSDBData.mdf","version":869},{"name":"AdventureWorks2014","dbid":6,"sid":{"0":1},"mode":0,"status":65544,"status2":1971400704,"crdate":{"$$date":1494082740933},"reserved":{"$$date":-2208988800000},"category":0,"cmptlevel":120,"filename":"/var/opt/mssql/data/AdventureWorks2014.mdf","version":869}],"output":{},"rowsAffected":[5]}},"_id":"yUKTqCD8YURNX3qE","createdAt":{"$$date":1512966853037},"updatedAt":{"$$date":1512966853037}}
{"batch":{"batch":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"z2XRVwlQczPvT9Mc","createdAt":{"$$date":1512919170985},"updatedAt":{"$$date":1512919170985}}
{"batch":{"batch":[]},"_id":"z3C544MIq2w02tFe","createdAt":{"$$date":1514301756981},"updatedAt":{"$$date":1514301756981}}
{"batch":{"query":[],"result":{"recordsets":[[{"":1}]],"recordset":[{"":1}],"output":{},"rowsAffected":[1]}},"_id":"zPZdrHMr4ZEz3c1W","createdAt":{"$$date":1515101924760},"updatedAt":{"$$date":1515101924760}}
{"batch":{"query":[],"result":{"recordsets":[[{"avg_logical_reads":"592635","avg_logical_writes":"4787","avg_physical_reads":"8","Execution_count":"1","statement_start_offset":0,"":"\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"486799","avg_logical_writes":"3825","avg_physical_reads":"0","Execution_count":"2","statement_start_offset":108,"":"\n-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"14152","avg_logical_writes":"142","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":102,"":"\n-- /home/bwunder/sqlpal/scripts/ringExceptions.sql\nWITH ExceptionCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]\n         , Data.ring_buffer_type AS [Type]\n         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]\n         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]\n         , Buffer.Record.value('@id', 'int') AS [Id]\n         , Data.EventXML\n    FROM (SELECT CAST(Record AS XML) AS EventXML\n               , ring_buffer_type\n          FROM sys.dm_os_ring_buffers\n          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n   )\nSELECT first.[Type]\n     , summary.[Error]\n     , CASE WHEN msg.message_id IS NOT NULL\n            THEN msg.text\n            ELSE 'no sys.messages row for Error'\n            END AS [External Message Info]\n     , summary.[count]\n     , DATEADD( second\n               , first.[Time] - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [FirstTime]\n     , DATEADD( second\n               , last.[Time]  - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Error]\n            , COUNT(*) AS [count]\n            , MIN(RowNumber) AS [FirstRow]\n            , MAX(RowNumber) AS [LastRow]\n       FROM ExceptionCte\n       GROUP BY [Error] ) AS [summary]\nJOIN ExceptionCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN ExceptionCTE AS last\nON last.RowNumber = summary.[LastRow]\nLEFT JOIN sys.messages msg\nON summary.Error = msg.message_id\nAND msg.language_id = 1033\nCROSS JOIN sys.dm_os_sys_info AS info\nORDER BY [Error];\n"},{"avg_logical_reads":"709","avg_logical_writes":"103","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"":"\n-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset, CAST(p.query_plan AS XML) as query_plan, q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"},{"avg_logical_reads":"259","avg_logical_writes":"14","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"":"\n-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset,\n           -- CAST(p.query_plan AS XML) as query_plan,\n           CHAR(10) + CHAR(13) + q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"}]],"recordset":[{"avg_logical_reads":"592635","avg_logical_writes":"4787","avg_physical_reads":"8","Execution_count":"1","statement_start_offset":0,"":"\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"486799","avg_logical_writes":"3825","avg_physical_reads":"0","Execution_count":"2","statement_start_offset":108,"":"\n-- /home/bwunder/sqlpal/scripts/ringBufferSummary.sql\nWITH BufferTypeCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' )\n                                     , Data.[Address]\n                                     , Data.[Type] ) AS [RowNumber]\n          , Data.[Address]\n          , Data.[Type]\n          , DATEADD( SECOND, ( Buffer.Record.value( '@time', 'BIGINT' ) - Data.ms_ticks ) / 1000, GETDATE() ) AS [Time]\n          , Buffer.Record.value('@id', 'INT') AS [Id]\n          , Data.EventXML\n    FROM (  SELECT CAST(b.Record AS XML) AS EventXML\n             , b.ring_buffer_address AS [Address]\n             , b.ring_buffer_type AS [Type]\n             , i.ms_ticks\n        FROM sys.dm_os_ring_buffers b\n        CROSS JOIN sys.dm_os_sys_info i ) AS [Data]\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n  )\nSELECT first.[Type]\n     , summary.[count]\n     , first.[Time] AS [FirstTime]\n     , last.[Time] AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Type]\n           , COUNT( RowNumber ) AS [count]\n           , MIN( RowNumber ) AS [FirstRow]\n           , MAX( RowNumber ) AS [LastRow]\n      FROM BufferTypeCTE\n      GROUP BY [Type]\n    ) AS summary\nJOIN BufferTypeCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN BufferTypeCTE AS last\nON last.RowNumber = summary.[LastRow]\n--ORDER BY [FirstTime];\n--ORDER BY [LastTime];\nORDER BY [Type];\n"},{"avg_logical_reads":"14152","avg_logical_writes":"142","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":102,"":"\n-- /home/bwunder/sqlpal/scripts/ringExceptions.sql\nWITH ExceptionCte\nAS (\n    SELECT ROW_NUMBER() OVER (ORDER BY Buffer.Record.value( '@time', 'BIGINT' )\n                                     , Buffer.Record.value( '@id', 'INT' ) ) AS [RowNumber]\n         , Data.ring_buffer_type AS [Type]\n         , Buffer.Record.value('(Exception/Error)[1]', 'int') AS [Error]\n         , Buffer.Record.value( '@time', 'BIGINT' ) AS [time]\n         , Buffer.Record.value('@id', 'int') AS [Id]\n         , Data.EventXML\n    FROM (SELECT CAST(Record AS XML) AS EventXML\n               , ring_buffer_type\n          FROM sys.dm_os_ring_buffers\n          WHERE ring_buffer_type = 'RING_BUFFER_EXCEPTION') AS Data\n    CROSS APPLY EventXML.nodes('//Record') AS Buffer(Record)\n   )\nSELECT first.[Type]\n     , summary.[Error]\n     , CASE WHEN msg.message_id IS NOT NULL\n            THEN msg.text\n            ELSE 'no sys.messages row for Error'\n            END AS [External Message Info]\n     , summary.[count]\n     , DATEADD( second\n               , first.[Time] - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [FirstTime]\n     , DATEADD( second\n               , last.[Time]  - info.ms_ticks / 1000\n               , CURRENT_TIMESTAMP ) AS [LastTime]\n--     , first.EventXML AS [FirstRecord]\n--     , last.EventXML AS [LastRecord]\nFROM (SELECT [Error]\n            , COUNT(*) AS [count]\n            , MIN(RowNumber) AS [FirstRow]\n            , MAX(RowNumber) AS [LastRow]\n       FROM ExceptionCte\n       GROUP BY [Error] ) AS [summary]\nJOIN ExceptionCTE AS first\nON first.RowNumber = summary.[FirstRow]\nJOIN ExceptionCTE AS last\nON last.RowNumber = summary.[LastRow]\nLEFT JOIN sys.messages msg\nON summary.Error = msg.message_id\nAND msg.language_id = 1033\nCROSS JOIN sys.dm_os_sys_info AS info\nORDER BY [Error];\n"},{"avg_logical_reads":"709","avg_logical_writes":"103","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"":"\n-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset, CAST(p.query_plan AS XML) as query_plan, q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"},{"avg_logical_reads":"259","avg_logical_writes":"14","avg_physical_reads":"0","Execution_count":"1","statement_start_offset":92,"":"\n-- /home/bwunder/sqlpal/scripts/ioByQuery.sql\nselect top 5 (total_logical_reads/execution_count) as avg_logical_reads,\n                   (total_logical_writes/execution_count) as avg_logical_writes,\n           (total_physical_reads/execution_count) as avg_physical_reads,\n           Execution_count, statement_start_offset,\n           -- CAST(p.query_plan AS XML) as query_plan,\n           CHAR(10) + CHAR(13) + q.text\nfrom sys.dm_exec_query_stats\n      cross apply sys.dm_exec_query_plan(plan_handle) p\n      cross apply sys.dm_exec_sql_text(plan_handle) as q\norder by (total_logical_reads + total_logical_writes)/execution_count Desc\n"}],"output":{},"rowsAffected":[5]}},"_id":"HG0IL14a4eS83HUl","createdAt":{"$$date":1515102883516},"updatedAt":{"$$date":1515102883516}}
